%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: pub_papers_5.pdf
%%Creator: Adobe Acrobat 10.1.3
%%For: WangJingyi
%%CreationDate: 2012-5-18, 22:23:35
%%BoundingBox: 0 0 516 723
%%HiResBoundingBox: 0 0 515.8459 722.7599
%%CropBox: 0 0 515.8459 722.7599
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 828 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2012-05-18T15:30:44+08:00"
   xmp:CreateDate="2012-05-18T15:19:30+08:00"
   xmp:MetadataDate="2012-05-18T15:30:44+08:00"
   xmp:CreatorTool="VTeX PDF Tools"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:6bd4f2d1-a416-44ca-9cc4-e4c22174b59e"
   xmpMM:InstanceID="uuid:3faba568-cf7c-4095-9b5d-ce52cbd03f85"
   pdf:Producer="Acrobat Distiller 9.4.5 (Windows)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -722.76 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
7.62939e-6 0 mo
7.62939e-6 722.76 li
515.846 722.76 li
515.846 0 li
cp
clp
false sop
/0 
[/DeviceRGB] /CSA add_res
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: PBAAAA+TimesNewRomanPS-BoldMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+TimesNewRomanPS-BoldMT def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (TimesNewRomanPS-BoldMT) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 65 /A put
dup 67 /C put
dup 77 /M put
dup 78 /N put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
def
/FontBBox {-558 -307 2000 1026} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
30 dict dup begin
/hyphen <1C60D8A8C9B81F2C3A728CE9B4C36D54571D30223019EB> |-
/A <1C60D8A8C9B6079F6DDEEAF9A120BDCAFB1D0815137F3C306F3C133B415B
4B77625349C76A602D15345FAE6A3546F5B36D1B28478375F97296A3763EE3F5
2C3737CAC25B4CFDED02895A63BC711EE1A552B7BA62ECF87DD093F65A4FFF8A
005836B68072CF16838102D957524B52A1731070A5AC336AF29189211FB66690
C18FAD42A9145E3A1E54FFB5> |-
/C <1C60D8A8C9B6079F6CA7D213AED925A1CEB04D90346F9C5CC9A05389F595
C0F924DB8AB0F203E97256D67F4C68EE17E3CDD4B27B31A361DC57AB47AD0113
DB2246BDADCDD1488CF7B850D005A1810EA2191CE94EBD7EDE1895FB819CA9DD
DB367EDB7C1BB119776AD0104BC5497FE90AC3E50FAB51A09E0AC2B86E8BB99B
A4FA3490AE60978EC7832C8BB23895E95D958CB82D54E92698F817C414D68085
3886D394A5F5FC23358732A3B94BD60EC030> |-
/M <1C60D8A8C9B5D6EF42037EF8CB1D58C3B1520FAE759CBD55AED848DEBF5B
C04F5A96DDF9D44AEE96B27030E4665082FD38C1E77B3E625D115F72339BB104
9AD297E94CF95F7FA5E93AE64088982F3EAB1FD38BE8ABC4EA9CB45EB33BB1EC
97D93513A915DE0561EE6E95F14B8C0ED1B7AA32968B65D98E6B775ED420A3A0
5912EFAA8732322BB12AE50F3C62A8BD9A3D8A386A6AC22B2C4C5AC1C76F1538
5D5876D8EB5356450AC8FA23BC4813785E5FFC5E46CFAF7FDC942EA3F2CB35A3
0512CB7D6039FEFCDD949CFD9F58A96808DF3739CB> |-
/N <1C60D8A8C9B6079F0CAB5516749BAB892A7C3522D0E46A0397B04EB69EDC
DE5E37D0815B85FEAB39D3928E8B76E6EFE2513137085EBAD98ED50735B7D7FE
A57B1E202721CE3827402CC1CC5111051DD4C08ECDA01E869B864234B70ECB00
DBD99E259CB2BE6218AE3BA05EA0EE4223C492650226D8CB6076551EED4D1C2B
44ED03A8F6A768789855> |-
/S <1C60D8A8C9B7EF32242B217D8DF3900617C60BB05E585F7293A8B56312BA
073621DE5BB7F7084C10BFC752284CB4FA00256E74DF9C2329AE766CB13BC8FB
E8181D89D13B68E694547E06E7CC075A4E44CBF4B9BBB1930DD1E342E0AF2CC7
85111782AF5B8B285DA40C9D58BDB7FDC4F247BBA112C5353980DC0EC96D13B0
B26D7F91E69B3FE5D22B3BF9D805EEF725CF4CBFFFD599CE1989DF3AA7872E0E
C3E40DEB6835E32279D5B9BB347A82BB0E5E9761E319E19AD22F79E1E46BE1B3
966AED72A7CE7699278D66DBC0EE8EAB154E27F693885E903003504E75980DA8
FC3A6E04BA8979938FB6A9B543D192D9ABD696CD33BE9BB8738E03322037199B
75E31AE849> |-
/a <1C60D8A8C9B7A73DB9E86B7E36429A2884771404E6FF662B8AA7E7384C36
59F637EBD399261C63A35B069A69F76ED1A82E238E7EE163D317BE064E3858C7
F7730B3F4964EB20955A37792E7E1687D8ADC075DDB7D7FB25258139553D3CB2
FA10ED804622949E5930CF99F28E8A477603C46FC4F5A92DC2A1E35DB06F67F3
E51B82DE37C2C17EC2E5C923B58246C88B9A4601B0D1A14F5724D07DAB747376
B8430740055D15C3763245B66F59402378EFADB8789CFB2CE89C326A037B9EA7
5216356106F9269249DDBB95B13318EE882CB697F95419AED017DFE8527A8D8E
F87BA96F46A6F3C6B37E5DC3CF5F042CB4BC684A4C1AF54058E7FE4B16C2ABDA
5E4C6AEB6AC099DB4A66DB29E012598F2F12A231> |-
/c <1C60D8A8C9B77FE2CEE96C7945B0435FFDDE211B8F948D1DBC8485861892
F6D99960D947D725C2B400D72D2E2033C9690A49A5B9AEDD48C99E1E12194AA9
2AD9E1221612038A683F14C558C3BE52A1D282380EB81ECDEF9B33E298B18379
F2DEE9473052CB47C57B3F66F7E9B2774464DA469F0AEDB78DBA5D5DA2223912
13D6F7DC6F471B1C2EAA711F193F31D398A5700FBD884113FD59850678DCA065
0A6DD9CB70CA> |-
/d <1C60D8A8C9B7EF322BB34349F3168A7602BC7BF4226017FE1BF22B840545
23B23705583072888EE49ACE6F151BEB11E6C7498E6C09135BDFDB836D2D49BE
2EABEE67608F4396105B0DB3E7762F239216C0DD50120AD2B9D413DB01C86A05
F67787C78F145B0F86FFE91A800E141AE20ED29E6F68C9A2A75337AC51AED174
C1393EBB7530A0D447EFE3403D02A5ABF7A566F9E721F532F6AE8AD6A21AF6AE
574484093EF0056C2D7EB4A61B4032F6ABA859D517A62FF24D6F4DCB74805576
4ED96954395DB4DB> |-
/e <1C60D8A8C9B77FE2C1A0FFE616EB00E9CC30AEE6296E704D5E8E6E2A25CD
5B841666118E2FAE181ECDCA295C531BAEC8AA2C391851649F7A3F6C1D06B8F5
3311D73A0F775B337F21892F2D55D51BAAE57B9A38BC3FBC0F8B7058E4F9E704
709FA2F144D9397D8E7CC8EE685293C980753BDE3858AD8D5DB11A1F649D597D
E968E74B3A3B8C5A39BDCB85B6D8AE6FFD00E4F0A287> |-
/f <1C60D8A8C9B81F2C3A7A16DF5F18027D7405F5154A11909C9D43E6CD25A6
DC277D5C0D48ABA58AEE1CA72D408CE01901163AA965E83A2C6AAEA910B92B4E
F79F353F4FB8A479B6F513D6AC0F4E00F27FD509B6ACD1D2962CF1F34CEA6C3F
6B06B3DB2F91E3E30F78B9D3043A400CA83256FC3945A449B29060C9C3F19D50
89143FF9136555CA79A07E37AAF575E69BBD63975C591AC7D22CD72FBC808BA3
758157C1B9215D9858D17483CA724AA4EDFDB31ABF4F75> |-
/g <1C60D8A8C9B7A73DB95827D165CBA94F37D43D972EAAE57339132B24EEB3
269751BCA927C1513B63503B83734FF72F82FBA710B5424F96FFF7E943411B7E
7A713EED12F14B2BD28BCE56F0FA669D4B45D498AE948AE55ED3A2127E7CF255
B1E21C2384D44F86D6310CF1BD75C3CFB0483D4C181B588B6DBE0BAEBDD7FB8E
E6D3C70C5C2013030F092ACC4E08AD772DA82F9167E24DA30D2630801B833E8F
B36BFAE3B375A19AD81EB8DA4C979D041FFC7C9B1A73EF1C5B7E751A31335A96
371ACAE038F1C6D7312CCAE42C476D35BAF7EE8303BD721B3C9901074E92A47F
3ECA65FBFAD1842104F257AA28C400F288CED8FAB47E7B0F9AC674B2AD758DDC
4D82DD0D261718553330B37938706C656304353A29170CAF539CB305CE1DDFAA
CEE39BF9E79C6CCE45F70BFBD2BD4A513EEAE24D2E98156B2FDBD7BA4B869481
F19FB826F47EF5D2624958A3959A8F6D4DC2F78300ED78925E0F8B8B401EF0> |-
/h <1C60D8A8C9B7EF3272AF7F25204A2579374FCC2D8DC58257D5328C73837D
F5E151F5C4B59935D79D509479A4CF58D2F57CA30B7004F0CECA507A0A14CFFA
1C1991F686B3799B13C981FE5F1A5BF53CEC0E9AAEB667BFBDC7A5B4E500A01B
F3041032C409B459737BFBB5ED5ED3F0772BAAAB5B9BFF765B3251725E6DE189
3256D90156097AA53D4F8FFDCBD851B4E61228F325CAC2820CD2D27D8E983278
9A128B427F415B9370CB527F20D87D99F84108664AF4195426E156> |-
/i <1C60D8A8C9B854D0E61042376B1E283FB3F4BBB7CB3487BC74EE7E391A93
B180B577E22955D0FA3199DCD5C6BBEA2EDAEAAD70CAC2D387D654CFD6D585A6
0CE5094378FB8BA8FD5D1CAFC6A05D463B8B2BF660BFB6FA4902B50766CB2260
0DE6B8533451B6F73A6A051EB16DBCEA0EFC6C89350A34CB9DF0A7738E953A8F
7AB6ADA51E7F> |-
/k <1C60D8A8C9B7EF327040B55B5C610F053298A49F1A03819DBD6F4F60545E
065EABAB2986F681EE9AE8BB5F4A6DB5E9D60645B44D5A0FD3EB6CE6C6340441
D7C5953B9DA3115EEBC7964DE270BE0FFC714A3507B2C50455F5A0647F2361C8
DF33A64111EB3F649A8FB92120C0460E15CED32185094B4057B324392EE3288A
599FF73BC2127FE30ADD617876E7EDEFBFA39DC72F0935FE7C433EFBCBE8EEBB
D55040E8F2F259A453DEB014DB0E24E0BB23A24CF25B456D> |-
/l <1C60D8A8C9B854D09CC77F32FE56EAFD8F160C72BECE8873AE417AE0D21D
5337605639AD1A151DC364880F2C65200EF41B3343ACE730AF8052A8FF793769
15451BDA8AAC02C68E> |-
/m <1C60D8A8C9B6B41CFC233988897FCBA530F02D147BB7AF85B9F517BBC578
1B669435810CBC26041E0605B47BFA77587843C8DEA6872E30E60DD3D438C9BB
8D13A068E6A5DF937094A6E524E8ED70D26936C5F28437339B2ED9ED1E128381
B71F88ADC4859CF09A4E9326C601E9D02E557D79FA0D35091D0B26C944D85701
92EAF995CE2C1A28E65FB43759B59A0ACE7537852DDA0B768658473254AD7FE3
6D21B03DE50FD99C20BFBFC79E7047873A2A479A6E5438E97C747AF67AF1E9F5
12A67523095886E0EB0825820E96F6092D3A65884FA0731DE0D706D105190F4E
D332E7352597BF7A2CFCF63D8F04FA067E8E861F1051B59BE9483406573D7AF1
F5E466CF87BB2E2A90613071400F60D968E12D6DC015950B65998FFE4EF29FD5
21C9F9EA96F784A5C9> |-
/n <1C60D8A8C9B7EF3272AED84C447117DF46F865B97FFF41B029592F0B940D
3CB1496385D278F27E297025A56C69B21BCC4BF07172388925626DFA8D6C471D
D2C590CEE341C9379255E659C301E8B658357553D5C99C48C092267972A84331
83661DD05FE8753D94EA589F58F98A095B0B81C0D9CA47EDC3C182D840B9D342
BE463CBA8C184A5066CF3C562B1180B231C61D26E2526730BDE7ED78D55D7893
9A01438185A1FD0EF48EAA78E89F116F3F13A5> |-
/o <1C60D8A8C9B7A73DA75A812B0D9E0D72950C400992B64791CE4BE936E35E
C58E93177DA216CA6EA116FD0299C2317BCD42A8DF8FC302833AED60D02FEBA6
105DB891946C90338F674D705E1347FE9120F0544578B7DAA3AE7563B3048B26
98F9445592B7A6749491B2DE1FE4A1FD150BB3E20FEF7BE4E02D604E63E559C8
B95FBFA7494AE1EEF5610DCF16F48AC01BFAB48671FA48799F609CBC8530028A
5C8DBEF01BFDEE2A> |-
/p <1C60D8A8C9B7EF322B8F3C1339CC0CC7FB87CEAD61AE2C891E70162319DD
E1D773CD4C58B5D0C89F873363F696C9E4C6105ECC9F5414989962E4C7357374
118FB8D6045447C557B79E23B00D6AED55D3610DB59773C4F03101D9258DBC7B
32C1285C0C65052E26A4E5597E87FB915026E59C0C25DE3FDABFFCE1168F7A67
9C1B11DF8CAEE010E5B1F08558A9CD1ECAE6DAF8F59760015B341E27E7BD6550
4717C3E0E98D597B37446179E7CBC19C105B8A11F14785E84DD33ED43C7F991A
380380592F35D096D19F> |-
/r <1C60D8A8C9B77FE2960E00E3A8DCFC480C099B33BBDDEDCBBEDD2A0D472C
0A7B73DA6C507A02DE3334237527983B6592EE1B2F262F9019257EF00896B753
BA1EE7B97E00D2814390DFE8166E795665E9161989E492FE9CF41E80A3FAC0B9
410A0D35E8758FA16A6EBCF6A32D78AB8563CF90B05BC9CE7CBF6CAB662900B3
B6694F1FC2BDC482D5EA0481674C5822C4D45FD0EE1F9108A4ECF4F95EA02DB2
23FEC06EA06FE96C26DCC8DC8D15> |-
/s <1C60D8A8C9B7361F0274264DFD1E2F12F4038CC3C2CC64F8E8B1EB247282
BBD631FA3240975506A5A512CB2808310E488A51FE18729B6606AFD56EB1722A
E1D8ABC20744FDC6CBF3951E8F8BD520E7CF9D93CF33B4900AFA5C5C4D000CCA
D0ED41D50E319EB8B858BFAC6C03AFB2E197690568AF5E2BE9F4C558829874D2
932ED897622551043851C0CC72FF3440821220BE6AECCD9E27B0282336CF762B
277D88192B83BEB39BF3A8D350E4CD0CFD13DA7EB0A8BEB03D5FAECB2BB99C89
132A2E8C5DCDE91DE17F55FBEFBDA6CAE805794F42115FBC221DB69DBD324061
3F374A> |-
/t <1C60D8A8C9B81F2C3AE0D71D60A6D0809ACA0FF6B89A38F7E3BC89850C1D
D34D082ECFCC2A4F531E37217E8E3CD02D42FE76F828E185B10A17EE368D50D1
536CFAF78DF5C03ED49FE0A24E371BB0887E07856C5D39D6E9C2D58E0CAD3CB9
8DB35234BA12CF62ED06495FE95A32> |-
/u <1C60D8A8C9B7EF322BA0905ED0DC683347CE70FA474511E47D7F16FABA80
631D8B81EF4E26BB958E5CD419A29585E75FE6367FE08A7CCFFE45262AE333F2
24F7158401337079DCB57A01C4153127AD91F464BC7389BDB2B1F912E0435254
BC5B90C25CFA9CF36838EB1DC267155E152B4A4C084F64F36BC4A1C665448CAD
D0DC39A2B4C68518BC7B0B05DE633BA8500EE54DA457E79EC9CBA6> |-
/v <1C60D8A8C9B7A73DB9BE602D347CE7F2738A900DA06D8ABDC781010867C4
7A6F191317B6EF139F45E6906AF6D48CC9975918FE581503F8CF2387302029B7
45085CDF387ED3575B024DB9F129AAEE9131714C2C2786A6462AF1608C784FB7
ECC012AFDEE8D2934847D496CA736A00EB3A348C1D68> |-
/w <1C60D8A8C9B6079F6D1F621B170CB35947B55D052DF392E017902F6F975A
C64F077E1FF87E171895F207CF85ABE44D38692537A394CBF81BF5D9ADB660D7
2C3F66ECCCFB2BF3BC0B4E00C87D5A73FDF948DF300A42969D859A09A97158EA
71D4DC1648828FDE6171EF5FDC42A26BD894CE97EF3105467DFFB3EADC01E0D2
8D0C16187E8AB119B61A02CA08402054436AFEBDF728AAC9C1D014007B8B6FF1
4979A032B9DCC4FAD23EDAAF332D299B58FE897D391520> |-
/x <1C60D8A8C9B7A73DB9D68E3C59A537D4244B74F90AE5CF41C7B4A2C7BCA7
A300F542CA93A2965E2AB86F9584D924C16737BF4180B7DA4B7375C292CAA95A
0E3B2594252BA96E488864DADCA2044CBA91A0274761964E2F75E7C5D311CC85
FA3455FCD6989CD236F854D42654F054105B8E0A503E8AA280D5C605BAE2185D
188946DF0290DADBD2E70C64DD6894FEC8D24D6C9DAF05913AB860A656821A51
421A29E857B8FCAFC52BB43B89323BB040408BE2C54B02756FD8F29437E2C56A
EA7FFF343CA63AC2EF68BA76DF88EA86E6216CF5E0E5EA45C5BAFB0EDA849E27
79> |-
/y <1C60D8A8C9B7A73DB95C4B39F3AB93A7D69F83F2B8047D4639314C98339E
08E9F3BD78FDFA668BE53C852DDEA02BEFB5BD1B10DBE37D879EFCF7FD9D2E00
CDF1E4EFD9CD923FAE6B009396FDCB4EEAD825731246E1170E3E99AA3F714D24
1CD29BB31CDC566EDAEBB9BDEF44D807C915E6E89D41908E3901A956FE31DADC
18D7EF849ED76B52F1A3B06698FD033E6167CC1AC2C8785716DE38D052B120AF
9C29E526CA14F5E37B83EC530C8032A4F2C460BD5AB35798F15B14DB55B4949B
5BDC352409C997610729> |-
/z <1C60D8A8C9B77FE2C1986438472A2C9D70A0C0C890DAEEC78B2382B5CA34
002498561FAFE0768244CAABBA52D7D3A048A2667CBBA3F3F59CBDF1D57CE279
52C1D2C5317D3EB02515CEEC9F921B2EC7847E> |-
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFS+TimesNewRomanPS-BoldMT /PBAAAA+TimesNewRomanPS-BoldMT findfont ct_VMDictPut
/PHVJFS+TimesNewRomanPS-BoldMT*1 
[45{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C 9{/.notdef}rp /M 
/N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y /z 133{/.notdef}rp]
PHVJFS+TimesNewRomanPS-BoldMT nf
PHVJFS+TimesNewRomanPS-BoldMT*1 [12.6393 0 0 -12.6393 0 0 ]msf
58.8079 53.1993 mo
(AdaptiveSynchronizationforNonlinearly-Coupled)
[9.12558 7.02744 6.31965 7.02745 4.2088 3.19772 6.13007 10.0356 7.02745 6.31966 7.02743 5.61185 
7.02747 5.61185 6.31964 7.02744 3.51373 5.61185 6.31966 4.20879 3.51373 6.31964 11.4512 4.20879 
6.31966 10.0356 9.12555 6.31964 7.02747 3.51373 3.51373 7.02742 5.61185 6.31964 5.61188 3.5137 
6.31967 4.20877 9.12558 6.31964 7.02747 7.02744 3.51373 5.61185 0 ]xsh
309.66 77.1381 mo
(Matr)sh
337.732 77.1381 mo
(ix)
[3.5137 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+NimbusRomNo9L-Regu Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+NimbusRomNo9L-Regu def
/FontInfo 8 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Regular) def
/ItalicAngle 0 def
/BaseFontName (NimbusRomNo9L-Regu) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 174 /fi put
dup 175 /fl put
def
/FontBBox {-168 -281 1000 924} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38 43 53 60 73] def
/StemSnapV [78 85 91 103 109 115] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
70 dict dup begin
/parenleft <1C60D8A8C9B81F2C34C10FB5B45A8FF20C81B99897830644196B
9F0B77D18F1E2415B32643B9BEFB32917C4D47B1853CE389710AFD496390E0F7
93FB9D427EA0C5D4BB5FDA148EAFEE0C20062EA421DE85BAC5> |-
/parenright <1C60D8A8C9B81F2C34C10FB5F8CB4FB0C01CBD8EB5118892552
E140106D8CE6C92507D29757CD6290403441A1EA7693B4F3C96FFB476C2C573B
7D2E57D40483AABB12672AA2C522BCD98D28F543A66D4C9ADFF> |-
/comma <1C60D8A8C9B8707CA2FD797333ADE4A97DDAD77B582F5CBD0659CEC2
54CCAA47E940636A08F827925CD9A1666856A55DD075D3D80919EBA1DBDA0C08
A49DC0170BF91775E03F0E3F84EA866F24DB4E0E5C25C184B2DD7B> |-
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
/period <1C60D8A8C9B8707CABCFCFB7572BA26C4F342CB44977C4D272DE413
3DB5EF66FB5CBCC13D7> |-
/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A68144D7948D
5D72AF545A4D3C0513F795E10E78346C3F1E06A3A564CAE7C700C7FDC9B087C8
E6354649236E324B711B953A69EB07058EA7506E73C4971A2CD8E7B56CC9E4E9
FEA40EB905B2E375D63C0419CF10FC6C14A0C10D77A69> |-
/one <1C60D8A8C9B7A73DC549024A66BCA9F4353026BD17B6210A66FD5D4176
116945A2F6BAB903CF6DE4F4D3C8542E96270F5E403BDB0773406DE9484D2E0E
A2DBD71107DE79DF70216D3BFEAA2172D8D68DEE8378CE1279ABF171> |-
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B744F8
D4F54DF812628245A65EF24CEAADD5DE190FFD56148C6E385D5491D13046F140
F2584C73B6FA05C320B018358B9C23ED6C9E586FC4F73E174BDB9E859FD3482F
BC3EE225AB5583DDBB> |-
/three <1C60D8A8C9B7A73D33B7A780A4FB6D478F9DFFD1DA2730E109F94628
9022DF44AA9C6B3C7A83D30909F0BAB42A6E1D1548FDDC248F7C953CDE5A28D8
689A27CB59F87D356A314D4EFED0475CC0AAF39DC03786C824DDF509843103FC
7FA496FB5DCC5A8557EAC7C07B47467CFAA928DDE85F766B75A88715FF4FBE39
5D793AA936CD181919EAA5062E994CBA144301D3C748F9AB1671C4DDDDB4E131
7F6796560BFDDC9A58> |-
/four <1C60D8A8C9B7A73DC54C6E607A6FCD37FCCF09F620AB8801B1F0077EA
3F37AB8BF3C03672891DED2FC99FFD9BAEE71DC6FF4E84D49BFD23A40AAA079B
4A5E5C982CD38A9CA8B7D76353673683E32A19F787E51F0426691> |-
/five <1C60D8A8C9B7A73D33A88FEA12959A734E0957E304D49DC85E4BE1FA3
9EAB2AF48D0318F3CC26662E787C00C247C6E0112180BCE6759D50FF9BBD9846
DFA361CDEB2512314B6E62318760F370D90F648D279E929D53983BF8D2AC98EF
81CED8855AB0EC5338E13ECD1542C111649132984A10E95D5EFD7471329778D6
74DBEAC9048068A00D504E5675BFC58E3AC> |-
/six <1C60D8A8C9B7A73D33BF1B90A18439D8A405D7C2C2CE39F3D6CF44883E
BC665B1BC22C1A295E570F87EE932C7C5AE5AD7FD71556D1DD18D897666F411A
91C0C83F9464A64F6DBA41188C7B70D6EB3CB783FF623CD0556DEA7D75906C65
3696A52A8075AF3CF1D8B71CA3050CC39364621D99C880412847981F1F9B66A2
73E16CCD8B82> |-
/seven <1C60D8A8C9B7A73DCDD9F59C989262D4C837ECD30CDC197CC53D803B
FEC41706B8BD5D4AFE4F1DDC03AF8B5A096985BA058506805DD9> |-
/eight <1C60D8A8C9B7A73D33BF1B919D399022D2F6E528E0F503CF88603DE7
FA437233B2DBC0032DF4D8AE2FF534C5142A7E298378A5C16B3025C089116D1C
B1764445FF61E92D20420D5DA44DA51161286A50AFBAE16C2F66DB37FC38BB6A
50BB62F9DFC3FAD1A00BC1E24CA62C1F5A9330CB1FF9ECD38CF50A044C9A06EE
C5495DBB6EB5340B25158C0653ABF7415A5A799428C4339A54C58AEF8AFB3D84
CBE2621BC99377BF81DBA8362E6F2D83A2A9425A6C> |-
/nine <1C60D8A8C9B7A73DB9A4910DA0CCBBECA0DA04663E9B3882E1E5DEE14
3B742A9F817DD3446A24A057E418BF30AF27F7FAD2F66F70A1B6D5A1487A1537
6B8264A176D2D7FF0C65A50E510656A4AB729508AE86A12EB73D4241401D8434
142B04B784C0BD286955405980DDD9F84CE9AA41E73E5A393EE6E73ADE3D0674
26A> |-
/colon <1C60D8A8C9B854D083E206F04B4C3DD188754390434C4FB50EB4672E
AEE8A85520BB1D78CE2A6974387875B94CD46C379E034A7804D304B20C0AC31F
F325F5883A400828> |-
/semicolon <1C60D8A8C9B854D08A49DE8ABE00A3F56845F7C789B1D092D769
97EFACFC31B8EA3193D55F08B870AB735BDAB3E62041101CDD0BD1D1D6BEFEBA
20B83E51E7F8BBC73125BF217AE48D948654CE4651FEDF3EB4DBCACEC48ADEBE
9556E72AA1D2EA8C03523F47A75C326AFDCB83105752D16B9EBFAEAB49BE8CE0
E45C5F7CC0B86B9DE5> |-
/at <1C60D8A8C9B5BF5B02D3228FB9359016C7EDC879727C11B9B52BFF4527A
E09043083394B73BCF0995FC571E377E6ED187FE4888F71F0444DFC5C41E4AE9
A87BAD85432CA34691BB1E90B1849CF7129BC07685F15CA70ADCC0161A6B0884
78BF8A850FF41628CAE01F6681E793A5F0432EDBD06B32F6CDD8C10A67C8FEA3
7B75900C4EDB900D14AD7AE1D642A99753C521A04DA3040163C51658E94CF9A4
1824F0D3FFF5D3204E2BE98610137C55A78422CBEBCAB0EBBEA78272E2B9C4B7
A0A2E2AB9969D612662334596F7BCE1A7733FF6E1F446E4513DD82E2C7929E6A
E2B8C542C6EC808C8C974B99A9715E28B0C2395590766D8108C3D01ADE200BF8
7DF63B032F3535FD19D64029FCC2E7635FC4B634CCDCB3657F2E0864AF9DD014
6365222066F53A898> |-
/A <1C60D8A8C9B6079F1E495237E195FB086879F6BCD60DCB240CDB4816DCDA
7E7D74835F693D24CCD6C338D68869D7AF0A42511BFE8C5AA9C0FDA69D2F0CC3
FEEA1E37C9F5A5B0401E78C533D84B405A09584E86C2A416FFCA03B71FACE3A1
46D6DFD53C2043C5A98FBBF0B70EB7EE652DFCDC5B6B> |-
/B <1C60D8A8C9B64EDFFAA969AD09D00E8D9653FC12F936212F509A68D3879C
B174FCC7D5A46C18D84538C45378CB892455EEAEAFDB676B276D7423E2B2282C
1E8DBC52F7314247FC642BF2AF48DDC0873647CF3E52C3BD89A1384DA88214EE
894292E3EE20EB76497CE2F4FA57AC9300F8D961F5243657D0971102F8DE7796
B66A77C96804C10504AD4911A22BED2CB5B7952FC51B55E11A40888D7CC5DEC1
AFCB0DF62C09A61FA14F0F32ABD682D4128A82A5E125C897C44B0038DA792A06
1F8A0B6707C64C7274CEF840B8ECA3B28B4BFA7DE31202662E66E97257814127
E55A1D80A17B130D74B30C51F1F092B0AE50B595EE9813A8BB5030081A> |-
/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1A3F05995A9E21B3
849012DBE3E5D9BEEC357D7966D622D0BDA2A87D7DF76C988A3C6DB72B7AC755
68902A6FAD90FC53E6498F9E166085199E8D84083DB27D286921A07C13F283E6
EF1D868FB1C61773EE28620908EC2A5479956F05B0F020BC9E52293B72C896E3
409360C9D09608CE13546B> |-
/D <1C60D8A8C9B6079F1E4884847E183CDFB6808979A7FFAABD96864B66E877
4E70985CF395DC1D2FB7C8BCD1A4C47C710B24983ACFD957FDD5209F65A7CC6D
CA7FAB2B31A94757B920900AF55DAFF07E485481F6EE171E97C1FB25B33FFF25
DE136D66C781030917AD5172E37CA4D4A7F6F4BF8A8F873BF0626800AF87A204
C228E1B6C0435E1F9862D6C5EA44C6C9DEA79E98A81138E9957151BC634A5F49
B7895409D9F2A50BD885B883DF4C> |-
/E <1C60D8A8C9B7D8BE6A6FAF13E57A5D0C2C66821CCEEF24B4E4419847787E
D4C8A98BBE3EBCCE15D1DC333F323E4C7D43FF48D1C1F11091632F6F11174D4D
B924B1BBA6DF69EF4ADB27C45D6BAFF8FAE037CF2DD63F0C99022D146FEDA01C
CFEE96DE599AE8069A8E5F6B8E0F74979F0CC193D875C6765F26CD248D1D0923
817F3CBDA21B14A62B3E828ED4997E1F5E3EED19C373DD0855950863084BA232
08116185FD3DCF> |-
/F <1C60D8A8C9B7EF322BCE349315DC362BCA8CFE4FA18BB639D443336F7111
E2FACF60D2E19F1D435E96E49FD0AF135C8F4D593F674BA833D2635B8F02FCB2
BA0EA4D7637689C705ACF839A843947A142679A187B852855766FB975C8A7F4A
36CBB0767C130BA6A421FFE56B2026B49CFD6C7C20869DFF5A9F134D0B5DB06E
3DBFFEF295> |-
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090DF6EB484
CEA0815D83DD608CC775FE83C31EDE164D077FF80BB002D9CA37B26EA5372CD4
FEE69909A5383B74A93FDCDCA1E7577D38E8B9431EDF4F2AED0BB7B71858AF38
E98C9DD8D402A49E8B0C6A4E0841C41D036EDF21A21312F4AE79B0046CA7EE30
82CAAB0BAB2FA41410BA4687> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7A4C9904C14F3C78DD8A216
6C79F417AFFBE3B86093B7A5C9E5643BE68ED9E3DF5945A598D6DBA4A9E1182E
708E6DE986B0C684C3> |-
/J <1C60D8A8C9B7361F880F413C1C9D6C86FEA00697E36B5763F3D600E6E512
CBB521E5C58BD7FE4FC436D4585A39A4417A2503D8A2290C1270AA4224EC5999
0BE6D6F5C4A98BC8426B0DB3A2EF57566AB690B6519C0F43> |-
/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAFF577B959C281B432F2033A3
778270B7BC2F94F72D8EF799737B2B47855DBABFD82810DF495FF107F9807477
33A863894E18FDBBE26BF9A4CCFBEC890F8084F442A884FC2F927A7A2864CE18
84EE963B829AA2B70A1A8A> |-
/M <1C60D8A8C9B59F859BE0FB9A2A0F7654C6EDCAEDEE9F7FF9D3DB18954F7E
3A836D4F49588823AA3E0BA32781764B19BC402CF82F4E9C5FD476EEEA839B5A
36B407165C4F7ECC6BF68EFFCD7256A6194F4F444DA2C3D477E30DE627473946
676FD66FFE635B9837F63138E4D5B2CF03795A7A7CDACF770C823E2C6B8522> |-
/N <1C60D8A8C9B6079F150BE669E05A86555759DA107B43AB61905A62645A66
3DE63B767402DC6894A5DFEDB84E4BDD1D351CED404CF8174231DE9B67002319
4AC38274F20C1FD6D4B8DAC4F0C8BAF545ED28910A7DBCC99ACA30CFE6FD8C85
EEB2F3221A60E51AFB01492A579996C127A28D4FA98C92096380068298F29040
ACE78F68E55A11F391A0536D2E67FD1C08CF11> |-
/O <1C60D8A8C9B6079FE817D875D2CBFFB503E7661914031DEF82D48C90EF37
02517DD03C8E65B1C85769ED6887A24289D9AB99F5B1BDE82993DEACC2DDC39A
E11851296B5BD32A727B69731E92C7B0DB7ABEFABCF42140BCA1DA9DAA31FC27
FA6483912C36637F02E27FBD8C9B9BE19A703CEB20A6852E97F86CBFE152A658
3E5E69CA94CEFA79FBBF39D4558C7345137E92> |-
/P <1C60D8A8C9B7EF322BA184F1B466A5F9E0510ACA70CC36BD5B876749AD4F
E16EDC508BA233A1AAAC6BA273FF20CF31BB17B9F1092A4BB71099575FEA4868
93AD4E3A7525913D0CD05606C6D78ACC32E189D016D7274A626F44BE17623E20
CF682C39158B1AF28D3051A12E160F64DF843604F0E5D5C417DF0F4700F18E24
35DD56AAB71313C4C2D0A2D81AEB42E579BF0FFF6DE110A340F6AA3B51D151D4
9C34D4B8C12908> |-
/R <1C60D8A8C9B64EDF88216CFE4D3F3D06C439990B9502E48B1E9505CADB19
021894EAC2A555525553B38C5C90F2EB03B1EAA9C843F3EC6B1FDF49C4D2529B
157D754C9D04B9C2E4D5F9153F875E924C7C70B9AE574EA090FB61D41C37FC51
04946381820B77D1612851C3FA0E44B55800E05B6E555083090B55D924DA4751
63F3F85730D71659BCB18AB61841F49D0C395BFB5282E1ECCB55DDA64334BE28
FCDB0DD4220B74399C87C53A8CCBF542DE115866523BA0> |-
/S <1C60D8A8C9B7EF3225294A5FFA2220B3A70A7F29A870B3BAEE7DFF2B94C6
9EBE02BC5C072804E44299D7CD5195B2B62440E331BF680EB99E90C8D38CE947
04C41DF179991352DDB1E57AF890781C25959AA3B7BFDF862D34BECCC3DC0893
FC4126E7ABEE67256549F5A2A6CFFEB66EFE3C866BD2872F8C1B7A2ABDDA6D8F
5E1298D98292AA28BF3CA599A78D591197DCA6EC3B7EEB172439C64EFD164E42
7DBBBA3E18B9157A9BDD8BAC44A0627E4C08D45A6CE6CCFD19F304834876F210
34F9D8D789834201D1B0F60CFC76F29AFE4E29BC48F795> |-
/T <1C60D8A8C9B7D8BE6A419732DB5F024C0509628A5C1F3C8AEF4E7D00CBC1
830EA50E7630715A3443152766048C069B0A4C72A78E94AB6D91F59E64DF9B5E
3A2935C3883FA28660A00DBD8C0553BBB6DF7158E8BBDF61D18A> |-
/U <1C60D8A8C9B6079FE80F64D637F1516D9E8985E20DE1E54990D7E09FF6F7
F806CCE49A90DDF87D67E8B1682A426E98A2CB5AE74C2EB02CDAB73A761D0960
0E57E4986D919E48378EC23E82D2FD189FD8197C33600A4305AFF2F750237481
DBB6D87498C90361FF0E685A3AB0DFA4934DE082373B6FDECB908D9CAFE5371A
B2391636> |-
/W <1C60D8A8C9B5D6EF35A61E5C76A324B31A56F3B1CFE26126626F91A2A4BA
CB1AFAA605E0E99F36A77DB54F2E6AD346FFEBAF72E8228330EFB65AAE1194D5
7BEB271028701B01DDDAD430D9B1C5E6D2484E89D44C9AF9F0018889671FF0D3
BE9234ABC3DA9D8C8004B7B21325045A51F5AA0FE20F5CDACE9D24E8264E834A
6CC230947F02E113668F0DEC36085CC5DE7FE47E19E6F994D361F781D02378A2
2F044298> |-
/Y <1C60D8A8C9B6079F1E48848E899D058BE400EBF328928D801D8EF13846FF
5B0C73A36F6E27F4DA34E3860E0374EF8FE6D6480E8536526A69999D3B13F855
B3AEA553E80159C21F0FB29E0A1FCAE86A8B04BE7FF542902CA0805A808770B4
704FF8C0B09E75F95B0A405A038D010FB18EDE32DB263B8C503B7C6289A326EE
D3E3A0667800422922> |-
/Z <1C60D8A8C9B7D8BE6A6EDEC9185C38D43FC5634774E14B19DAB06962CC00
ACCAA2D0B32892DF35F84D85EB83C7E791163FE0C3B4A92CA0F85D4F0394AC0C
8EAFC89E2719A8E27611F20F49525CB2A86EC058A5C64F26> |-
/bracketleft <1C60D8A8C9B81F2C36B2094B9ED0E07AA432BA5CE2E16D09DB
E94F578B72BBBB31B68E690F62B9641352789F0E43476B5B076476BF5E> |-
/bracketright <1C60D8A8C9B81F2C36B2094B9ED0E07AB0AE245978D415C9B
35A8D321C0AFE31914517F88ADB7E422E89E84FA69E241776020CB3FEA2> |-
/a <1C60D8A8C9B77FE2B8A4D22D65455054518A9081A02F6171B4D6753717B5
C4BCFBE68C976641B0DA567300A37FD1F7BE0E53E951AF39FE7187820E58AB7E
16899451090BE178FB9A491AFEF8E37FF1C5BDD8D0256C28A39196FBCF43F894
58E78497ED2727A4DE9FADAB50CC878B363C604914D69E8722C78AB472A690DE
86045D5F8F45A8F711931993BC8981E4EC5F1265B4496A3A3138E85E75C304A4
1129F5747FC321FC219DE10F0876B8AE64C30F976EE673CA77E26C723368D2A5
BAFCD92094CBCB0C1DAAAB41901C661D72AF00> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5D3508B11AE282C299523D8D2A309C1
7B70A170029C0F65CF90DD2BE591B98673683525C4890D287920F2AE4A535CEF
E47857E6491D69196894FC8103DF0EDDDC2D4539CDA22F565FDFB14A75B6689D
6F3BBF9428A6B06753AEFCDF61504E25> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD7913AEB5D830EAFE
778D8CA9FE61C9F1D7F341AAC32F9CA6E189A5065ADF2D5F773BF6F8A8426463
FFD760FDD2A3FB2FF93A8F0D901F4D79430D0C49AB088DDE46CA955357CE80E9
61F17603291AD5A9BCF763> |-
/d <1C60D8A8C9B7A73DCF5C5F318A67A421CF99702516EE66DD46F0A19A39CD
2B5B742B889350B6027EFEDA3412AF17D7447FE125ED85A03529B863375064C8
442F844291318DB0203469A078E9359BCEB35DF8F23C36890A37B169F260AC05
C273B3B8D223D18F700437592FBE0590BD27CA2E484106160C2D3CA8D60D3B12
6EF2BAA957015ACD17B66CCB4B5794278CE2D6> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF
77C72C9CD398FF8891FD585C23641F8AE8F6E3020ADECFAC4A393E9FF54C49FA
B5A21E2F4C1179F83C25D9862068548F63557CBD68840FA2E638617AF24BDFC9
D81568C2C6E1A315E20924BB4D9FEEC5799B976A> |-
/g <1C60D8A8C9B7A73DB582976F788935A228E33A2F9BA837718EB44913857B
7DF2B08937FF3593A626EDE6CCF55DB88F671B0ACF0E0BF6EDE603335F61508C
BD99213F6A996E978EE78EC5AD0C1CE4169AAF8ED27DA5119BB90C33C9447085
BA17B797E462B8F0977A661167FBA44D02B1BE8517861232196A81989A462F7F
2FCF08A5E9EBA1DAEB8CCBF341DCDE2423F1236D5142A49C668E169F9EAF2F25
102C1FB112EB576652F83324C585B8F161182918C8C79BC3194BCD6500A04D2D
22D177CFDF96C8E4C849F7239608F6F7453202FB5504E13F8033A5FE2FB7EA35
06AF00C9E3C825E1554EE013BCEAF50C41410225B6E0A012AC7F7FF737456D43
38> |-
/h <1C60D8A8C9B7A73DC549024A8346FE9FE9D7E1CFA5F3A3542DDBE4C5A916
A5024A59CE0EA5149D6EA79ED65490BEFEF9C3C348201E7A69F357C223E56920
09826F3A927DADAF422165EC130205D6C94EDE841416A6709F1685CEE6DEF083
AF9B4CF1705AC60AB37B96773E8FE945D56F9115B299614B0DC15F528F328117
D5F2914E00B04A31> |-
/i <1C60D8A8C9B854D08887A9543335390AEE4DB40199897ABD16F19F24E0DE
858E4CD6E00B26B1829973C0FE01CFA3E329A9D0E2AFEC96CBC670DB940EEA7C
A262004364C378CC527E7F0DFBFD9ADBA6EF6E2301F19CF6860BAC9BB8A50A02
F9217A15FCE88184A4DF0C717E46391573826F599D2DFE27F4F9D82251BA41CC> |-
/j <1C60D8A8C9B854D0F8036B9E41B2E65A80996E2E907110434A0413DE6F0F
A1CED7D44101D2CB80C53365B7D9FCFEF3C557C392B7A8BD9A59049D2FAAF659
0B303228E435BBBFF7AB6415134822B91A84512D7F51F017E320BF297D96E6DA
013E3EF49D9FE337AA59725CBCFD287E12AC43B2BA5588F15DB53EA3E4AD5969
92DAFBC9104E3366F1848F482EBDAB72B852260AA183> |-
/k <1C60D8A8C9B7A73DC549024AEE55A0365CA53932E5214D92E03447BD2708
2733F8BC4B52390213A989FF43E960E136400BFBE15D14D9BA4C2D61B09B4F05
0FBF7DCACD230C4E8767F21A80F637BF5694F2161773ADC9B25B69CFE9C32887
671F39202B1661FF55FACF361DF983E96161F84FF87D28B0AC0FA43709B6CB55
E1E44E07E3A733E7B5F64E7A67A496C0C4D5E21D4A198AB4487F8ABDBAE25A8E
986F6B42BE1053CBBD4E723DD568DBDCFB> |-
/l <1C60D8A8C9B854D08887A941088E15019368529A0C411CDB31B6270BDB21
E6F24215DA6EAB48951C8DAFF38285C17967F3E2D31A5645B4CB7848E783EC24
2D0750B83BCD4D9A2F> |-
/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC36CFC8347F
8B8E738CF4CF4D1809A80A85D86BFA110670A045293350272C5F45FB77C527D1
F2930D0378ADEDC7688C13D3561051EFE72DCA1312160E6190220B69FF2CC393
85ADB7B9FA12F1BEBDBD9D878BFF3BD03685B77D07FB95D12B8B813430FA3185
D7AFA5CE12372E2F5699928B2C0F3AE08B114EAE456B389E7295ED8892CA8D2A
68CBEB3EF1E32DB99917A5DF402A16D8590243BEA627189E26BE24948A498003
EC603B5D13E615> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C630F986F2AB3ECE6D2
578D5DEC50402B578B4E6CE0632E8947CBBCEB7543031081448F167C88EBA303
B4D2C70599E4B2DBCDA2B9DA37C571B7CFFA556EE2B6CDE54270E5EAA3F80E68
09540E2D41E62BFC6D0AC69B3E0C88DD3AF2AA5C4EA7ABFC511536F434A8C9EA
34BFE186> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34D2E8E7AB07F99
F61992CA50ADD51C5A93B4B134C15D36CEC8323CBBE9C0D3A63155E9EC74B781
308A5B21C88AA604D5E026CDBDC830C30107F5FE4F678EF57725AF37DE4B> |-
/p <1C60D8A8C9B7A73DB58119388AD28C6EB26113B395FAEB5BB1A92787CC00
CD17996991481186ABE86940E24AB594D9A474B01D5D0752783C6F719E685638
4C42FC6FADE6220E0D5360188934499D6C788FD6225163F3ED610B71BFF6B877
481E0736BEF6EB1112BB14B3A87DE8D1E721238F8F2E426DBC236319E17981A4
C07831306A73D6A3E6AC794689B59CA316CE67D8D4C94BF2EB8F108645A3CF1B
50AB6566123326> |-
/q <1C60D8A8C9B7A73DB5811938DD329AF5702F449C4C3015239F3E0A7732DF
C9E0828332DA51F1D7FDE724DF869BE73384BD1B7136B03BB11DF051325EE7A7
668042B3ABF69CE2C13C47BD4E4C9A86DDCBB9CAE3222F43A69A8FF1ABBDD409
F18B51721F47402665B69C88AC7610BDEE6B922DEBE4B9A5509B50F0E0D3E071
713E6B4ECEE647E52C37F2D1A72629A17EE40EF1260847BDA48E1E19> |-
/r <1C60D8A8C9B81F2C46F2EFDE84D89C8CA27978F2B1BB49B09209CD1A52AA
0883E159C0BCFCEC840E4AF4AFD0AF12CC05AB7610067AFD32B1652EE398EAF1
DF9DCBDAA912A22D36A52AAB2ABE36110186ED1FE34787D24198929398156D9F
0AC35E6BD99313253DDFFC34D01333EFCC> |-
/s <1C60D8A8C9B7361F0DD2D2259B4AE3E4ACCB44FB8872BFAC621D64E450F5
14624BD4700B917EA1CE8D60019D3B1C42E0F7377CE112D5333D1612736D0EDB
07B34DD4BA1403D44985C1A0543D99F912C9BC9DC7E96430EE2781E418322823
5F9935573E82940F1E761BEFBA74A42BEDBB36268156C77D28FAFCF48800821E
AC277DD0C93425B27A2041FB9E67F885F359D5FF9B96714513F4D2945088A893
D87F8B4D3A6600FAAA0EA12384184218B424A8492A8E97821E10762E83A8B2B1
7B9DE8ED2A20C9152C561D7EAED2> |-
/t <1C60D8A8C9B854D082F829CADA2402D0C363E188624B3DC91E66507A8AF7
69E833E0645176BA592C3DD44ECFC4C7D84DE06A044A230214D945DF321A4D72
94F214FA4A69DDBFFDC37CE6C0694F8A402CC82FE94C2B9274D4DCEAB0696C3D
253D2964904B34E1D9065A46BEE535DCD936F67C56C176C8E7F77F2F60DE69B8
6A560016E73AE51935CC218444D0EB76BA0FFF40D1297093F9> |-
/u <1C60D8A8C9B7A73DB6F2A4B59B2312EBBBE2417FA44F369C1F0ED6D6A369
96AE53A137DB00AA7567A9CEC49CE2737379BD17250255FC7E3093655F665038
8D1064F7AC48308F1DF9CB661A2773CC10559E7C61A5DCDB640FF06049B6ADB9
F9495291BF4F69DA004975E0967945B04D0D1E0AADFA85B338744A9D49B5C34C
0392DD8C9A2D5D0FBF7A81667B636E9E308B1316F61183357C46ADD0B9B8732D> |-
/v <1C60D8A8C9B7A73D3387F33511357F5C470E09351F77CC276AE129494BAE
19BAE0CA39F2A5A776A3E65DC754DA89AD1C5CC64A59E7F0B5EC70F5692EBE0E
0FB9D1DB1A31CC7BBB43C8920E79F728121E780030958DB645DD328A17F8DFF9
82D1DC59D2D6959A7E783D9C1D0AA54F17D353136E> |-
/w <1C60D8A8C9B6079FE827C15FB749C5E2D59AF07BCDCB23600A9E54DC7F64
C7E827C38E4CA3EDC141AC5EDC06F362661B84CB18900C724B81D9620EF76D18
0ED63FA9D5A5F924854335916B03AA4F91AFA0C7C0C6CB02E2839A0511DD63E5
74762EF80F517D5F038A6BF8C6AA8B2D183A3AB23FCFA16E562D70F6716B39E9
98C527890272681E7128A4D20258D13EE2F2B8FA152F655FEBAEDC8C60259050
DBA81825B0CDCAC66195D9F1022749> |-
/x <1C60D8A8C9B7A73DC54C6E6F1E1B2347F151B660B24776F2E8D8FE0D08BE
B090A51431058F7336381763833F21F79669FB1758E4A45605BCF730FFBF7CFA
2C722F5A25EBB940FDF2BA7B9B5ACDDB0A61662A5F4610A72EC6495E2E42CD0D
A0ABD967E5F1DD106B1FD129929FE9D5A5F6068F5AC837D5D03F8F6EF1AB141A
71105EC102F68544C432C4D0444E5DAB600D38EB3AE2F6AF3A06CD69455C91A5
6BBAB338293B6D0E> |-
/y <1C60D8A8C9B7A73DB5828C8EB6692FACE27F93F009F946C390116926A043
617DCF82B76B3921AD1CAB060694C724481443C88DCE9CCDBD4C5105E503E45C
67DC21FA0E146B65B0F0EA2429259DEF9F5CD456C1B4E1A4CBC49AFDCA5F37B1
AD742660BF135BF9BE1A2789C070C0A4FB4767FBA0411908E30D692396427C73
1EB9FE493ECBA19FDDC5F0C50E54D346D5DA656C79E40808BBE549> |-
/z <1C60D8A8C9B77FE2B2232EA49D913A831C97B47563501A79DCA41E417E74
E20F3E3020C6B422D96B1171C7F6A868EEF4F80EC234E8C81C6D5907680692B3
D53F97E8CC04C61D64F59B524A639C52> |-
/fi <1C60D8A8C9B7EF32570AFF8231DCF4ABC5DEFD5B6D550686CFFCC91C267
F1252BA4F4DAA274A3A6688691900FFEF7A839B52553AB9F891F187F51351F44
C21EAFE0C45D0394141E4F8BAFD06377AA51E37B7097AD1CD66EBD9853CBF817
2875228C37FE0953ECA0AB863FE32A47EEF2B7DF444F4BC2717645C8B4ECA894
32D1027B7AF6DE75966098D9C73E00129B4A704F85D81AF7D80671478639E183
CA75D9BD8666D9EFCDBB6B3C3084DAC79574807631815CB8BE737035BB77F054
C44C971E29217D4> |-
/fl <1C60D8A8C9B7EF32570AFF8232948073BB5AB8BA9958E12740BD6120DA0
9BA71CD6F811C2BBB563106B582150E5A1C24BDA9759826DFC4919C1848E76E8
9761DBE4C4B2E6609DA375C7A7C8FEB3898BB254249657F8E306ED10A632687E
A2482F80F700AFD51B8B9A14589974C2A50465ABFAC5C01138999D96D63B7FC9
3C2BDB14C1CCB20E9D6A098294573BB579B56FF29BC82CD8DCA8CC6EA9AD2C62
FB1204B7951E6BCEA1D929F1CC1D7421119653F57C1E42B46EF0F374674275F6
1F798605ABED38C3641617B72BD49933BAA7F84CA6C418DE6> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFT+NimbusRomNo9L-Regu /HIBBAA+NimbusRomNo9L-Regu findfont ct_VMDictPut
/PHVJFT+NimbusRomNo9L-Regu*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon 4{/.notdef}rp /at /A /B 
/C /D /E /F /.notdef /H /I /J 
/.notdef /L /M /N /O /P /.notdef /R 
/S /T /U /.notdef /W /.notdef /Y /Z 
/bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 51{/.notdef}rp /fi 
/fl 80{/.notdef}rp]
PHVJFT+NimbusRomNo9L-Regu nf
PHVJFT+NimbusRomNo9L-Regu*1 [10.6549 0 0 -10.6549 0 0 ]msf
175.129 126.286 mo
(Jingyi)sh
204.909 126.286 mo
(Wang,JianwenFeng)
[9.20584 4.73079 5.32742 5.32745 6.39294 4.14484 2.96207 4.73077 5.32745 7.69283 4.73077 9.05667 
5.9241 4.7308 5.32745 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+CMSY8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+CMSY8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSY8.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMSY8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
def
/FontBBox {-30 -955 1185 779} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 704] def
/OtherBlues [-138 -126] def
/StdHW [46] def
/StdVW [46] def
/StemSnapH [46 64] def
/StemSnapV [46 64] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/asteriskmath <1C60D8A8C9B7883C619C01865C824C6DBCCEB46735E7E8B35
555CBBEBC685D7F0B8D6327BC536F4C38271A3D462520496A85F62851F3E93C4
6416ED3C0FD4121375C090F35352ED88792E076A3C3C11476D1C596BB597B2F8
12D1F8099693A0949A6E5186E7CD6D891FFA72473B496DBD6229F5CE1A6CBCB0
EC0423EA7FE7E4870400A501E4887445AEE14412B8BF3C72AC1C82F89E3BDB36
6222251C2B54C7632538C2CA73DE4C93E31BFDA9B84FA756F03881D911582D66
D269EB93AACE2C4589AC2> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFU+CMSY8 /QJJAAA+CMSY8 findfont ct_VMDictPut
/PHVJFU+CMSY8*1 
[3{/.notdef}rp /asteriskmath 252{/.notdef}rp]
PHVJFU+CMSY8 nf
PHVJFU+CMSY8*1 [7.749 0 0 -7.749 0 0 ]msf
295.847 122.438 mo
(\003)sh
PHVJFT+NimbusRomNo9L-Regu*1 [10.6549 0 0 -10.6549 0 0 ]msf
300.448 126.286 mo
(,YiZhao)
[6.39294 7.10681 6.69128 6.51007 5.32745 4.73077 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
153.596 138.417 mo
(Colle)sh
174.441 138.417 mo
(geofMathematicsandComputationalScience)
[4.84311 7.69084 4.84309 6.6156 8.61111 4.30067 2.69276 4.84308 4.30069 7.53586 4.30066 2.69278 
2.69278 4.30066 7.15817 4.30067 4.84308 8.23328 6.46078 4.84311 7.53583 4.84314 4.84308 2.69275 
4.30069 2.69278 2.69275 4.84308 4.84314 4.30066 6.08295 5.3855 4.30069 2.69278 4.30066 4.84308 
4.30069 0 ]xsh
216.189 150.399 mo
(Shenzhen)sh
257.239 150.399 mo
(Uni)sh
271.526 150.399 mo
(versity)
[4.69778 4.30069 3.22543 3.76801 2.69275 2.69278 0 ]xsh
199.819 162.381 mo
(Shenzhen)sh
240.869 162.381 mo
(518060,)sh
275.739 162.381 mo
(PRChina)
[5.3855 9.85095 6.46075 4.84311 2.69278 4.84308 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+CMSY7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+CMSY7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSY7.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMSY7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /multiply put
dup 3 /asteriskmath put
dup 54 /negationslash put
def
/FontBBox {-15 -951 1251 782} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 708] def
/OtherBlues [-139 -127] def
/StdHW [49] def
/StdVW [49] def
/StemSnapH [49 69] def
/StemSnapV [49 69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/multiply <1C60D8A8C9B5822B853880B535BFF1B4830442DACF30B4FC7A403
ACB5E48C1E001C79BC267DD3FAFFA0A91B001E44B0A5139B3CA6AF243F4AE4AC
9DD3F7BCBDF5BBBD77018E72D662B1AC1A4DDF71CBF45798E20885DB70DC625B
76BC526FE01B7884DF1B021A1519279CCBFB9F99055C0E0D25D8228D759711B5
FA0E3BFD7EC1D784278EDCB88F3E4BD487FA567> |-
/asteriskmath <1C60D8A8C9B7F2A7A957C62A7E675D52274C442BA1EC23A83
71202E608E9C6C0239B6DD36C567054C95415F836653614FB1F26B50B17B783E
1ADACA259034D2DCE4EF8270D80F8D333BF25F0E720D955AC1C5D8F4D765EB08
4F98D1D1EB476EA1F2A963DFD114148AE6F7B1BD3441A3715A354217CE35DFB2
CF6FE845469D6B3DA2B3031EEB4285ABC98A131F21916D69E481E04F3CC38411
5510D3C1FEBBA70A7A989D4399A5238BD3EA8AC4FEC098355E91A071A3C8C15F
A9623A2A32DAB5D0B71> |-
/negationslash <1C60D8A8C9C4A6C26EBBAD90CAD34B0085C85B5A53F59940
FFAA5B9FD907AB57B920ECDAA795AD110EC87E01E8BC3214F239FD4678666E86
C163C261EFD9393DA50E885FD179> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFV+CMSY7 /GFNBAA+CMSY7 findfont ct_VMDictPut
/PHVJFV+CMSY7*1 
[2{/.notdef}rp /multiply /asteriskmath 50{/.notdef}rp /negationslash 201{/.notdef}rp]
PHVJFV+CMSY7 nf
PHVJFV+CMSY7*1 [6.7803 0 0 -6.7803 0 0 ]msf
140.062 170.862 mo
(\003)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
144.515 174.377 mo
(Corresponding)sh
205.48 174.377 mo
(author)sh
229.695 174.377 mo
(.Emailaddress:fengjw@szu.edu.cn)
[5.81174 5.91818 7.53589 4.30066 2.69278 6.0829 4.30069 4.84311 4.84308 3.22543 4.30069 3.76801 
3.76801 6.08295 3.2254 4.30069 4.84311 4.84308 2.69275 6.99347 8.92102 3.76801 4.30069 4.84311 
2.42154 4.30069 4.84308 4.84311 2.42154 4.30069 0 ]xsh
%ADOBeginSubsetFont: HJCBAA+NimbusRomNo9L-MediItal Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HJCBAA+NimbusRomNo9L-MediItal def
/FontInfo 8 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Bold) def
/ItalicAngle -15.3 def
/BaseFontName (NimbusRomNo9L-MediItal) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 73 /I put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
def
/FontBBox {-200 -324 996 964} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 449 469 669 689] def
/StdHW [27] def
/StdVW [120] def
/StemSnapH [27 33 36 43 54 64 73 91] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
15 dict dup begin
/A <1C60D8A8C9B64EDF88209F7A3A8B4B67C1D2E41795F9FDE15699C8B1DDBD
6C8357A707E4E3B43BE0D0DBC03660F9C056C158ECFD339ED4504DD99E108FB9
BE948D92DFCBE5879F82238D336BC2C3231D28668DD38821DF5F80DC8B55D776
9F13804FB51B6D6A26F66E5F0D2EC324725159939B67> |-
/I <1C60D8A8C9B7361F7E31A317760F3D00C3691AC4A8B46F6D250B5407F564
D43D274AF174C44B2BE89F3190EFC2060A48B8A338605B0E78F2A8EEBC0AD244
8CB8D9804A92D74C957522438A6A5BA0A12467C21267486C98AE4324AF97> |-
/T <1C60D8A8C9B7D8BE6A7B5A6E2F2335197607FEB8827B71C80B3BABFA3BD2
76DBD2D03CF891F7FCC7A08DD0E56B018A0FDD7E66B53DECE0D4CBE57BDB8FDA
E6408D4FB600C9E3A2C006BDCB0D08FB2CFCC7C4613EB6A5400E63A7> |-
/a <1C60D8A8C9B7A73D307FAE58C5A2B973941D654903C3A678E32F30BAFE14
90461CA7F09540EFB2045CEBD7D2FA900599388F0E348501561FFE8B4EB3762E
B39AD68A1696756B258CA06B69F2270A375AE40B34855AFC2297EFCF90B70656
FDAA93298534D11C2A7B3353B3B078BC096A409FF18272DDF6EADAAE34AEE0E6
56A37887D300BAB9E135C21FAE2C0B108D3F8CD9AC9143988B4E06E9880D5C6F
7B7CA987E9C55602BF60DDE2AA75FB141D907828C7FA77B48A> |-
/b <1C60D8A8C9B7A73D300117265B8D7CB0A3BF2DAFD0A1ADE119067B99F1EA
C43A79C59ED029E7ED4F50F9173538564F14497869BF4F5BCC9ABD9574D738BB
2A6DCD147004D7A68D044ACB76AB5315B9653B1206B93AA0543C494487881AB9
0DAA2B15C2594F7AD84A9BA9B23758D8E22DEF5278A2B1A82314D8341F624154
6FADB0ED200A8404F6ECF90933F97F> |-
/c <1C60D8A8C9B77FE24789E4BC9B812BE45977EEF969C10349B1FA5FE25DE5
B836B87DB404B6EBD2EF77C23B51B9B64109855ACEB57E52B9505511E73D8376
F8E5D8B406F3E0E7DD4104029B37D9D9E33CB79C96837985C9A29E827EB466D1
1304EF30FE421054747C86F7E1215911C555A707AF35A1FE> |-
/d <1C60D8A8C9B7A73DB6FBE0828B81060D99062E95E589870313EC3696D4DF
B823650AF68EE2108BC836C3BE886EDF52E49BDE9335DF3B8915761404A47B0A
3755B53158F48A50935D889000E8AD6395BFC9A25ED1588597038C59B317AA98
1234B9B34EAEA1A1F650E46CFB085162D1A37DC7EDF8DB7141C6824BF92425FD
0114026C78D7571855C2F5C88ABB40DDA2B1D588AB45A445EFA676C29F59AEE6
73826742044847CD8BF978D3B779E9D2F943BD0C64440A52C018B43FEE799965
CF596914399DF4EA585399F8E2DF05> |-
/e <1C60D8A8C9B77FE24789E4BC9B812BF20F3F761CEDE79AD610A0EDAC0AA6
A05D95CF80913300F180D31CD73876DFE28BCB91297C86C4C217DB7220067B3E
4BB1605AC017C7EF368A8B0507564DBCBB91BF9F457905EC65C437673ADCC0A1
97C82FE89702AB8929C6A57231B22C5BB721087EBCDFB7FD37F437> |-
/m <1C60D8A8C9B6FF868009FE5FB6C329D720370026DC8AE1970F6D57F90563
6E4E9ACCC8120ADF6D78C2E558FF78A9086BC0F443DBF90E445699C1746562F7
3C3D84E29DD60AF8D7D6827AFCDCDA5046639F2F9E2CAA4A7EAF8E7F75A1DAF7
D3EE8BEF630FA2EEE671C8AC2CA0990C7A875BC0AC7B75D2107BFE6214F1EB1F
BC230C9E7C84900E0BFBC93C3BC22280A91FE424D7EAEEC91581369552844277
896AB39DB339515AC8528810CE93BDC8BDBDE8B8D363892273A1160958B77BEE
36A7CBAF69435C5BBB0282B29FDF286C8716564528F25119DF4A917DE387152F
5D88FE3CF9142A67036B4F342C5738F124CA0EF36D74503B89EC9CAF0CF8B1E1
82F0EFA7B2B58E39A471> |-
/n <1C60D8A8C9B7EF325EAA3A32000911BBEC6720DA5BE507085CC27E62EABB
3FF144788379BC5A76BE1B40BDC20B473278B7712AF6C26B79502445A0D16736
AE535F24A9676D75742FDDBCD042F63C3393CE8963DF30733540A724693BC979
E4ED9148060D8C27BE611DCF6BEA581B8DEFC11103CB121206C2FBF70C5A7A26
381BCB4624F43BB04E6C0BA0DAE4483A090A53175708E45AD0A588BFA559C08B
E3552817646A78B0FB2E1E1D76A6E32024A23069E06E3048572E9D0BCB5B5384
7BFBA42318> |-
/r <1C60D8A8C9B7361F7E31A316D2BB2F180BBF6B943528444B54842EBA93A8
6B1D0CBAF966DE95065D0968283AA5B17DDAA29697B24811F97C06BEE65AA40B
F93ACF07877DB61758F60E7D06A0C75032751AA0490E204AB7AECBDD396A699C
E0BEC8FB944B953681DE66> |-
/s <1C60D8A8C9B7361F0DD1E1A3346E51673C34FD5278BBC7BD3D771ACD38FD
323F76436298AC7390AD25A1DB568AE2E9E54B4264ACBB046E318DFC71127FB4
44B545501FAFB3048C18AC3E41316967CC76039214979D88AB2B5B8C3FB75FF1
536159B92C8D30FFE83E600A9B4ED284AF6FE3E20F293F8C861D1B4CF5FCBEDA
3FBEBECFE0E18FC23FE2B4185736241ABE3103F86F1DC51F2E2BA9BB6C530D8D
2573638E0D13CA977A> |-
/t <1C60D8A8C9B854D081E7D96792FB307FFC725532A9B474E78E11EA7BE191
3BCF742160E2A9FDDDC5AF067B3D7281B1DD8CE3287E35FCB68710E64F21DB4B
B79A569F893D8E3A6FB0C4E662E45F032CD0003746A5FD0709638EADFA4A0FC3
40DDA71451CACC4A0EE4DB19A715A03E3130EE01C7DA098558A5958523CBFAFA> |-
/x <1C60D8A8C9B7A73D30441DE6D672D3231EDF98157653589E4EEA9CBCE764
EAB865D0BAFBFC819CB8A2092EE7E58949C63DB69613AE0A207B12151239D900
3919E29262E5C326B1F15F635294167ED644C1C2D3021394B9F7E7BDD6240E1C
E2D29550635ACFE7A3AED24F5781A4B3E0632C62F5CEF5226705DB9D0FF5B46F
B8C1A077CC7DE57184545F6081F49E3F622EA5FB37A2259B52E9B0B0B556CFDE
E53C64277C58B35EC640C58438670B14618A1BC96BEDA866> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFW+NimbusRomNo9L-MediItal /HJCBAA+NimbusRomNo9L-MediItal findfont ct_VMDictPut
/PHVJFW+NimbusRomNo9L-MediItal*1 
[65{/.notdef}rp /A 7{/.notdef}rp /I 10{/.notdef}rp /T 12{/.notdef}rp /a 
/b /c /d /e 7{/.notdef}rp /m /n 3{/.notdef}rp 
/r /s /t 3{/.notdef}rp /x 135{/.notdef}rp]
PHVJFW+NimbusRomNo9L-MediItal nf
PHVJFW+NimbusRomNo9L-MediItal*1 [8.7176 0 0 -8.7176 0 0 ]msf
8.96998 227.195 mo
(Abstract)sh
%ADOBeginSubsetFont: UGXAAA+NimbusRomNo9L-Medi Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /UGXAAA+NimbusRomNo9L-Medi def
/FontInfo 8 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Bold) def
/ItalicAngle 0 def
/BaseFontName (NimbusRomNo9L-Medi) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 70 /F put
dup 73 /I put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 174 /fi put
dup 208 /emdash put
def
/FontBBox {-168 -341 1000 960} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 461 481 676 696] def
/StdHW [33] def
/StdVW [140] def
/StemSnapH [33 44 48 55 66 73] def
/StemSnapV [118 140 148 163 174 178] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
32 dict dup begin
/comma <1C60D8A8C9B8707CACE96C56F5F0A7824F9B434369EC1329B28C89BD
BCF2FCD7013E9C54653B062390D37AB5E4528589514779D0A55C5ECFB3D2F291
53421D474A2D06B58462C8BB8452D5F2FD8624A7B0DA7B7870B3862D03BE> |-
/hyphen <1C60D8A8C9B81F2C3A8408B8C48451A0FEB66419A50D7E8B63238DB
F020D50FA75> |-
/period <1C60D8A8C9B8707C5568E087A7013AEDEAB4E43FD5B4AD668B70E3E
CD4C9D9B81940C416ED75> |-
/F <1C60D8A8C9B7D8BE18D6EBF59787B8941E7537197C276FA80C62327C0EBE
1014E3FDA9A49C7CE90C8679044CCE0BCAC39BE6579A95A9063F6B53B01DFDCB
42B5DFF83E0EFCE1AAD05CD5E45A48B0A8991DC50F3A833E5C146E89FAEDEFB5
3CB9318BFDA3F7B29F943B0FBFE72219150C9BAE81BB6127F999A3FDE0D8E333
D72F22B09A90> |-
/I <1C60D8A8C9B7361F7E0A3182AF0840CF1C57BBC49124C1EC6790FD6C750A
84B54872ED5DCB6E653E4613CDBC21596754FD7C6BA90BB6D8B7A860C20B7641
99AB7357886C5D542D> |-
/N <1C60D8A8C9B6079F1E72629B90E3BF572C953D8759DE52ED4DD974525AA8
C32EC86A268D745B9D96F5EC1D9BE242CD92E3F0B73A87037705BD73030DF5A1
C9B2592D4A41D5235E666C1FCD2B7EF6AF2103A544AC1261268AD5C9EDA2F3D0
FA8BABE8410EAA7AEABBA82697A3D6C98A5FC6C6EFCEF9FA> |-
/a <1C60D8A8C9B7A73D3387F3351E8E18AD4C337D189ACB524452C5C76175D3
6A9B9EE21E61CCD032B72EA732DAB08D223F8476F8158A75DD87D53D4754BF58
8F21BBDD0B9BD8A57E8132EB5982C81AEFE1FC21DC7FEF21759B1DDD64FEC1B0
1D76B223BFE0C623B317990FF3F82C513CCA8FA63FF271DA495502242C53CA27
EA3287B2BBFC3217711C1DDF95ED56603997D39682906E04AF748FD5C8E52443
0A90FD84624F869BD880BCBADE562C810BE2A83CC20CB51E6D0CA2C7008633C4
06518E> |-
/b <1C60D8A8C9B7EF32A197526A4B04A18ABDFB17B506314FEBCC967D58D37A
1BAE1D70D51387A69E33A3528C1E4C46131DD0F716CB9CD5D029861C055A88A4
7591CB3E3F2D0AE589CD946E2F4EFB67DDEE0D1973635635E163477753314CA0
CA2593426D2EDAC290CA8BDEDC3D96B7> |-
/c <1C60D8A8C9B77FE24419C765668C66977042CF4AAC33A05586CA04AB921B
B7D14E2740B1CE39960F7CFC14FBE33A3738153404F59CDC94DC3EC626A023EA
0F50958819CB5E3F42DC48646B0675A464926E4575093FB7FB37B685779CE3A0
2CD6> |-
/d <1C60D8A8C9B7EF3243D232E82BE0910CC994C22771842A9ADF622B1D79E3
7DE4B68C19FCEF3730CD11E25E3272E2D5BCD269C67B73F70F41A90007DBE5E5
2CD25DBBED229B9448840D6CD8FC9C629790473304F7C27650B6E8C1752F56C8
3DB6B91FCDE4B804D81851D7DF80C983E503F4B54CFB5219587BA6339570529E
29DE5652FCE8EA96FB54198A92511FE6D7B4D6C21BE10C37FCBC2F> |-
/e <1C60D8A8C9B77FE24404D6FC75C46E8B158C7975D79013EBB5DCD53440E2
1332CFC4ECC341E7AFADF9585DB658612EC8ED47CB15CBF662FC73FBEE0045FF
CB1EC723F1B412304D1100168E2128E2060163C1E9CBFAF33B361B5A6E493F9D
F06D41DD478FF2FA297D0668847F9C36D5F5C238CA> |-
/f <1C60D8A8C9B81F2C46CB7D4B088C9644D850FF2E7D4B535086D0F5438DAF
C761104412F361FE092E9179ED2DF1120475113D9F11FCD502BC52046F3C88BB
DF27941300ABCC14ED64B8A7F615666C615610346A170729FDF8D7C8CDA401C1
95E18403D8B9F0195CD09B663946D17CB518E3599938731873FABFDA> |-
/g <1C60D8A8C9B7A73DB6986B74967860531D5C33FE655CD281C5643C14DD6E
74CB50E9F5CEBF92AB3E2DB23D8D0536338ACC1434BD74DB78E6C8972A56B5EC
A00CAED24519752EC7C275BE9E252326654566806EE44BED5B9C3C15F855C948
AE366CCB698D2FF7464E816DABCA2B9DB7D8F75909CEB8F70AAF3E4633401D87
E86EC0698BC79253BA9A49BC1498FE9CBB60BCC5D06EB4A08004B665B63A67EC
9E690E5E0DF479D3844D0B21B68EBA67DB35C98DDC948E732644238649DBC89B
54633CEF2AA882567C823C6F21331BD4F98556D8FCC8D44F10AAFF9E4FABD558
7810FF14047DFA3E5185E0955F6BD298F8306A17456D921D7D3C75CFFF140087
BB0D9FABAA9F75CEC075AC019AE213A62E888471EE6E4ACF6C4AC9422C554BB4
2C> |-
/h <1C60D8A8C9B7EF3257330F56AA26B3B4D60E1AB698B7732F7E2F8B8B1233
66FD09FD4CF17306DC3C95E7C7F49EAAA224DAF837A0D57E9845075192FEB55A
59F361EE897E2ED04657CEF5BAB80C209F8B454E76E95664E5E92A953BF5D04A
824985B9EC7D7044712DF5643ADD4D8814DFBC9F902E4D275DF69220FC0263A8
8AA2FA89922F> |-
/i <1C60D8A8C9B854D088BE03066611142D35B96CDBC6AC69CE7D90A67E607A
97F6A9B6B875C22F51FD57BA3ACC3AD42FE0C4A0E1D536D46C6FA1792B134074
70AA44206267D45F7C9D5285679ED629FF131156C24DB7D425525CB4E784EDB9
C67C53B4D02F9488FD31A7A26AA8AF73> |-
/l <1C60D8A8C9B854D088BE0307DDE29E2DC8A57E14CCBDD0429C9D43FFDCE5
7C1979D6548F9F5B47CC0F21039A42929DCC89E93721E673DC46552B4818AF30> |-
/m <1C60D8A8C9B6B41C9EF86D4D6709D4B4B598121ABB5312D265CF235A834A
848ACC160F120715B6D9D9DE49A3676340531B82B90738BD6CAE6D52EC61EB6F
4100397B542B30AF3045B69D55E829A9CA2911FB8306680557390AE6C6E38174
E5B992B3A2996A5F949A744E66386898CD4C1779F20816ED829D9B8A2CC153DF
2F608734FD0C20B55E924BDDDE7E6223E65BE10116AD2D3B037AA521B5568FAF
DAFD271E86BD3F46731A36986FF307B81847FA4B628417767B7F0D8377DC0DE5
5BC2A6833B5A24A1203B58FB063A9975621BEF54EAE531E2> |-
/n <1C60D8A8C9B7EF3257330F56C94494157A7EF7FFCBD73F84DDC3CD027CBD
344CBE46734D8DBE3D0D7A5371055EA217764D1E6D19B975A4618DAFF7C83378
2DBB8AD061F2A7084A3861B8353FAB4D938BA793AC098E1E390E341D00898940
4E3478333E6F04C8A2256EF7F64BCEACA7195CAB26AF2CF435195B53F578CD79
712EFFD6BC467431370A461A8086A2496F058336> |-
/o <1C60D8A8C9B7A73D33B29FF9A975322B3362DC44B144D77C192E90E503AC
52DEE198FC9B9A0BE397FE5C900774EEEF1E745C0E1E84056DE211BFA2C0DD56
BD867F1CEE2D1CAF0E57E72D77AF929D1611EB127B9A6B678E> |-
/p <1C60D8A8C9B7EF3227BDC2DEF081752ABC87234A787BA60BDC47984CB411
ED63EC5E4B6D9478A33F088C2CF316BB52BFDB2FED861B15237D1ED95B6588FF
AAF4CF1D5D5601B80B411956DD9A8EE126B5735EB8A2084BC88DF8086F350B74
E28D821E583543F692E28901FD341BDD4D823558AE3235E81A295B5EFBE1B545
992A1C7B5623EEB3F1D3B33C87E44AE813DE4EF7B2CC460C88EC70DF784AA774
F4201DD8AE370C53518363BFDEE9C94F8DB93BA9732F9E3008C774076C08C665
4E3E> |-
/r <1C60D8A8C9B77FE2B2290770D44CC430BF6AF79602E44809DC88D3C54004
27379EAC0B160CEE8AF2E8F72C87C0147E60F09C5282EDD102E5F476C901E4E6
9904CE6DB98CB80ACEE6CA70E710379770254DC0880BBCB5487957E5B0BB4709
CA0E4C60374912AFBC44CC6DACEA916420> |-
/s <1C60D8A8C9B7361F88137B0B3B9E3BE8575A6F0132A8AB9BC21CCB7EEA59
D7C1838FEEC96953798936A0666A27E1BC45EA9D786F997994F74D34DE4AFF12
ED9FE990CE76057A0B0440124651A1447CC3EB65F8E5DD21BBCCF42559B0DC72
BC23E377821A6082C09BFD65655DAD91AC241371D8EE6F35DC6A81FF8B99FAAB
CFE16B4C07309EF358F349B1ADEA227F8C0DF4EAE6353A5FFA74> |-
/t <1C60D8A8C9B81F2CB2ACA02E0CECC7A7088ABA14D8BB1C717E776D9EDDA4
1B7C69A092B87660DC1D8821ED3D3E1FEA1F5AEA3E07AE0B68C4FA037897D267
0ED7A25F38BD082D632B2C2A93BC6E0C80> |-
/u <1C60D8A8C9B7EF3243D232E8573DAAF0F171C711AF0EEFF6FE5D5256DF8D
97D672758F82C9E2E877C020A441F6EB402FD1AA5DEC8D1C598FE06768BF2DFA
7BC4F3F56A078987032C87801D09237CF0E0DAE05AD963395884A2967847A085
BC10BBCEB6CB5318E5F568F7AF4D6031693682FA630A2052D1C2FD845AE4DF2D
65> |-
/v <1C60D8A8C9B7A73D3387F3351EBA955708736DF6DBBE5A6BBDC5B16FF90B
2796A40E907DB66E209CE98B2FF10F1ADA9282D643B19551AA40F0E8C7EDCE45
DC4C2D18302D116FBDE98C490A37A0AC7CB7875902354C1228FEEAAEBBF6B6FB
B829CEB817DC78B5BCB52D2BA6B351B4> |-
/w <1C60D8A8C9B6079FE827C15FB83B1503199A092AD3822C388DB38383E9EA
D719C761150F7CF485E3FAB58FE6077627A086EE00F384828FA9E7E754FF5F0C
30816B384CDB9059951BF9BEC38694DCC4A6323065CA844FE06EB38EAF037C00
F75BE013DE6D3AF5E95CFA710380A2A2FB7E603FDAAB142167FB43E812C73774
8B7F3607A92440A3CD36587D64BB08ED3773B9A0DACCB08D014B4D591197F0AE> |-
/x <1C60D8A8C9B7A73DC54C6E6F14EE3C46CB7CDC5AB497D68DFD7AA0142E36
0BF940055135BAA9E1DD3916C092B7327B8304936E87D98443DF5385026DC646
EE7F6716AA0283AC02FE5FD75645F16B78BF2D7BBD6A90D6EF2D3E8B265F32F0
AA779FBBD398E4AE0F604080A24B726ABBB896172C52ED9526CBD13956D7057F
7B6CBF5D4B67F1F580269EFA76FC109D431DAF8DD702CE94EDDADCAC85CA9EC1
E12A007C885B3CD141772B4078DC466CB8501EBEAFD4201A7B8204CA38> |-
/y <1C60D8A8C9B7A73DB58DF6ABC4C1AF5EFC125FE6C359A08BB2BFFC7A67B2
7E2F364682D82A3CB3B97945B9CF478EB602CC754345B09114C85962712E25D9
EC080FDDCA108C0C4C7AD1EFD9EBD254799B46DF18467A9F6E09AFD467F082BD
EBB2D0AB4F916FB53590B6CC79EC098EC44D11B153032B9097AA730E748CAB91
2BB594BA5FD41B1B3E088FF709A94E7A24E118276A359759EE4FEF29795446E8
A97247D117A0B653E1> |-
/z <1C60D8A8C9B77FE2B2219232DD564DAF555C712853E8A2218690346FEC6C
E530C799B76BADF0E8663D02B667F8192E6044EFEB4D7136913229E5DBDB979C
5C0B3706E858397DE3CA24C1> |-
/fi <1C60D8A8C9B7EF3257330F56B57001FD513F04FFD1A5C17B63152578BB2
67A7B2E2B90DD68AFDBEB8FC7B2E75F2D48162D18E101A81CC291D1BB988BBDF
E501CA206E27449FEE4AD01417447928725351CDE66FA740075E06CC061C329E
4E4B90CC15BB1D1778EF3802AE67324F1ADDB099867B7ED6B44271B00E467A7F
9E8E25BD42223C2BF51DE081B320801B3103738AE6B73C9D59A7D9D7FD7DC5C9
B001F5512BB30893BBA1CF0C0887439EB7BEF9A4A3B61346AD1C8FA3EDB14ECA
0B0A702> |-
/emdash <1C60D8A8C9B5EE310D4694DE94C3EC95FB9912493A76591F> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFX+NimbusRomNo9L-Medi /UGXAAA+NimbusRomNo9L-Medi findfont ct_VMDictPut
/PHVJFX+NimbusRomNo9L-Medi*1 
[44{/.notdef}rp /comma /hyphen /period 23{/.notdef}rp /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 18{/.notdef}rp /a /b /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y /z 51{/.notdef}rp /fi 33{/.notdef}rp /emdash 
47{/.notdef}rp]
PHVJFX+NimbusRomNo9L-Medi nf
PHVJFX+NimbusRomNo9L-Medi*1 [8.7176 0 0 -8.7176 0 0 ]msf
43.8927 227.195 mo
(\320In)sh
65.0242 227.195 mo
(this)sh
82.7645 227.195 mo
(paper)sh
103.757 227.195 mo
(,theglobaladaptivesynchronization)
[6.35513 2.90289 4.84698 8.04634 4.35879 2.42349 4.35881 4.84698 4.3588 6.59923 4.3588 4.84698 
4.3588 4.84698 2.90289 2.33633 4.27161 8.04633 3.39124 4.3588 4.84698 3.87061 4.84698 3.71371 
4.3588 4.84698 2.42349 3.87061 4.3588 2.90289 2.42349 4.35883 0 ]xsh
7.06083 236.881 mo
(fornonlinearlycoupledidenticalnodeswithanasymmetrical)
[2.68496 4.3588 8.46479 4.84698 4.3588 4.84698 2.42349 2.42349 4.84698 3.87061 4.3588 3.87061 
2.42349 8.96169 3.87062 4.3588 4.84698 4.84698 2.42349 3.87061 9.44116 2.42349 4.84698 3.87061 
4.84698 2.90291 2.42348 3.87061 4.35881 7.01767 4.84698 4.3588 4.84698 3.87062 7.98538 6.29411 
2.42349 2.90289 9.44987 4.3588 9.44116 4.35881 3.3912 4.35881 7.26169 7.26169 3.87061 2.90289 
3.87064 2.42349 3.87061 4.3588 0 ]xsh
7.06083 246.566 mo
(coupling)sh
41.1989 246.566 mo
(matrix)sh
68.5372 246.566 mo
(isinvestigated.Formthereasonthatthecoupling)
[2.42349 5.55318 2.42349 4.49828 4.27162 3.87062 3.3912 2.90291 2.42349 4.3588 4.3588 2.90289 
3.87062 4.84698 4.34137 5.10844 4.3588 3.87062 9.42368 2.90289 4.84698 6.03256 3.71371 3.87061 
4.35881 3.3912 4.3588 7.00894 2.90291 4.84698 4.3588 5.06485 2.90289 4.84698 6.03258 3.87061 
4.3588 4.84698 4.84698 2.42349 2.42349 4.84698 0 ]xsh
7.06083 256.251 mo
(str)sh
17.0686 256.251 mo
(ength)sh
41.0594 256.251 mo
(can)sh
57.309 256.251 mo
(not)sh
72.5822 256.251 mo
(beextraordinarylarge,weuseaadaptivecon-)
[4.84698 7.04382 3.87061 4.35881 2.90289 3.87062 4.3588 4.3588 3.87062 4.84698 2.42349 4.84698 
4.35879 3.87062 7.52328 2.42349 4.35881 3.78343 4.3588 3.87062 5.3439 6.2941 7.04382 4.84698 
3.39122 7.03511 7.53201 4.3588 4.84698 4.3588 4.84697 2.90289 2.33633 4.27161 7.03513 3.87061 
4.3588 4.84698 0 ]xsh
7.06083 265.937 mo
(trollertogiveasuf\256cientconditionfortheglobalsynchronization)
[2.9029 3.7137 4.3588 2.42349 2.42349 3.87062 6.15462 2.9029 6.64281 4.3588 2.33632 4.27162 
6.15463 6.65153 3.39121 4.84698 2.90289 4.84698 3.87062 2.42348 3.87062 4.84698 5.1869 3.87062 
4.3588 4.84698 4.84698 2.42349 2.90289 2.42348 4.35881 7.131 2.68495 4.35881 6.15462 2.90289 
4.84698 6.15462 4.3588 2.42349 4.35881 4.84697 4.35881 4.70749 3.39122 4.3588 4.84698 3.87062 
4.84697 3.71371 4.3588 4.84698 2.42349 3.87061 4.3588 2.90289 2.42349 4.3588 0 ]xsh
7.06083 275.622 mo
(inpractice.Numericalexamplesarealsoprovidedtodemonstrate)
[2.42349 7.05254 4.84698 3.87062 4.3588 3.87062 2.90289 2.42349 3.87061 3.87062 4.38496 6.29411 
4.84698 7.2617 3.87061 3.87062 2.42349 3.87062 4.3588 4.62033 3.87061 4.35881 4.3588 7.2617 
4.84697 2.42349 3.87062 5.59676 4.3588 3.71371 6.07617 4.3588 2.42349 3.39122 6.56435 4.84698 
3.71371 4.27162 4.3588 2.42349 4.84698 3.87061 7.04384 2.90289 6.56435 4.84698 3.87062 7.2617 
4.3588 4.84698 3.3912 2.90289 3.87061 4.3588 2.90292 0 ]xsh
7.06083 285.307 mo
(the)sh
21.9504 285.307 mo
(effecti)sh
44.6073 285.307 mo
(venessofthetheory.)
[4.27162 3.87061 4.84698 3.87062 3.39121 6.66032 4.3588 6.172 2.90289 4.84698 7.13972 2.90289 
4.84698 3.87061 4.35881 3.87061 3.74858 0 ]xsh
PHVJFW+NimbusRomNo9L-MediItal*1 [8.7176 0 0 -8.7176 0 0 ]msf
16.7461 295.89 mo
(Index)sh
41.0857 295.89 mo
(Terms)
[4.52437 3.87061 3.39121 6.78229 0 ]xsh
%ADOBeginSubsetFont: MZQAAA+TimesNewRomanPS-BoldItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MZQAAA+TimesNewRomanPS-BoldItalicMT def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/BaseFontName (TimesNewRomanPS-BoldItalicMT) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 65 /A put
dup 67 /C put
dup 78 /N put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 208 /emdash put
def
/FontBBox {-547 -307 1206 1032} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
30 dict dup begin
/comma <1C60D8A8C9B8707CDCC7A44A75EC486F97246AE6515B8EF5C7BC882E
C23DB7A920FE317BBCC13A35C369D8476B9317B0E6ABB1F8D0E00B49EB5A6F29
5815D955DFD3FA7D89B1C024CD235E558D21AE20243A15B8C1FF2E7ADDFC2EBF
BBBE> |-
/period <1C60D8A8C9B8707CBE55F414D42FA40958A529C48262A7AB45CCB6A
7F51ED4B946C8BC439C5F7D537586A6F1D162EF6E0BA2B0B9E6D9E24BA939944
FA86D4A1795717C5B1AAE> |-
/A <1C60D8A8C9B64EDFFB5F3F7C0C437CA3DE02C0EBFDA3FCB2ECD3860BBD02
07B6F94B75991F16F0786F4687DC59D5CAA444F5B9B3B456FF04EA8C470B8A0A
79D50B8BAA95A5B0A7213EDB965DDF142BFE36D55914839509ECDDCAB79E11B8
69AB2306B10E422B6CF2799626D9B77E52B854D89FFA9B678F9A1D51C96FEB53
A9606A91AD0484C05CF40D79B839F5F397E15DCB4FFB2C41> |-
/C <1C60D8A8C9B64EDFFAF8740BAE87072231E98CC9FEF0518A6B857C0B141B
864D39BA7054ECD86DED3D02109E7077C246BA12F1F1498FDD97DF014294E0A9
684FA0A2E9FE49ABD4405C3ED2DF68D688DF0591FB33F491D6468B42FD618CE1
942790EEEC458DA2BD7A74871345FEF0051D27A4C502F3941FB339BFF0CEC795
8D77143165A51916EFA1454747A69D585D69BB0CB3F2DFD69E03E8261A81> |-
/N <1C60D8A8C9B6079F62B1CDE12EC84D5041D4E399B69A9227D6E47B57BCEA
4229E18A0EFBC80497692508A22CE81B9481AD242FFBD0D7161752B4543FD49B
8533E12B4D6F4C7EE247427643145A117E91973074AD88FDE135799108246251
DB0710BFC8674C1C466E141C70F6E87C129E351D39D9237DAD7A46B54D311046
99D5186F4C878EA6229CAC94D6CCD0CAAD975936026B7116B5174FCAA669B8D1> |-
/S <1C60D8A8C9B7EF3224B614986851DD988527341EFC0D585552431F736FAF
7A7432A4ECA2508A53B25C7255D6EC90DBD01F7E699DEEC8A9FBBDD0C8F0DDE0
938B463D4154586326D339EE28550903D477B2E52D748D98F9212C57AD6BC2F4
D6C8DED8428E6532202EBF6BA14E4A623FFEF52087158E19482E610F7494DE4C
FF6D645918E1E243551DC0D6E63739858842321BFC66888438FA46DF182AD656
C7D4864DFED5AFFEAD6DA4A113FD2EF783179341CC65DEA87D3AD05A135FBAB7
706E2ECFD5AF23C4F52F086459A9082B1A4254695FE6F08ED8765351EDC16052
2847288F43D07B4D6A35FF8B5BCA844CA5810543454F71C3> |-
/a <1C60D8A8C9B7A73DB6B8813473AFCF276C3DE46519F87E95FDB2A16347E6
D2EE400931226C6533568675DB2CEA9D1F372B71305234822A571FF61CC367B0
A132BD22673EFAF0BF96B24E7D6AC7D902A9530589D5205D55FD13D645488526
74734F7342BB682B55A3F8CA2E93D61220A0A32DEAFA3A4975E091685FDAC0C7
AEFEC2C13F6A24CD4B9A81DBF539E51A5489B5634AD708021F26BB5A56AED928
0C5F2C764B5E3BD72F8D96A8AFE314B463A443CEA49FEE83C3CB16E80163EA9A
4C6A4BA860D428A82468CADEEF0C9B9F3982928DED12962CF3F02B54A0158026
A2D122F8BDECBF076AEEED96B509AD0D8FBB> |-
/c <1C60D8A8C9B77FE2CED904FC261ECC92B9EA7DEF85444D2E29F94E540BAE
3FB87F81A475B5435230F1068D2C12B3DEECBF90266CD13C8342952E4F0E3BCB
F36CDE5BC90A3D35D3C480C70541A966F2AE2F8D1942208FE7E1A1375A1A4067
D7BC6EE56E145F36B983E93D5AE6C4EC94A41DBF9DD28BD461271CD036A22278
57D547DC17775BF852D2048E9332B43010C27BACE89561692FE7C0175DA36897
3F9B67BC6841CEA15C030499196CE8990040301DA4ABFCC31B205268680B4EE4
7614> |-
/d <1C60D8A8C9B7A73DB625092869E652A05A3995BB65D7FD0E11F891CDBD96
064C425378832630AC84777B3F005698B3495ECB213256B9146DBA665ACFA3AB
6C3DAC820289A04213784A780ECE6B97DC8F5760D31AC090A2AEB7C6DA40414B
BB96E0D54740A3594BA26DEEA0030D803F7A2DD8FF03A48AC0B730757D5D278D
A7F0B42D2FCB404447A334FC7CACBC725BCC45FFF2093993AD68C743340CB50A
B68DEB2A797FD25BE407D1C50716E1A49E6D5CF2EB12BEAAF971F0EEBAB37C27
AA2889E84E35C7EDE981B49781616DB2F8D6E3809FE0E00F427DE93250D0162A
728501349B2DF64E1D8B4044E58C3B547D9BE90173AE2C786A4EE89B17082B7D
5BC0A38E7F7607E55E8426E701A044FAC9952AA6> |-
/e <1C60D8A8C9B77FE2CE91319F7D338D756C1E9B4908A37DB9D8BC76A8097B
4ECE0530880DEDEBEB2EC13B2E74DD427D38D23345FEC35CDE01D62199655DAA
6BD6A323BD5F32D058572DF5EB3EA71008324501D61DC8CE0A53A0EE5C67394C
AC9A78CAB8B35A9D875A6ACBC5404DB8C5B2F78D37F38AD7EABFB1AB97A2F213
DD4FD756803DB6C18BB232400BB7AE962F6F11192C6DD72C9B60BC5694F8FF9A
002955889A3629AD58672BA314D85E3CE9F54BC9999F3BA9D124FC72E205E5FA
A01734AC76F87554BA68AFFB75DF82> |-
/g <1C60D8A8C9B7A73DB9D5529D03022A8A942CF5A34DA26C88EAA6A5BC6D95
61EE655DDFB3684D14F07C654D0E951AB40C2C175CD7E9B49334C28739343BB6
C9390F869CA25DB155DFC93F82C6AB60A7EA40CD3A643F8AE2DD8B2055021674
5B912F12AD89B44B6992E633804644DC75E975B7C20FB9FA723E02076D0FF49E
92D781CA86FCD58F54FD9747B3E3F41A0FD555183D87F7E7444B3EF3F12F5F8A
5455FBF9E342485CC6454AEF96E96EB3DDC02F95191546AEFF28C8AE3A3C6839
3CA80859AFDF27856BFCB2B6CA3739D5FDD3C6EBD935ED4BD1F311481501774E
81FF77E6E5202D3FB1A1A7E28E067130554B375A9E92CB5FA677063E33B8189E
026811F9B75801ED3E85B7A7434A2865330BA09AE5CB446233B48D9A0DBA4564
A97246EB553D7DE80A54F37F4B29364312FCB4E3467558C34D70AEA8F15B8471
6325C3E59E1881983F26E450C9A394EA783AC1F2E98D070A924DBFA584AC9478
E37E08396DE049FDFC535EFDEEA66590BF192F26F90DBDBAB0D6> |-
/h <1C60D8A8C9B7EF322BD4AF6564082D5B93D253EFA452BFA9DE987078DEF2
CE7DBB25E111FB1B4F0EE61484E95860FDBA473D2393F39BC74025A321392352
01A02928600AC0D51EF5043E228625A6B76F2D9F9CF9E2AB3CDF54210DF74C0B
78E2EA78FD3227F12C91DCBEBF72B86B9F5B817DBEAEB7811065F67DAA15B6CA
1B0B24818FD04B05693359B7B01DB5AB926D1FF0CBA0ABF47B94DED1E17B42BF
49F3BC66BFB5F110571FA6F9FAA0F98C0A37EB79967BC13CDF06419BFE862081
F7057974AE7A8CD3520598A97A8B9DDA9DA9F6EEED872E438F850AB738823605
150CC5> |-
/i <1C60D8A8C9B854D0F4771F7E8F7EDEC16B72A6AA71F380D97FED60E02EDA
3B51F939532F9801CF91AF478DE92B79D440F5376609D3B961685D8D7730A054
52EE8FF20E40FFF41679D4A76A6DBFA09A0669142E885A9F5927479EB4BA3710
EDDDFCF4316A5B48ABD359A85750AFA480865E520B20D7475E0665678F5EF7A5
5636046D100FE984A70C11B8FC1E7C18D2F0DE6FB416632007F17C86DAB776FD
84B5F522D512D9D812AD42561C145DDBC3661E42BEA711E4880B69D0> |-
/k <1C60D8A8C9B7A73DB99B1C7C335334D7114D0517008BADC823783A9F7C9C
D88A3F3A8D6D738CFC58D86533ACA2F8D95B65CC1B0D2366866317783A5294A5
EB244A30DA2A9E112431CE52E1A10DBDC77BD292E3DFDCF23EB43695A8870E81
E2B0C58625760073C3C3965B2DD0DF82B65A31EEF1AFB25AA4E52A340A43642E
BE0097180D889D6DAEFC8F756B5A02B121FEBB4426FEB68651651FF43A625AE4
E8627DBB758DDC8D54E65156747D664366024F8C2EFEE80D37EA35870C790A19
AA5CDFC61E76A4A578BE3362683E4F> |-
/l <1C60D8A8C9B854D0F48AC14852E2CF1910AC81A620A2C0DA3328F546EDF3
5DD8FCF13358686EA79EDA7B75F04BF601D594B11657C9B91E769E086DF53F63
E4EFF862F48ADAE860CABD6B13E859F2C2D581081F9B3B034A1A1FA67D4E027F
9F19C8DA71EB21E1DD118147DA837755AA3B6740AAC25BCC4DEAA717EADED0C2> |-
/m <1C60D8A8C9B6FF86F56B6F6A8819927D9EC95056EEFDEECC4B201F7F9991
00DFF2430C2A6A1C91E0936397BD21286EC255567A870F3FF088B50EFBB591A7
CB969874F0E64AF7B0AD0C58617CF2D00F4949A907A7D94D770E5E3E64F76B53
2FCE7B9B0B3E759B216A38218457C08B021DFF6031789310047A46F9FA5ECCF9
52DA9C480D900B11E1A1A8CE6BE15890AC040370E56A20704CFBDBFAE7B4408B
BA0A93788A62109AEF414C535BFC3F3674636D8359576AEDAEFDC959F0F094FA
75EE8AE2CA4FBC1919D65BD91C5089FCFBD065EF0C3C404C76D0B1912236352B
FBEA4FFED1DCFBDFA3202432D5CA9417D48CBBA1B4C1AC43FB3C928FA79DE283
A2DABEC9FF0B8BC9586D2ADFB4A5290A06BA6AB8D823E99F0E75AC74300BC383
DD39DD6910D0307B72632D2C5F1E074BA1B616B1F933EEB3390EDB9883713EB5
7B98D4D10005783AAAF105F348E8F4814A8763A59606B9> |-
/n <1C60D8A8C9B7EF322B9315A4E49A96AB59DB6A87F7F24222F8240F6C59AB
41150E10E339C43E0A5B8A9EC307571C60C9016585ED9DAA4B4FA337B142A46D
E655DB96A9064C9A96C4E137E7B5E160004CE8AB60A9B50F2D2803749FD223E5
54CA916FCE486E838D1939A80F70372D353397F323980C654AC1748EF3714C4F
6D5D67F55F945755F55B9ED166B66EC440052CF78C451FCF7C2722B1B22C384A
9C787EA392975367C1D7ADAC72E019B8CE832ACE1380D18885D83CDEE8A4BBAD
5FB8D1BF73E4956F09D6C9BB469DB1CB2A95C8837571B4D547DE3620FC6F77C7
8C> |-
/o <1C60D8A8C9B7A73DB9493E0605A6881E452811158A2196BE76120448A2BE
DC4B2339F3FD440A77B3F57B63E2B44EEA2EE6C247E4674EEC42156DEB11FCC0
C9EB475D341FF955D26CB247D2CBAF28B4A29AAA44ABD44B659889F45441E202
D9DF71857D851DBD7AEE7F5F1B6756C6D6C4E4E9DE09D8AB388123B63998909D
D105FA4881E69CEC6B6BD8E159E57E88BA1196EEF4FC378261E371E995F61647
A0C5B83D98D6F43BECF281809872E04D58FFE190751EB0> |-
/p <1C60D8A8C9B7A73DF441C2C3D9A5C5C889BBD67819FB73D4373A2D634708
E6D079BF71092D2250F9F180E7CE7E1AA6ACC58120C8AAF9119D1FBADF46B0EA
796B5643E9314DDD2342398DC19C2FA0C7A73EA1369C318E731A79FC679A8E5F
C35D43BB520FE149D6A6D28F08AB123019CFF142972524EACD4A4BAB05130346
E22B1C95AF4417C30066CB5B84C27C095597EB916C1A29DCE1A3F11CBF93C307
BF137B8C62515C698B92AACD3F9B729E2477E324DFA7F59A3FDDD9BB073FFDFA
677632E71A0776251E86FB5D94C8D2BC047BC70BA9C7DE07B7AC4F8DDD974AD6
3FFD9A6403818CEC0029114DC6AB5E85ADB893> |-
/r <1C60D8A8C9B7361F02C23B46795D72653910CD93921A6FDD9CDDEAADC972
AB982CC5D8D3B5FE867CBBEEFC619F5A1C2B4A972B9FED9EE648F895E4E074EC
08EC6F22DFFDDDA4FA3BEB19639C658B27FC38CEB153BE4CD37CCB1259210F03
A26F252BB05ACC7AD073E089DF5280B37883152B560576F11E3FF437ECA5369F
BCC569CCCDE1E70144D40303ECACDE46325D1661B257361B9E51262D3B37B2E3
A6E5> |-
/s <1C60D8A8C9B7361F0244D2BBE2A47ED6931DF3A05D5A2C924B299EDC0491
67486E666DFB6053A66F5A708226A083EE8AC5900FD251B234E429441383151B
D4159F480C04F3D3F4454A4DD26AA8AE40059EDE33BBFF27D1350A1853319D5A
ED8C69F074A4D5778FDBCC99B8B988EA76364B58074ECE73FB865321715C58D1
7C8F158650088FBE2721C86F468B8DA8B53DA36DE5037AD5BE48EDDE66AA6170
3935781F6CEBF55E7CCFD6D0215655820789866B4BA762B8DC609EA28293EB15
B2550B653437E8A882B28F097909A1A7BE61E7ADD93C0AD89CA720D5A71629BF
A35F89BFB2F5E86302E6> |-
/t <1C60D8A8C9B854D0F4912531593B457F49714B7E6BF362C20FC3D705C477
367FA4BFB097913D8DD4EEB62AE7703EBE5B7A7340241FDE43CF741BFE60F912
A5BF7990DFE1D8775342F8B552B3C25377AABF38C1E3900F87D4783D3B4B001F
192D5CB828400FFAC8036C899A872A6765362D18D5F7190E906A79A42B1D7BBF> |-
/u <1C60D8A8C9B7EF322B88F691AC5309AE7BF355D9914237A10CBE825B0416
60F2E00F1D6F6449E9C4D37B33D82782E56A2061AF3F4B99728F4300045677A6
67C6B44D067D4BBE518ACD173193A4B730D7E0A186CB80A1F5693C25BFD074EA
62C423D918DC4B92BBD1197B331986A8207C4A37FA765AF66694265A4C20F14A
2DFC23E19580E6396EBBFCEABF7F3940D96F73AA0CF53898108F7D38E903E24C
35CB2243AC608B6BBBC21DD600D7BD34DD026E693995D5CA52C4DEE7090FB81D
504C09663A5A6C0266A634ADF70DA362EA346EF398A0EC39EFCF> |-
/v <1C60D8A8C9B77FE2CEC7A69EECAC1233E1817FB9E2249A7E3F5D4D3C37DE
EEB93A6B6C708F82C92FBE1DCF955F666DE0B7F1BE312E4B0472158D04405A80
00D9612BE5260C70DDC4EB9365B339DEF99EDB1D4642B83DE2F6FB03B0672C6D
26DDF134ABCE7F3CBEFA35BCDBB518C2C6BBDAFA3E82E00549E0E6DD6113FBF8
99485729AFBADF64E72D3ADF9D86F55868C207911AA67120B5BD516918E01F9D
BE5640951F6EF3> |-
/w <1C60D8A8C9B64EDFFB54122476F59242924376B51DFEFAABDDB28CF5B1E9
8B6FAF576556287B0804DCC96C5811430A27F132FA5AEC7C5EA30D244B91E36A
EEBDF20EBBC1B808A096CB1301CB2D6EDF1108DBE92F41B853227BEDC68DDF53
7CEE67C75A6752B40BBB613B3C2B934E5EA77B037B59FAEE9D3E5188E8A254F1
B3F8890BF44EBE42415CB51464397F57D3A81F2E4E2E2722175D9EFC7AC7CFA2
9B4ABD8ECACEE5992BD0AEBC9B0870EB61D109140F5A7F7FC2FC> |-
/x <1C60D8A8C9B7A73DFA773A3F51AB3FA2DC71B5E012069102B0CBD8CCF6ED
DD439BB578EC6E722040ECEE64F34953B8224B860C3D1B65F85C8BDA7A8FCA2E
29E03A6F17CCE901C34E7508E752DDCB53806A825148A3BDA71658E96FD58ED8
B9FA20CF8E934417AB7ECE08B1BF4B5D6D2D7436962505F97CB2492CD915CD3D
7DDC6FE59B7A0D9FAB976B70BBF8A821ABE1B749F5FACF4B3F69962EB8433169
46B527140AEBA18E25954DA2ADCE9297F8135832DF9FEA8D33B98EECBC268BD3
25EFF75085D36A070CBAA0DC8A695DDA68719844CB1F87C551336115D66BAC52
7DD6B1C5F629B1FE01FABB6340A64A75E7F7E46219FF288FFB4C7444C0E76AA4
5155B7F9FE288ECDB51BFA376A6A2238BA50B657> |-
/y <1C60D8A8C9B77FE29FC04BFADAB4DF4FFC0C7750E34EA9C70C9B9DD7C0B6
A44DBA3C98C662945682F37BF4FBEE9253C1E593D43C3A54B617BBD253E0FE8F
517C356B2AF9B0CC182248C53A06BB28CC8756D9A01BFADBB46243EA3B50CAC6
ADD3AA8AB955F607CE616621E089E02480B4C9F2CD7599041872785AA8F1E740
FAB6CD5D3FAB69B24064BD6BD7F2E3D542D31C8F49E63054C08F76F63A98BC4D
2F1A2272E227364BB2740A1546F88C80292C4A5AF255B173B9C905579F37779E
8417B0E8906E2678937100BE188608552AD1EA10573A9F1EF142733079E16C4E
22CA9647021B5223558BC8F69F3FDD8A6A> |-
/z <1C60D8A8C9B7361F12602F340227A22F1C9307D8D3010ABD5115740E81FA
215676B2BD826ED14352712DE93DD8323496691E3616B7186A8A9955B438B42C
470629DF70F60E320935E64C5AA60DC220AE9FB41BDBEEAD7673A08B249D2DCE
AE096B570FEB962AF67BFCB7584E5C671C4281AD006416B71CCF9057FAE5F30E
868278FC346DF3A3389A7614DB568CF8FD26D929F364836E62E85C18E3370B56
052742073CE4F146D169159B7EA83F21> |-
/emdash <1C60D8A8C9B5EE310011291240418EA4CD179A9C18C686> |-
/.notdef <1C60D8A8C9B6FF86FBD75DB9092FB01BBE833F55BB0B9375D47E84
581C0C7E888E7865A7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFY+TimesNewRomanPS-BoldItalicMT /MZQAAA+TimesNewRomanPS-BoldItalicMT findfont ct_VMDictPut
/PHVJFY+TimesNewRomanPS-BoldItalicMT*1 
[44{/.notdef}rp /comma /.notdef /period 18{/.notdef}rp /A /.notdef /C 
10{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/d /e /.notdef /g /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y /z 85{/.notdef}rp 
/emdash 47{/.notdef}rp]
PHVJFY+TimesNewRomanPS-BoldItalicMT nf
PHVJFY+TimesNewRomanPS-BoldItalicMT*1 [8.7176 0 0 -8.7176 0 0 ]msf
63.0452 295.89 mo
(\320Complex)sh
107.244 295.89 mo
(netw)sh
124.112 295.89 mo
(orks,)sh
145.305 295.89 mo
(Synchr)sh
170.821 295.89 mo
(onization,)sh
209.946 295.89 mo
(Adapti)sh
233.597 295.89 mo
(ve,)
[3.78345 3.87064 0 ]xsh
7.06083 305.575 mo
(Nonlinearly)sh
53.4385 305.575 mo
(coupled,)sh
86.9751 305.575 mo
(Asymmetrical)sh
139.647 305.575 mo
(coupling)sh
171.004 305.575 mo
(.)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
91.3132 334.083 mo
(I.I)
[3.70975 7.74896 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [7.749 0 0 -7.749 0 0 ]msf
106.482 334.083 mo
(NTRODUCTION)
[6.07289 5.21269 5.33679 6.07288 6.07289 6.07289 5.64676 5.21269 3.05847 6.07289 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
16.7481 354.155 mo
(Inrecentyears,thestudiesofsynchronizationtocom-)
[3.22543 10.3061 3.22543 4.30067 4.30067 4.30067 4.8431 8.15578 4.8431 4.30068 4.30067 3.22543 
3.76801 7.87488 2.69276 4.84309 9.76369 3.76801 2.69276 4.84311 4.84309 2.69276 4.30067 9.23102 
4.84311 8.68845 3.76801 4.84311 4.84309 4.30067 4.84309 3.22543 4.84309 4.84311 2.69276 4.30067 
4.30067 2.69276 2.69275 4.84311 10.2964 2.69275 10.3061 4.30069 4.84308 7.53586 0 ]xsh
7.0619 365.778 mo
(ple)sh
18.7531 365.778 mo
(xnetworkshavereceivedgreatinterestandattentionin)
[9.65714 4.84309 4.30067 2.69276 6.89658 4.84311 3.22543 4.8431 8.57236 4.8431 4.10695 4.69781 
9.11473 3.22543 4.30066 4.30069 4.30066 2.45062 4.6978 4.30067 9.64745 4.84311 3.22542 4.30067 
4.30067 7.50681 2.69276 4.84309 2.69276 4.30067 3.22543 4.30067 3.76801 7.49712 4.30067 4.84309 
9.65715 4.30067 2.69276 2.69276 4.30067 4.84308 2.69278 2.69278 4.84308 9.64746 2.69275 0 
]xsh
7.0619 377.402 mo
(mathematical,physical,biologicalandphysiologicalliterature.)
[7.53392 4.29874 2.69083 4.84116 4.29874 7.53392 4.29874 2.69083 2.69083 4.29874 4.29874 2.69083 
4.92834 4.84117 4.84116 4.84116 3.76607 2.69083 4.29874 4.29874 2.69083 4.92833 4.84117 2.69081 
4.84117 2.69081 4.84117 4.84117 2.6908 4.29874 4.29874 5.20923 4.29874 4.84117 7.34988 4.84117 
4.84116 4.84116 3.76607 2.69083 4.84116 2.69083 4.84116 4.84116 2.69083 4.29874 4.29874 5.19955 
2.69083 2.69083 2.6908 4.29877 3.22348 4.29874 2.69083 4.84116 3.22351 4.29871 0 ]xsh
7.0619 389.025 mo
(Since)sh
33.6505 389.025 mo
(the)sh
50.5529 389.025 mo
(synchronization)sh
117.485 389.025 mo
(has)sh
135.462 389.025 mo
(been)sh
158.816 389.025 mo
(found)sh
186.479 389.025 mo
(tobeageneral)
[2.69276 9.90898 4.84311 9.35686 9.36656 4.84311 4.30066 4.84311 4.30069 3.2254 4.30069 0 
]xsh
7.0619 400.649 mo
(phenomenon)sh
59.5321 400.649 mo
(innatureandhasimportantpotentialapplications)
[2.69276 7.27434 4.8431 4.30067 2.69276 4.84309 3.22543 6.74159 4.30069 4.84309 7.27434 4.84311 
4.30066 6.19925 2.69276 7.53586 4.84311 4.84309 3.22543 2.69276 4.30067 4.84309 5.12399 4.84311 
4.84309 2.69276 4.30067 4.84311 2.69276 2.69275 4.30067 5.12399 4.30069 4.84309 4.84309 2.69278 
2.69275 4.30066 4.30069 2.69278 2.69275 4.84308 4.84314 0 ]xsh
7.0619 412.272 mo
(inreal-world,itcanbeappliedin\256eldsincludingsecurecom-)
[2.69276 7.60366 3.22543 4.30068 4.30067 2.69276 3.22543 6.89658 4.8431 3.22543 2.69276 4.84309 
5.1918 2.69276 5.45333 4.30067 4.30067 7.60367 4.8431 7.07092 4.30069 4.84309 4.84309 2.69276 
2.69276 4.30067 7.60366 2.69276 7.60367 5.38551 4.30067 2.69276 4.84311 6.53824 2.69276 4.84311 
4.30067 2.69276 4.84309 4.84311 2.69275 4.84311 7.60367 3.76801 4.30067 4.30066 4.84311 3.22543 
7.06125 4.30069 4.84308 7.53586 0 ]xsh
7.0619 423.896 mo
(munication,)sh
57.1977 423.896 mo
(seismology)sh
100.699 423.896 mo
(,parallelimageprocessing,chemical)
[6.54788 4.84309 4.30067 3.22543 4.30067 2.69276 2.69276 4.30067 6.81908 2.69276 7.53586 4.30067 
4.84311 8.41731 4.84309 3.22543 4.84311 4.30067 4.30067 3.76801 3.76801 2.69276 4.84309 4.84309 
6.54788 4.30066 4.84311 4.30069 7.53586 2.69278 4.30066 4.30066 0 ]xsh
7.0619 435.519 mo
(reaction,)sh
44.4312 435.519 mo
(and)sh
62.1666 435.519 mo
(others)sh
89.5883 435.519 mo
([1]-)sh
107.856 435.519 mo
([7].)sh
125.32 435.519 mo
(Synchronization)sh
192.562 435.519 mo
(can)sh
209.755 435.519 mo
(bede\256ned)
[4.84309 8.04922 4.84311 4.30069 5.3855 4.84311 4.30069 0 ]xsh
7.0619 447.142 mo
(asaprocesswhereintwo\(ormany\)dynamicalsystemsadjust)
[4.30067 6.77073 7.29371 4.8431 3.22543 4.8431 4.30067 4.30067 3.76801 6.76104 6.99344 4.8431 
4.30067 3.22543 4.30067 2.69276 7.84583 2.69275 6.89658 7.83615 3.22542 4.84309 6.22816 7.53587 
4.30067 4.6978 4.84309 6.21848 4.84309 4.84311 4.84308 4.30067 7.53587 2.69276 4.30067 4.30067 
5.69548 3.76801 4.84309 3.76801 2.69276 4.30067 7.53587 6.76105 4.30066 4.84308 2.69278 4.84311 
3.76801 0 ]xsh
7.0619 458.766 mo
(agivenpropertyoftheirmotiontoacommonbehaviorastime)
[6.82877 4.8431 2.45061 4.69781 4.30067 7.38088 4.84311 3.22543 4.84309 4.8431 4.30067 3.22543 
2.69276 7.37121 4.84309 5.75353 2.69277 4.8431 4.30067 2.69275 5.75354 7.53586 4.84311 2.69275 
2.69278 4.84308 7.38088 2.69276 7.3712 6.82877 4.30067 4.84311 7.53584 7.53587 4.84309 7.38087 
4.84311 4.30067 4.84309 4.10695 4.84309 2.69276 4.84311 5.75354 4.30066 6.29608 2.69278 2.69278 
7.53583 0 ]xsh
7.0619 470.389 mo
(goes)sh
28.2069 470.389 mo
(toin\256nity,duetocouplingorforcing[8].)
[2.69276 8.23327 2.69276 4.84311 5.38552 4.8431 2.69276 2.69276 4.21349 5.81172 4.8431 4.8431 
7.69086 2.69275 8.23328 4.30067 4.84309 4.84311 4.84311 2.69275 2.69276 4.84309 8.23328 4.84311 
6.6156 3.22543 4.84311 3.22542 4.30069 2.69276 4.84309 8.23328 3.22543 4.84311 3.22543 0 
]xsh
16.7481 482.914 mo
(Inliterature,therearemanywidelystudiedsynchronization)
[3.22543 7.7199 2.69276 2.69276 2.69276 4.30067 3.22543 4.30067 2.69276 4.84309 3.22543 4.30067 
5.30804 2.69276 4.8431 4.30067 3.22543 7.17747 4.30067 3.22543 7.17747 7.53587 4.30067 4.6978 
7.72958 6.99344 2.69276 4.84311 4.30067 2.69276 7.71989 3.76801 2.69276 4.84309 4.84311 2.69276 
4.30067 7.71991 3.76801 4.84311 4.84309 4.30067 4.84311 3.22543 4.84308 4.84311 2.69275 4.30069 
4.30066 2.69278 2.69275 4.84311 0 ]xsh
7.0619 494.537 mo
(patterns,)sh
45.7292 494.537 mo
(i.e.,)sh
65.5569 494.537 mo
(complete)sh
106.646 494.537 mo
(oridenticalsynchronization,phase)
[4.84309 8.80469 2.69278 4.84308 4.30068 4.84309 2.69276 2.69276 4.30067 4.30067 8.26233 3.76801 
4.84309 4.84311 4.30067 4.84309 3.22543 4.84309 4.84311 2.69276 4.30067 4.30067 2.69276 2.69276 
4.84308 4.84311 8.00082 4.84308 4.84311 4.30069 3.76801 0 ]xsh
7.0619 506.16 mo
(synchronization,)sh
76.0955 506.16 mo
(cluster)sh
106.665 506.16 mo
(synchronization,)sh
175.699 506.16 mo
(and)sh
194.432 506.16 mo
(soon.In[9],)
[3.76801 9.57965 4.84311 4.84309 7.16779 3.22543 9.57965 3.22543 4.84311 3.22543 0 ]xsh
7.0619 517.784 mo
(the)sh
21.5234 517.784 mo
(properties)sh
62.8834 517.784 mo
(ofinvariantmanifoldwereusedtodescribesyn-)
[4.8431 5.84071 2.69276 4.45565 4.60094 4.30067 3.22543 2.69276 4.30067 4.84309 5.31773 7.53586 
4.30067 4.84309 2.69276 3.22543 4.84309 2.69276 7.46806 6.99344 4.30067 3.22543 6.92563 4.84311 
3.76801 4.30067 7.46806 2.69275 7.45839 4.84309 4.30067 3.76801 4.30066 3.22546 2.69275 4.84308 
6.92566 3.76801 4.84308 4.84314 0 ]xsh
7.0619 529.407 mo
(chronization.)sh
61.1496 529.407 mo
(The)sh
79.4564 529.407 mo
(boundedness)sh
132.75 529.407 mo
(and)sh
149.982 529.407 mo
(synchronization)sh
215.102 529.407 mo
(problems)sh
7.0619 541.031 mo
(for)sh
21.6976 541.031 mo
(linearly)sh
54.6306 541.031 mo
(coupled)sh
88.6389 541.031 mo
(oscillators)sh
131.81 541.031 mo
(were)sh
153.972 541.031 mo
(considered)sh
199.275 541.031 mo
(via)sh
214.453 541.031 mo
(the)sh
229.631 541.031 mo
(semi-)sh
7.0619 552.654 mo
(passi)sh
26.1923 552.654 mo
(vity)sh
45.9037 552.654 mo
(property)sh
83.3601 552.654 mo
(in[10].Theauthorsof[11]presenteda)
[2.69276 9.49248 3.22543 4.84309 4.84309 3.22543 7.06125 5.9182 4.84309 8.94037 4.30067 4.84309 
2.69276 4.84311 4.84309 3.22543 8.4077 4.84309 7.8748 3.22543 4.84311 4.84309 7.86513 4.84309 
3.22543 4.30066 3.76801 4.30069 4.84311 2.69275 4.30069 9.48279 0 ]xsh
7.0619 564.278 mo
(master)sh
37.6703 564.278 mo
(stability)sh
73.6643 564.278 mo
(function)sh
110.733 564.278 mo
(based)sh
137.564 564.278 mo
(onthetransverseLyapunov)
[4.84309 9.62808 2.69276 4.84309 9.08566 2.69276 3.22543 4.30067 4.84309 3.76801 4.69781 4.30067 
3.22543 3.76801 9.07597 5.38547 4.84308 4.30066 4.84314 4.84308 4.84308 4.69781 0 ]xsh
7.0619 575.901 mo
(exponentstostudylocalsynchronization.[12]proposedthat)
[4.15538 4.8431 4.8431 4.8431 4.8431 4.30067 4.84309 2.69276 7.64249 2.69276 8.71758 3.76801 
2.69276 4.8431 4.8431 8.72727 2.69276 4.84311 4.30067 4.30067 6.56723 3.76801 4.84311 4.84311 
4.30066 4.8431 3.22543 4.84309 4.84311 2.69275 4.30067 4.30067 2.69276 2.69276 4.84311 4.84309 
6.29602 3.22543 4.84311 4.84309 7.09991 4.84309 3.22543 4.84311 4.84309 4.84309 3.76801 4.30069 
8.71759 2.69275 4.84308 4.30069 0 ]xsh
7.0619 587.525 mo
(asinglecontrollercouldpinacoupledcomplexnetworktoa)
[7.64241 3.76801 2.69276 4.8431 4.8431 2.69276 7.64241 4.30067 4.8431 4.8431 2.69276 3.22543 
4.84309 2.69276 2.69276 4.30067 6.56717 4.30067 4.84311 4.84309 2.69276 8.18484 4.84309 2.69276 
8.19452 7.64242 4.30066 4.84311 4.84309 4.84311 2.69276 4.30067 8.18484 4.30067 4.84309 7.53586 
4.84311 2.69276 4.15538 8.18483 4.84311 4.30067 2.69276 6.89655 4.84314 3.2254 8.18484 2.69278 
8.18481 0 ]xsh
7.0619 599.148 mo
(homogenous)sh
60.462 599.148 mo
(solution)sh
95.5745 599.148 mo
(and)sh
113.446 599.148 mo
(aneffectiveapproachtoadaptthe)
[4.30069 8.73695 4.30067 2.98328 3.22543 4.30067 4.30067 2.69276 2.45061 4.69781 8.19452 4.30069 
4.84309 4.84309 3.22543 4.84311 4.30067 4.30067 8.73695 2.69276 8.72725 4.30067 4.84311 4.30069 
4.84308 6.58661 2.69278 4.84311 0 ]xsh
7.0619 610.771 mo
(coupling)sh
45.7873 610.771 mo
(strength.)sh
84.2415 610.771 mo
(The)sh
104.127 610.771 mo
(authors)sh
137.467 610.771 mo
(of[13]constructedanovel)
[4.84309 8.04916 3.22543 4.84309 4.84311 8.04915 4.30067 4.84311 4.84309 3.76801 2.69276 3.22543 
4.84309 4.30069 2.69275 4.30067 9.66681 9.12442 4.84311 4.69781 4.69781 4.30066 0 ]xsh
7.0619 622.395 mo
(coupling)sh
46.5332 622.395 mo
(scheme)sh
81.1517 622.395 mo
(with)sh
103.943 622.395 mo
(cooperati)sh
139.743 622.395 mo
(veandcompetitiveweight)
[4.6978 9.87024 4.30067 4.84309 10.4127 4.30067 4.84309 7.53587 4.84309 4.30067 2.69276 2.69276 
2.69276 2.45061 4.69781 9.87024 6.99344 4.30069 2.69275 4.84311 4.84311 0 ]xsh
7.0619 634.018 mo
(couplings)sh
48.1993 634.018 mo
(tostabilizearbitrarilyselectedclustersynchroniza-)
[2.69276 8.31076 3.76801 2.69276 4.30067 4.8431 2.69276 2.69276 2.69276 4.30067 7.77803 4.30066 
3.22543 4.84311 2.69276 2.69276 3.22543 4.30066 3.22543 2.69278 2.69274 8.31076 3.76801 4.30067 
2.69276 4.30067 4.30067 2.69276 4.30067 8.31075 4.30067 2.69276 4.84311 3.76801 2.69276 4.30067 
6.69308 3.76801 4.84309 4.84311 4.30069 4.84308 3.22543 4.84311 4.84308 2.69278 4.30069 4.30066 
0 ]xsh
7.0619 645.642 mo
(tion)sh
27.926 645.642 mo
(patterns)sh
64.3848 645.642 mo
(inconnectednetworkswithidenticalnodes,)
[2.69276 10.6354 4.30067 4.8431 4.84309 4.84311 4.30067 4.30067 2.69276 4.30067 10.6354 4.84311 
4.30067 2.69276 6.89658 4.84309 3.22543 4.84309 9.55067 6.99344 2.69276 2.69276 10.6354 2.69276 
4.84309 4.30067 4.84311 2.69276 2.69276 4.30067 4.30067 8.48511 4.84308 4.84311 4.84311 4.30066 
3.76801 0 ]xsh
7.0619 657.265 mo
(while,)sh
33.7958 657.265 mo
(the)sh
48.4317 657.265 mo
(cluster)sh
77.0447 657.265 mo
(synchronization)sh
141.719 657.265 mo
(ofdynamicalnetworkswith)
[4.84309 6.01506 4.84309 4.84311 4.84309 4.30067 7.53587 2.69276 4.30067 4.30067 5.49207 4.84309 
4.30067 2.69276 6.89658 4.84309 3.22543 4.84311 6.55762 6.99347 2.69275 2.69275 0 ]xsh
7.0619 668.889 mo
(community)sh
55.0086 668.889 mo
(structure)sh
92.7169 668.889 mo
(and)sh
110.52 668.889 mo
(nonidentical)sh
162.225 668.889 mo
(nodes)sh
188.63 668.889 mo
(with)sh
209.668 668.889 mo
(orwithout)
[4.84309 7.04179 6.99344 2.69278 2.69275 4.84308 4.84311 4.84311 0 ]xsh
7.0619 680.512 mo
(time)sh
27.6741 680.512 mo
(delay)sh
52.0446 680.512 mo
(byfeedbackcontrolschemeswasstudiedin[14].)
[4.8431 8.23327 3.22543 4.30067 4.30067 4.8431 4.84309 4.30067 4.30069 8.23328 4.30066 4.84311 
4.84311 2.69275 3.22543 4.8431 6.08293 3.76801 4.30067 4.84309 4.30067 7.53587 4.30067 7.15817 
6.89658 4.30067 7.15819 3.76801 2.69275 4.84311 4.84309 2.69276 4.30067 8.23326 2.69278 8.23328 
3.22543 4.84308 4.84311 3.22543 0 ]xsh
272.464 227.198 mo
(However,previousstudiesofsynchronizationmainlyfo-)
[6.99344 4.60095 6.99344 4.0585 4.69781 4.30069 2.83798 7.31308 4.84308 3.22543 4.05853 4.84311 
2.69275 4.84311 4.84308 8.64987 3.76801 2.69275 4.84311 4.84308 2.69278 4.30069 8.65952 4.84311 
8.11694 3.76801 4.84314 4.84308 4.30066 4.84311 3.22543 4.84311 4.84311 2.69275 4.30066 4.30069 
2.69278 2.69275 4.84308 9.72498 7.53583 4.30072 2.69275 4.84308 2.69275 9.73462 3.22546 4.84308 
0 ]xsh
262.778 238.821 mo
(cussed)sh
293.909 238.821 mo
(onoscillatorsunderlinearcoupling.Evenin[12],)
[4.84311 10.1511 4.84311 3.76801 4.30066 2.69278 2.69278 2.69275 4.30066 2.69278 4.84311 3.2254 
9.07605 4.84311 4.84311 4.84308 4.30069 8.53348 2.69275 2.69278 4.84311 4.30066 4.30066 8.54315 
4.30069 4.84311 4.84311 4.84311 2.69275 2.69275 4.84311 4.84311 7.72958 5.91818 4.69781 4.30069 
10.1512 2.69275 10.1511 3.22546 4.84308 4.84314 3.2254 0 ]xsh
262.778 250.445 mo
([16],)sh
284.969 250.445 mo
([17])sh
304.728 250.445 mo
(and)sh
322.347 250.445 mo
([18])sh
342.117 250.445 mo
(which)sh
369.413 250.445 mo
(discussed)sh
410.172 250.445 mo
(nonlinear)sh
450.38 250.445 mo
(coupling,)sh
490.335 250.445 mo
(the)sh
502.026 250.445 mo
(y)sh
262.778 262.068 mo
(assumed)sh
300.341 262.068 mo
(that)sh
319.084 262.068 mo
(the)sh
335.124 262.068 mo
(netw)sh
353.857 262.068 mo
(ork)sh
370.982 262.068 mo
(should)sh
401.019 262.068 mo
(bebidirectional.However,)
[4.84314 8.51416 4.84308 2.69278 4.84311 2.69275 3.22543 4.30069 4.30066 2.69275 2.69278 4.84311 
4.84308 4.30069 2.69278 6.62537 6.99341 4.60095 6.99347 4.05847 4.69788 4.30066 2.83795 0 
]xsh
262.778 273.692 mo
(unidirectional)sh
320.769 273.692 mo
(communication)sh
385.221 273.692 mo
(ismoreimportantinpractical)
[2.69278 7.95242 7.53589 4.84308 3.22546 8.4754 2.69278 7.53586 4.84308 4.84314 3.2254 2.69278 
4.30069 4.84308 6.8772 2.69275 9.02753 4.84308 3.22546 4.30066 4.30066 2.69281 2.69275 4.30066 
4.30072 0 ]xsh
262.778 285.315 mo
(applications,)sh
317.631 285.315 mo
(i.e.,)sh
337.507 285.315 mo
(via)sh
354.971 285.315 mo
(broadcasting)sh
410.085 285.315 mo
(and)sh
429.69 285.315 mo
(sensed)sh
461.132 285.315 mo
(informa)sh
491.798 285.315 mo
(tion)sh
262.778 296.939 mo
(\257ow,whichplaysacentralroleinschoolingand\257ocking.)
[5.38553 4.60095 6.36383 7.09998 6.99344 4.84311 2.69275 4.30069 9.52155 4.84308 2.69278 4.30066 
4.84311 8.44644 8.9888 4.30066 4.30069 4.84311 2.69275 3.22543 4.30069 7.38086 3.22543 4.84311 
2.69275 8.97913 2.69275 9.52155 3.76801 4.30066 4.84308 4.84314 4.84308 2.69275 2.69278 4.84311 
9.52155 4.30066 4.84308 9.52155 5.38556 4.84308 4.30066 4.84308 2.69281 4.84308 4.84314 0 
]xsh
262.778 308.562 mo
(Both)sh
285.007 308.562 mo
(ofthemaretypicallynotbidirectional[20].)
[4.84311 6.6156 2.69275 4.84311 4.30069 10.926 4.30066 3.22546 7.69083 2.69278 4.84308 4.84311 
2.69275 4.30069 4.30066 2.69278 2.69275 8.23328 4.84311 4.84308 6.08295 4.84311 2.69278 4.84308 
2.69275 3.22546 4.30066 4.30066 2.69278 2.69278 4.84308 4.84311 4.30069 6.08292 3.22543 4.84308 
4.84314 3.2254 0 ]xsh
272.464 320.883 mo
(In[20],theauthorsconsideredthecomplexnetworkwhich)
[3.22543 7.98141 3.22543 4.84311 4.84311 3.22543 5.55988 2.69275 4.84311 7.439 4.30069 4.84308 
2.69278 4.84311 4.84308 3.22543 6.90634 4.30066 4.84311 4.84311 3.76801 2.69275 4.84311 4.30069 
3.2254 4.30069 7.97174 2.69278 4.84308 7.43903 4.30066 4.84311 7.53586 4.84311 2.69278 4.15536 
7.98141 4.84311 4.30069 2.69275 6.89658 4.84311 3.22546 7.98138 6.99347 4.84308 2.69275 4.30066 
0 ]xsh
262.778 332.506 mo
(consisted)sh
302.782 332.506 mo
(of)
[4.84311 0 ]xsh
%ADOBeginSubsetFont: ELRBAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ELRBAA+CMMI10 def
/FontInfo 8 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI10.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 27 /sigma put
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 76 /L put
dup 78 /N put
dup 82 /R put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 116 /t put
dup 120 /x put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 431 442 453 466 683 705] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
17 dict dup begin
/sigma <1C60D8A8C9B7E02ADD9A9645B6EFEFDAF8223441C504B97557ED1331
4FE544C9EC1A4406DB0721B939B9558B16716B0F0FF7B06C03D0B74C12F5C9EA
F2F3F5230C06C2BA0F17D29505064C824CF331A94AFFDE518E68EA269F3BD5D5
CAB13DA3DA4393C4E631DAFE8831AF656D23D2065E3B2DD1> |-
/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D
239BCB61DC78D83A8F223F832> |-
/comma <1C60D8A8C9B85744148CA332C8F6F1C9DE6B352F8C512D68BA1E3142
6FC0ECC7A922246EACB7A924151A79EDFB3E3451BD87933C27475FAC0D74CB82
67D592363D57178D8C03E491CE91E57E08820A621E0AED28> |-
/greater <1C60D8A8C9B6FC2D0B7AF226145EBD4699910182AA44364E214EF1
81E4EF11F09B1CDF639298183041F70F09788525763201782FEB13E6B9A6E060
7F78254829620D4125185763FF66F3C7816DADE29DCA0BAAC1CEA7127EAA9D5F
75E8> |-
/L <1C60D8A8C9B65DE708408E87307275F0F3D1115C05BE71890B2594C55A94
9E404F8409F211532683B1CEFA24AF04C1F34AA395C042BB01DECE0027927D87
AC08C555AF882062B8BE63D8F5AD9282A8F6D74E77C14666AE1E0E47201966C3
FC2742E2A3B5FC2BE4541DD3869E86EBE7A23F7E19CF3915DACD7ECA4372CBBF
C4774F00A7C7EB8C00939A17E0C3FF68D8EBE4A4E03BA8082448EF73DD3B0CAA
FDEB495EB492837EF3672515B5DF7F04BD15EBAFD4641D453E64E34847E41BA9
B0F4F6913E87B796> |-
/N <1C60D8A8C9B6D671D38ABEF2C3AA4E9EF85233BCD577CC743D9BB72B06D1
C34EFFA73A8EEC485E47CB4255799230CE3B52ECA9DACF132C28D5023DE40AA9
3657FA765A68F9927890D6A99C6ADF1E426E5FE9E35D2F713DB32E49B7FA5285
9C2DFDFC8F7B5800FF94410ECD75C51D563B72E4CE7BF6A0DA5B3E0B6FCD8798
546F59FCAF14A879752BEB0E6C22EAB4A84FE3B041C4B97C68333C4FFAD5D2E8
57731FA926D2CD6D6B1870856FC4382AD902F4984DB02DEAEC75932D49CD323C
FF2FF5AF76629AD4B11E478073E034E2B4E9B43505D56042DA33A6E78FEA4BCD
4A0F11525678055021280A500CE9ADDA6E49D3632C3DA6662AF4C4449F02> |-
/R <1C60D8A8C9B6EA9143AF3FDEF6284C95CFFBF1BD9619606386A2474F0F74
32DCCF0640AD2A08258F5E47F78C53563803403C3AAF7B8AFCAC0F0BD6D4E816
2FFC45611297A421EF699EC88B5E63C93FB9F960358A043FF0475EDDD2C00B99
23987B19DA05200025E7E8367D4D07FCCAF9EFEA0B65E5D40AC3D5EFE1186392
7E3FEFAF516635D9C2B7DE7D5CFEBD8006FDC69C34678706F2EEAF070834CF44
F66F76A3BFEDA3315C17A351ECE1D1A2694E8F62F32A01864A20B71A3C42E31B
ADC076DC38AC7B5B2CCDB732D4E38EE516D66013A210E8DEB706A3B6142E117B
39C4D4ECB11B025AEAE7AF1FFBAFC3BA07C72638BDC310FEB6DB8C8B4F4D327E
A53995AE1D734D84A9C8849110AF02411920ABADE1DA7D2770D6DEB659A8E3AD
B63F4FCA84BDDC> |-
/f <1C60D8A8C9B752AB470B4B675153DAF5FFB9FA454C9906B926206E449AE2
703E65919425028E582F5B2415481B2BD72EF503FF91F262F166F00A9D78D0BF
EBEBC84F36A53DA28C84B1E1F420B56784175C2AA9B71BCA7C1B561D8AE78C75
07DA545FBED786245A533CC28BE8540D6F127692804BEFD7259888A39E96DA2C
C6A47A1546279CE3053200B6A7E201B7770A22EAEBA422BDAEA7D5C417C5AB53
05AF89F1C27E78553FB974F7821B67FCE1F24F306030DADE4CC6852D08> |-
/h <1C60D8A8C9B7FBE1B6306506680CA40B1E0125B3B26FAB375E23E8D12F8A
D2C031D29E76D7BEB8D3A180F875B98A78391D73C33D44E29CE9C42690565C40
5DE442122214DCF4A860F9C48E7DACC760BFF27516420684F6F2E68A11045AF7
03EA72BCF2EF7B816B597F89B6235470370B82209E5D04301BEB7D9A08BA73D1
0F709A3C8A9A4AA7E165C034A949F55D2FDF11D9FA83A11C2D8D653393D60460
6CCA61FA3F7CDE3BF8B405323A9E27C13D584813CB4311C58C895B11B73D9C9D
2487E1190F07A4E6DD0013A3896D204C> |-
/i <1C60D8A8C9B812A873C68D5B4F2B5E768224EF46878151BB86C5276D36B7
6A2F589A55C4A5EE3BA699CB4A88BF37C5D78C86C14140FEDFCAF26ED7786558
FB4004F7D4D6D6C473392EF89CF6F306E31522AC6282E6F880718CA584CA5F3C
F0073D906ABBCC6E22D61AC44BA56F049036466C761D68D70488E4284A0B9913
0D02240C3784DC91BC2576EE2D8BCBACBD2D3149F4EC97A54B1651F29418DDD6
9418816B9BD7EE2B71ADCDA3A3> |-
/j <1C60D8A8C9B7008A514089371E7F6C3F852A3CE5C127370B236F47AA9C8A
C019CB30198B0F9B562EB2AAF5462A73919E71099A23DF2F310B8412D429BA12
CAAFF3861208A6F813AF227CDD41326B28374679C7D0DAD15F3C60DA7CA3A1FF
BDD27E7F1EA5C89C2C62A5266172A8E394744211CD22B36375E13AC626FBF17D
0F94E85B3C1DE145D3DDE7BE6FDCD2D1D486D7C75C90F3CEB0658F9109B29310
D4F9> |-
/k <1C60D8A8C9B7B3D093A5DA2D78BFACAE4C72C7594317F3A42EF85182F895
CA3E033D344B991059E6DE262A0D0EF1FA3E20AA26AB4B292D9BF643D603EA5C
3D06DF4E7570546A1A8EE39ED1F9F5A809C1905DCB1BFA54D028200ED477CFDA
998E5410725F13C6F8EDB4865D00CEDF6ACAB6AA9087A9E317C6B1DBB17A14A0
BAF86B2C29F738EA411198584BF8E1A452C39542D44ABB2AEF8B60B19725DC9B
C7D59E444E4F473281F016EC7F520868FBF8A90EEFBE8351FF390916C6EC5B16
E92746509F6EF854B3AED591A7663732060D40926B09BC895CFAEA899950EBD1
10FC867C8A0233BCB256D98482923AE7AB23D5D7CE8DC32C67BBC319C9A75BD0
D08B16F0> |-
/l <1C60D8A8C9B840B0A5D589BDA4C311648D785E3242291920D778475AEECC
9F1A47C3B85F0B92FDDC60D6AE2807C1C14CB8BD6DF09FFA084595421BE1DB15
50A932603EB271999DB47E6E040FD73D8DD2D1B0BEEFB752DF28288706B38D58
32AE2B421B49506BC0AAFB562D2B4AFD32F3D41DD54529A7D3> |-
/n <1C60D8A8C9B7C3C99592073C380D5EB33972B0E7A1F7696CFD3BFCDBA36E
74B12788DB1F09B52B587438F5C7126CC3F9331B76B411552DAD88FF5B2731FB
8A30D4039054DE7881FD1040B3AAA0067A7F268759C5B8FE71C6C640E6CFCCBE
79D4AF27DC6E5B0A2255251E501D4B4B538B55ED267C22906901AB7EEDA3069D
F42F6AF99C860F98E5A2449D9A147D2C1F90CFD8CE9D17F947C6867C8C175E34
1343B07E6C856BED2AB83F9AF1F2FB39E3C5A2A0DC4339E7026D740FBCF79669
7562554331A7ACC4FBF70E9430AC085F22816D98AA26> |-
/t <1C60D8A8C9B80380260085120D6D1E249FB2DE32EFDFC5AEFCC3C1AB362A
B1AC4D945C4142F374B77DC20250C08162AEB69DC4CEC0575EF34A20FF2838C5
6D01A3D40EE49012FD52F036B2ED1BB119E65DE07D10EB5C2DD7F41ED672F45A
F363F4750BF26AF3518256DE17E77936DC9CD6CE44CA5F494C6FB830F5037D06
DCD316E617> |-
/x <1C60D8A8C9B7E02ADD9A961EA85B11A4D6AE8E5FF47D0FB2B207722E9454
9CFCF90B2994EB4018DCD72707FC7E657C1357774D6ABC659E4BFFA1BAD58151
43126640EA2DAE45CE146667BB09E3222C5B2BE1809001CE57FFDA3F8C3B30B2
86B230357F5F955C9F57E2989850ACB5C1C587977554FAB8160F71D5F85970C9
22D115B7642513052A5260EFE973B9D542C18F64EADFD1C5FDD09160C3DC94D4
7F2CD7AE4851BB3D04487C33689E9C61C71A12B0085775C7E4FAF6B3AF6BF212
F2A47B39735F454DF875687BF642E91EEAEBA7EEB2> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJFZ+CMMI10 /ELRBAA+CMMI10 findfont ct_VMDictPut
/PHVJFZ+CMMI10*1 
[27{/.notdef}rp /sigma 30{/.notdef}rp /period /comma 2{/.notdef}rp /greater 13{/.notdef}rp 
/L /.notdef /N 3{/.notdef}rp /R 19{/.notdef}rp /f /.notdef 
/h /i /j /k /l /.notdef /n 5{/.notdef}rp 
/t 3{/.notdef}rp /x 135{/.notdef}rp]
PHVJFZ+CMMI10 nf
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
314.802 332.506 mo
(N)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
327.588 332.506 mo
(identical)sh
364.899 332.506 mo
(nonlinearly)sh
412.972 332.506 mo
(and)sh
430.911 332.506 mo
(dif)sh
441.43 332.506 mo
(fusi)sh
455.717 332.506 mo
(velycoupled)
[4.69781 4.30066 2.69278 8.79507 4.30066 4.84314 4.84308 4.84314 2.69275 4.30066 0 ]xsh
262.778 344.13 mo
(nodes,)sh
293.202 344.13 mo
(with)sh
315.839 344.13 mo
(each)sh
338.989 344.13 mo
(node)sh
363.233 344.13 mo
(being)sh
390.161 344.13 mo
(an)
[4.30066 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
404.709 344.13 mo
(n)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
410.521 344.13 mo
(-dimensional)sh
466.507 344.13 mo
(dynamical)sh
262.778 355.753 mo
(system.)sh
294.762 355.753 mo
(The)sh
312.478 355.753 mo
(state)sh
332.886 355.753 mo
(equations)sh
372.677 355.753 mo
(ofthisnetworkhavethefollowing)
[4.84308 5.87946 2.69275 4.84311 2.69278 6.422 4.84314 4.30066 2.69275 6.89658 4.84311 3.22543 
7.4971 4.84311 4.10696 4.69781 6.95468 2.69278 4.84308 6.95471 3.2254 4.84314 2.69275 2.69275 
4.60095 6.99347 2.69275 4.84308 0 ]xsh
262.778 367.377 mo
(form:)sh
%ADOBeginSubsetFont: AXNBAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /AXNBAA+CMR10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMR10.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 95 /dotaccent put
def
/FontBBox {-40 -250 1009 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 431 448 666 677 683 705] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164
F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02
A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598
A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-
/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A
0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF397
16A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB9
9C4AAA689F9E967FCE15709E3204C4D> |-
/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C1
2484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D
1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42
892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18
232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
25DDA723DD68103C537890571B4B95BCC242A78DD7EA0DA80E91751ED6DEA668
D97ECF27E58978E82B8932F2635747B0D240AA> |-
/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A07BD51
606BCA866C4BD24CA34E86B9CA5A529B664F3EEDB6B4AF8A2B994DB57B49473E
162231CB943675FE63E9B92B8AEBB62FB22456EC4173C66EF6C2F34FFEC22ACA
E77FFFAAD70F3754CADC0D2CF63CB6D286D930AEA5A613E5AB9CB004BEAEBADD
D070EDAF4FF25FDB6421F540D58D2C7A3FC40290CBCF831BE1B89B7F> |-
/colon <1C60D8A8C9B8574464AEAFAC7C68900D93273DA49162F3A5B8C16D30
B96C6FD4E30E80E1F78558AD2540B994A3F8C4499D90D9C7B92969D703EA7177
FFCAE7C73BA4F83773> |-
/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E59
93F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5
497F9A03CF7F30718A4F8E51FE4C555962B834> |-
/bracketleft <1C60D8A8C9B857441457F48D14F3F47B30BCEFA5B1BB16AB48
A411FDEDDBBCA4E8659FE72DCA596311382BB6> |-
/bracketright <1C60D8A8C9B857441457F48D14F3F47B30BD99EBE2CD4840C
E39569BE9FF8DDD4604DD868D11B34C9C90BD70> |-
/dotaccent <1C60D8A8C9B85744178364AE7A2C2121C233556D1189CE8DAF70
F0FD6185A902E73A611A727072D1BA36> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJGA+CMR10 /AXNBAA+CMR10 findfont ct_VMDictPut
/PHVJGA+CMR10*1 
[40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two 7{/.notdef}rp 
/colon 2{/.notdef}rp /equal 29{/.notdef}rp /bracketleft /.notdef /bracketright /.notdef 
/dotaccent 160{/.notdef}rp]
PHVJGA+CMR10 nf
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
270.372 394.847 mo
(_)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
268.676 394.847 mo
(x)sh
%ADOBeginSubsetFont: YEKBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /YEKBAA+CMMI7 def
/FontInfo 8 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 78 /N put
dup 84 /T put
dup 105 /i put
dup 106 /j put
dup 110 /n put
def
/FontBBox {-1 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 431 441 451 463 683 703] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/comma <1C60D8A8C9B819470FBAA7FAE29F94FE5E1C3B9B75DC4790587D41A6
359664CCCB9DF34CCF4C2F0AC42534E0055B03F416CB4A009F3CFB7A5457CDA6
19C6F531CBDA2D09EA5CE8E955> |-
/N <1C60D8A8C9B58EDE182C7CC3D890DA6E8FAA21968CB9B76BA4413FA3EADD
6E17E2371BCFB862E8F2F6F629A0F3E3F12398716CBE0C2DECEB6D5F3AF015B4
92F6A53D4687891B9D429D3C219C4308418429F0D79F5DD9A8C5F41F50763E5C
4C4A8E83FCA23DF73F3D26F17AB88020DA01E2559C38601BDAEC255EC90D62EA
73168C526D64DE2D2429B9E2698611E13A4DCDA3AB1941329082C8DA19CDEC12
F23F04777B3D1F4765BB64EA65A1EE9A5CFF48FE6DD1C36C166A086420C5260F
55221BB6BBB869ECC4C320FAB48AEE2F3EA224D7556337C6FB6948CC97AEECFA
B0DF5805CD40B4A845465843EB014355F52068F30EA8ECC975> |-
/T <1C60D8A8C9B6571942AD9A43FE3217830D1679C3C43C718117E4E12F234B
39A360492E959F13CDDB32C9CC22038AC516ECE8E62D49C0C6EF1B2000092FE0
95BCB68B75093C440BD0335E6EB7DEEDA9BB1A96E0D56A8849B9F1CC90FCBC6C
CF2AF42392CAC5407B6CA278025FA15D2BDA04630AC365DF52BEE380BF61CC0D
6EED1DFDF7E9C839AA8EA53CB5E923BE7819040164E170733BD2E800109715DF
98446B49FEDF8CE429A4B8F2B5F0DF355061841CC8C2AF1ADBA4D0647B74D80F
A631DEB52FF586203D212B3E0C9A42668B688A425C76AF3359CF5D9E> |-
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
/j <1C60D8A8C9B7438395C05C3169C7D7F1B75841D59B682CA8E1CB804C6469
10A66FD2FCC71781905A58559BBA987CC824FFAAB397A0A844F68F0784D79177
8BFA705461CB803F3EE01A604672F851DFC355D949F816439FA935B222739DB3
7285B3A3E42C0239F8EE5F68050B2DF98E8AD7E2799FC0902863F65C628C563B
12CEF5D2630A2BB2B44B3A9C73B011F81C919CB27F1DB0217F205BFED4F83AF7
102BB68BD0> |-
/n <1C60D8A8C9B6374B4C02BBA2C2A4BDFB14D942002897AD9E721F35D86194
D6438DBDEDC613997064273324A03221ED77119ACF97A1D09756CA7E107C6843
B21D2503F6D3BC75D192648064781744E5678EE97FB1A6056604808404C56F7F
8D9D91257F1B37A07011CB22C58E0406E0C6D4A5BC20F01F9DAAA77AA12DA66A
554F2FCCCF5FB6A9C312E0AF216136CBBB0407BD13C77F63C014B8ACF17C60BC
7406988C870BA107A13FF0CB13470F996F69FC27271E79FA5A5A46301340F300
2E6F499CCA32312E6CC54FD83DEA5D41382D0DEBB2CBA04A7F886B0B36B4C204
4E> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJGB+CMMI7 /YEKBAA+CMMI7 findfont ct_VMDictPut
/PHVJGB+CMMI7*1 
[59{/.notdef}rp /comma 18{/.notdef}rp /N 5{/.notdef}rp /T 20{/.notdef}rp /i 
/j 3{/.notdef}rp /n 145{/.notdef}rp]
PHVJGB+CMMI7 nf
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
274.222 390.844 mo
(i)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
277.446 394.844 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
281.214 394.844 mo
(t)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
284.711 394.844 mo
(\)=)
[6.45975 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
301.39 394.844 mo
(f)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
307.173 394.844 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
310.941 394.844 mo
(x)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
316.48 390.844 mo
(i)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
319.705 394.844 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
323.473 394.844 mo
(t)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
326.97 394.844 mo
(\)\))
[3.76697 0 ]xsh
%ADOBeginSubsetFont: LLIAAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /LLIAAA+CMSY10 def
/FontInfo 8 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY10.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMSY10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
dup 20 /lessequal put
dup 32 /minus put
dup 33 /arrowright put
dup 50 /element put
dup 54 /negationslash put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 705] def
/OtherBlues [-135 -124] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 56] def
/StemSnapV [40 56] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/periodcentered <1C60D8A8C9B85744184BF6DE7708B34A48D2A1BC0E3E86C
4A4A58F8CB4F3982EAABA33ABCF5BB62FA01F> |-
/lessequal <1C60D8A8C9B6FC2D944F5ADA1723A63EEFB5EFB5A4E3F88F7A8C
E8FA486CB3CC01EEA869AD308CC03B9D1111211DCD407425C635963FD7F9150F
1FBD1ACF38A1AE4207D9AF152444BD9DD8B01BDE5F620F6CD19263F98A2F18AD
CDAC42F6594BB6852F39DF6F7D1564BAE711AAF8D50C7841F847A8032B1E8699
602A6648> |-
/minus <1C60D8A8C9B6FC2D98F64FA8A84856380510A8B89CD4DE936C2002F9
CA66334C70459EFC1D8016D52F4ACC8D584A> |-
/arrowright <1C60D8A8C9B5EE310D75E4BB53DC02FA37EF400C5757DA6810E
A2B12BDC053A73FD6C53F135029B3F7A374A711103BA88B731E24F20B39AE334
7183461E46E354C1C98812EBD788BE39A2477C7CA652D7E626B0E06422F70438
3B24D50F9F5755EEB64CB749A1BB113F3301ABDA1CFA9DA7DBD164F5C9B> |-
/element <1C60D8A8C9B64FAD2EF2B8851D1968E5D029958E40ACD5147C4074
1E22A1237398886102D9E824068CF8CCB984BE3805C3EE450A9950F9ADBD244A
087E2AE7BA5402D250A2547E9B9000BF371B31F9A1575410E09C98112EBDE784
B50FA20B3F67AF0A9C97E9C2EA9A7FD1BDD7C5C4> |-
/negationslash <1C60D8A8C9C4A6C26B10FB8D5BDE6CDBBEB886041A010C58
7BDBB6C6D81F15A730606F174AB3495E2650C76FA5AB4C017DE7B4889B1BFCC1
5958E3BD07C0EB458EBB4CF8D9C9> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJGC+CMSY10 /LLIAAA+CMSY10 findfont ct_VMDictPut
/PHVJGC+CMSY10*1 
[/.notdef /periodcentered 18{/.notdef}rp /lessequal 11{/.notdef}rp /minus /arrowright 16{/.notdef}rp 
/element 3{/.notdef}rp /negationslash 201{/.notdef}rp]
PHVJGC+CMSY10 nf
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
336.656 394.844 mo
( )sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
346.342 394.844 mo
(\033)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
357.403 382.736 mo
(N)sh
%ADOBeginSubsetFont: NQPBAA+CMEX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NQPBAA+CMEX10 def
/FontInfo 8 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMEX10.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMEX10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /summationtext put
dup 88 /summationdisplay put
def
/FontBBox {-24 -2960 1454 772} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0] def
/OtherBlues [-1159 -1139] def
/BlueScale 0.04796 def
/StdHW [47] def
/StdVW [47] def
/StemSnapH [40 47] def
/StemSnapV [40 47] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/summationtext <1C60D8A8C9B521E322C24C96E0E231F0E47EB04843156366
A24A293B59AFC4B3918CB6344678BC1DF63E4B4187061E01F9A9212873DA6C87
4CF370BD0DB0D5C637E26FABE797593940996ADB65EE3E84D5A9E5E17601165C
94096235E3C4719045852E9B9AAC2FDD3B4EE793AA595A2CDD953AE0DA> |-
/summationdisplay <1C60D8A8C9B08A95197FC21C1744E77FED1D6499B901C
04115566CD2A05BF472A1D10EF4CD07417172414F35FFA68E5FFEE3333B3840C
AD5B5C27DE9B5EFDB4E4D74D071891FE726835B825A146ECE072AD20A381EA08
9F35CD19567562F2AD093C03B0471BA9BCC2CAF6F576049F10AB3C7C97EBE946
5E1779F3B144546BFEE53E4131F258AF0F377996F67F1040B242A55E37D86AE3
9368AC197A4E722> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJGD+CMEX10 /NQPBAA+CMEX10 findfont ct_VMDictPut
/PHVJGD+CMEX10*1 
[80{/.notdef}rp /summationtext 7{/.notdef}rp /summationdisplay 167{/.notdef}rp]
PHVJGD+CMEX10 nf
PHVJGD+CMEX10*1 [9.6862 0 0 -9.6862 0 0 ]msf
353.839 385.641 mo
(X)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
354.56 406.272 mo
(i)sh
%ADOBeginSubsetFont: LLIBAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /LLIBAA+CMR7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMR7.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 61 /equal put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 431 446 664 674 683 703] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
369FC937E51FD440B01114006718C9CD9EDADE925291DDB3291CFBE83284B576
2DA660F3B8EE1736383DFDEEBA0BD582FD6608113CEA73> |-
/equal <1C60D8A8C9B593D6D47FD9CC657AEA78BB93B93E797CFD3C2F45E7AE
99BBC72E0746A7E2A1090B9AA11860F7CCC70A62A9356998CC9E481F07FF34F4
8507607194D6BEE374D18623A13CD516823B17> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PHVJGE+CMR7 /LLIBAA+CMR7 findfont ct_VMDictPut
/PHVJGE+CMR7*1 
[49{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
PHVJGE+CMR7 nf
PHVJGE+CMR7*1 [6.7803 0 0 -6.7803 0 0 ]msf
357.3 406.272 mo
(=1)
[5.94632 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
369.445 394.844 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
372.336 396.296 mo
(ij)
[2.74063 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
379.157 394.844 mo
(h)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
384.736 394.844 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
388.504 394.844 mo
(x)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
394.041 390.844 mo
(j)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
398.122 394.844 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
401.89 394.844 mo
(t)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
405.386 394.844 mo
(\)\))
[3.76697 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
412.92 394.844 mo
(;i)
[13.9945 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
432.934 394.844 mo
(=1)
[10.2266 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
448.006 394.844 mo
(;)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
452.306 394.844 mo
(2)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
457.149 394.844 mo
(;:::;N;)
[4.30447 4.30447 4.30447 4.30447 4.3045 8.30487 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
495.574 394.844 mo
(\(1\))sh
262.776 423.495 mo
(where)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
289.927 423.495 mo
(\033>)
[8.74081 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
309.067 423.495 mo
(0)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
317.387 423.495 mo
(isthecouplingstrength.Thediffusivecoupling)
[2.69275 7.24536 2.69278 4.84308 7.78772 4.30066 4.84311 4.84311 4.84308 2.69278 2.69275 4.84311 
8.32043 3.76801 2.69278 3.22543 4.30066 4.84311 4.84311 2.69275 4.84311 5.90857 5.91821 4.84308 
7.77805 4.84308 2.69278 2.98328 3.22543 4.84308 3.76801 2.45062 4.69781 7.78772 4.30066 4.84314 
4.84308 4.84308 2.69275 2.69275 4.84314 0 ]xsh
262.786 435.119 mo
(matrix)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
292.968 435.119 mo
(L)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
305.028 435.119 mo
(=[)
[12.9969 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
320.719 435.119 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
323.592 436.569 mo
(ij)
[2.74063 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
330.414 435.116 mo
(])sh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
338.57 435.116 mo
(2)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
350.494 435.116 mo
(R)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
357.92 431.601 mo
(N)sh
PHVJFV+CMSY7*1 [6.7803 0 0 -6.7803 0 0 ]msf
364.782 431.601 mo
(\002)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
370.837 431.601 mo
(N)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
383.071 435.116 mo
(satis\256es:)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
421.332 435.116 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
424.218 436.569 mo
(ij)
[2.74063 0 ]xsh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
436.503 435.116 mo
(\024)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
449.502 435.116 mo
(0)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
454.345 435.116 mo
(,)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
461.658 435.116 mo
(i)sh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
470.463 435.116 mo
(6)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
470.463 435.116 mo
(=)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
483.462 435.116 mo
(j)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
492.896 435.116 mo
(and)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
262.791 447.388 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
265.669 448.844 mo
(ii)
[2.74063 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
278.052 447.391 mo
(=)sh
PHVJGD+CMEX10*1 [9.6862 0 0 -9.6862 0 0 ]msf
292 440.127 mo
(P)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
302.229 442.521 mo
(N)sh
302.229 450.298 mo
(j)sh
PHVJGE+CMR7*1 [6.7803 0 0 -6.7803 0 0 ]msf
305.822 450.298 mo
(=1)
[5.94632 0 ]xsh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
315.627 450.298 mo
(;i)
[2.3006 0 ]xsh
PHVJFV+CMSY7*1 [6.7803 0 0 -6.7803 0 0 ]msf
320.668 450.298 mo
(6)sh
PHVJGE+CMR7*1 [6.7803 0 0 -6.7803 0 0 ]msf
320.668 450.298 mo
(=)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
326.615 450.298 mo
(j)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
330.702 447.391 mo
(;l)
[4.30835 0 ]xsh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
337.897 448.844 mo
(ij)
[2.74063 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
344.719 447.391 mo
(,whichcanberegardedasthegraph)
[7.82452 6.99149 4.84116 2.69083 4.29874 10.2461 4.29874 4.29877 10.2364 4.84116 9.70364 3.22351 
4.15344 4.84116 4.29874 3.22348 4.84119 4.29871 10.2461 4.29871 9.17099 2.69083 4.84113 9.70367 
4.84113 3.22351 4.29877 4.84113 0 ]xsh
262.783 459.015 mo
(Laplacian)sh
305.054 459.015 mo
(ifweassumethecoupledcomplexnetworksasa)
[2.69278 7.29364 6.99341 8.37857 4.30069 3.76801 3.76801 4.84308 7.53589 8.37854 2.69278 4.84311 
8.36887 4.30069 4.84308 4.84311 4.84311 2.69275 4.30069 8.92099 4.30066 4.84311 7.53586 4.84308 
2.69278 4.1554 8.92099 4.84308 4.30069 2.69278 6.89655 4.84314 3.2254 4.84308 7.83624 4.30066 
7.84589 0 ]xsh
262.783 470.638 mo
(weighted)sh
301.47 470.638 mo
(directed)sh
335.846 470.638 mo
(graph.)sh
363.51 470.638 mo
(Ifnodes)
[3.22546 6.4025 4.84311 4.84308 4.84311 4.30069 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
398.913 470.638 mo
(i)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
405.432 470.638 mo
(and)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
422.596 470.638 mo
(j)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
430.316 470.638 mo
(are)sh
445.32 470.638 mo
(connecte)sh
479.744 470.638 mo
(d,then)
[4.84308 5.60828 2.69281 4.84308 4.30066 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
262.773 482.262 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
265.669 483.715 mo
(ij)
[2.74063 0 ]xsh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
276.162 482.261 mo
(6)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
276.162 482.261 mo
(=0)
[11.2049 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
292.212 482.261 mo
(;otherwise)
[6.61566 4.84311 2.69278 4.84308 4.30069 3.22543 6.99344 2.69275 3.76801 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
340.401 482.261 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
343.292 483.715 mo
(ij)
[2.74063 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
353.785 482.261 mo
(=0)
[11.2049 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
373.748 482.261 mo
(and)sh
391.658 482.261 mo
(the)sh
407.408 482.261 mo
(diagonal)sh
444.69 482.261 mo
(elements)sh
483.047 482.261 mo
(ofthe)
[4.84308 7.13867 2.69275 4.84314 0 ]xsh
262.773 494.533 mo
(coupling)sh
299.01 494.533 mo
(matrix)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
326.625 494.533 mo
(L)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
335.546 494.533 mo
(are)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
349.707 494.533 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
352.606 495.989 mo
(ii)
[2.74063 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
361.263 494.536 mo
(=)sh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
371.491 494.536 mo
( )sh
PHVJGD+CMEX10*1 [9.6862 0 0 -9.6862 0 0 ]msf
380.635 487.271 mo
(P)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
390.859 489.666 mo
(N)sh
390.859 497.443 mo
(i)sh
PHVJGE+CMR7*1 [6.7803 0 0 -6.7803 0 0 ]msf
393.598 497.443 mo
(=1)
[5.94632 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
405.505 494.536 mo
(l)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
408.395 495.989 mo
(ij)
[2.74063 0 ]xsh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
417.908 494.536 mo
(=)sh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
428.136 494.536 mo
( )sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
435.672 494.536 mo
(k)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
440.708 495.989 mo
(i)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
443.934 494.536 mo
(,)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
448.689 494.536 mo
(i)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
454.714 494.536 mo
(=1)
[10.2266 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
469.786 494.536 mo
(;)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
474.096 494.536 mo
(2)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
478.939 494.536 mo
(;:::;N)
[4.30835 2.69073 2.6908 2.69073 4.29865 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
504.463 494.536 mo
(,)sh
262.792 506.159 mo
(where)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
289.138 506.159 mo
(k)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
294.171 507.613 mo
(i)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
300.081 506.159 mo
(denotes)sh
332.355 506.159 mo
(the)sh
346.885 506.159 mo
(degreeofnode)
[4.84308 4.1554 4.84311 3.22543 4.30066 6.98376 4.84308 5.90851 4.84311 4.84311 4.84311 0 
]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
407.511 506.159 mo
(i)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
410.843 506.159 mo
(.Thenonlinearcoupling)
[5.10461 5.91821 4.84311 6.99344 4.84308 4.84311 4.84311 2.69275 2.69275 4.84311 4.30069 4.30066 
5.90851 4.30066 4.84314 4.84308 4.84308 2.69281 2.69275 4.84308 0 ]xsh
262.779 517.783 mo
(function)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
299.461 517.783 mo
(h)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
305.04 517.783 mo
(\()sh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
308.808 517.783 mo
(\001)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
311.501 517.783 mo
(\):)
[8.31949 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
327.065 517.783 mo
(R)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
334.493 514.268 mo
(n)sh
PHVJGC+CMSY10*1 [9.6862 0 0 -9.6862 0 0 ]msf
344.32 517.783 mo
(!)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
358.558 517.783 mo
(R)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
365.989 514.268 mo
(n)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
375.658 517.783 mo
(iscontinuousandhastheform:)
[2.69275 8.16556 4.30066 4.84311 4.84311 2.69275 2.69278 4.84308 4.84311 4.84311 4.84308 8.16556 
4.30066 4.84311 9.24063 4.84311 4.30066 8.16556 2.69278 4.84308 8.68854 3.2254 4.84314 3.2254 
7.53589 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
262.775 529.406 mo
(h)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
268.355 529.406 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
272.123 529.406 mo
(x)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
277.662 525.891 mo
(i)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
280.887 529.407 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
284.655 529.407 mo
(t)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
288.151 529.407 mo
(\)\)=\()
[3.76697 9.90802 13.6759 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
319.269 529.407 mo
(h)sh
PHVJGE+CMR7*1 [6.7803 0 0 -6.7803 0 0 ]msf
324.851 530.859 mo
(1)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
329.198 529.407 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
332.966 529.407 mo
(x)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
338.5 525.891 mo
(i)sh
PHVJGE+CMR7*1 [6.7803 0 0 -6.7803 0 0 ]msf
338.5 531.81 mo
(1)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
342.845 529.407 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
346.613 529.407 mo
(t)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
350.11 529.407 mo
(\)\))
[3.76697 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
357.644 529.407 mo
(;:::;h)
[4.30447 4.30447 4.30447 4.3045 4.30447 0 ]xsh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
384.749 530.859 mo
(n)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
390.022 529.407 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
393.79 529.407 mo
(x)sh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
399.325 525.891 mo
(i)sh
399.325 531.803 mo
(n)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
404.597 529.407 mo
(\()sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
408.365 529.407 mo
(t)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
411.862 529.407 mo
(\)\)\))
[3.76697 3.76697 0 ]xsh
PHVJGB+CMMI7*1 [6.7803 0 0 -6.7803 0 0 ]msf
423.162 525.891 mo
(T)sh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
429.265 529.407 mo
(,)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
436.936 529.407 mo
(i)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
446.419 529.407 mo
(=1)
[13.6749 0 ]xsh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
464.939 529.407 mo
(;)sh
PHVJGA+CMR10*1 [9.6862 0 0 -9.6862 0 0 ]msf
469.249 529.407 mo
(2)sh
PHVJFZ+CMMI10*1 [9.6862 0 0 -9.6862 0 0 ]msf
474.093 529.407 mo
(;:::;N)
[4.3045 4.30444 4.3045 4.30444 4.3045 0 ]xsh
PHVJFT+NimbusRomNo9L-Regu*1 [9.6862 0 0 -9.6862 0 0 ]msf
504.459 529.407 mo
(.)sh
262.788 541.031 mo
(And)sh
284.136 541.031 mo
(some)sh
309.253 541.031 mo
(criteria)sh
341.353 541.031 mo
(for)sh
357.315 541.031 mo
(the)sh
373.821 541.031 mo
(global)sh
402.705 541.031 mo
(sync)sh
420.46 541.031 mo
(hronization)sh
469.249 541.031 mo
(are)sh
485.745 541.031 mo
(given)
[4.84308 2.45062 4.69781 4.30066 0 ]xsh
262.788 552.654 mo
(byprojectingthenonlinearcouplingfunctionontoalinear)
[4.84311 9.46341 4.84311 3.22543 4.84308 2.69278 4.30066 4.30069 2.69275 2.69278 4.84311 9.46341 
2.69275 4.84311 8.91132 4.84308 4.84311 4.84311 2.69275 2.69275 4.84311 4.30069 4.30066 7.84576 
4.30066 4.84311 4.84311 4.84308 2.69278 2.69278 4.84308 9.46344 3.2254 4.84311 4.84311 4.30066 
2.69278 2.69278 4.84308 9.46341 4.84311 4.84308 2.69278 9.4537 8.92102 2.69275 2.69275 4.84314 
4.30066 4.30066 0 ]xsh
262.788 564.278 mo
(one)sh
282.344 564.278 mo
(and)sh
301.901 564.278 mo
(assuming)sh
344.065 564.278 mo
(the)sh
361.471 564.278 mo
(dif)sh
371.99 564.278 mo
(ference)sh
406.057 564.278 mo
(between)sh
443.901 564.278 mo
(them)sh
468.842 564.278 mo
(asadis-)
[4.30066 9.33759 9.87024 4.84314 2.69275 3.76801 0 ]xsh
262.788 575.901 mo
(turbing)sh
295.75 575.901 mo
(function.)sh
335.434 575.901 mo
(However,thecouplingstrengthsatisfying)
[6.99344 4.60092 6.99347 4.0585 4.69781 4.30069 2.83795 7.40997 2.69275 4.84311 9.27939 4.30066 
4.84311 4.84311 4.84308 2.69275 2.69275 4.84314 9.82178 3.76801 2.69278 3.22543 4.30066 4.84311 
4.84311 2.69275 9.82181 3.76797 4.30072 2.69275 2.69275 3.76801 3.22546 4.84308 2.69275 4.84314 
0 ]xsh
262.788 587.524 mo
(usch)sh
285.512 587.524 mo
(conditions)sh
330.843 587.524 mo
(issuf\256cientlylarge.Itwaspointedoutin)
[2.69278 8.72733 3.76801 4.84311 2.98328 5.38553 4.30066 2.69278 4.30066 4.84311 2.69275 2.69278 
9.81213 2.69275 4.30066 3.05109 4.84311 4.30069 7.39056 3.22543 7.66177 6.89661 4.30066 8.73703 
4.84311 4.84308 2.69275 4.84314 2.69275 4.30066 9.80243 4.84314 4.84308 7.6618 2.69275 0 
]xsh
262.788 599.148 mo
([19])sh
284.311 599.148 mo
(that)sh
304.225 599.148 mo
(the)sh
321.457 599.148 mo
(theoretical)sh
367.728 599.148 mo
(valueofthecouplingstrengthis)
[4.60095 4.30069 2.69275 4.84311 9.68622 4.84308 8.61096 2.69275 4.84311 9.69589 4.30066 4.84311 
4.84311 4.84308 2.69278 2.69278 4.84308 10.2286 3.76801 2.69275 3.2254 4.30072 4.84308 4.84314 
2.69275 10.2286 2.69275 0 ]xsh
262.788 610.771 mo
(usually)sh
295.934 610.771 mo
(much)sh
322.62 610.771 mo
(lar)sh
332.664 610.771 mo
(ger)sh
350.186 610.771 mo
(than)sh
372.029 610.771 mo
(need.)sh
397.901 610.771 mo
(But)sh
417.06 610.771 mo
(itisnotallowedthat)
[2.69278 7.8555 2.69278 8.93073 4.84314 4.84308 7.84583 4.30066 2.69278 2.69275 4.60095 6.99344 
4.30066 10.0059 2.69275 4.84314 4.30066 0 ]xsh
262.788 622.395 mo
(the)sh
279.719 622.395 mo
(coupling)sh
318.716 622.395 mo
(strength)sh
355.03 622.395 mo
(isextraordinarylargeinpractice.In)
[2.69275 8.86295 4.1554 4.84308 2.69278 3.22543 4.30066 4.84311 3.22543 4.84311 2.69275 4.84311 
4.30069 3.2254 9.93805 2.69278 4.30069 3.05109 4.84308 9.3956 2.69278 9.94772 4.84311 3.2254 
4.30066 4.30072 2.69275 2.69275 4.30072 4.30066 7.51648 3.22546 0 ]xsh
262.788 634.018 mo
(thispaper,wewillinvestigatetheadaptivesynchronizationof)
[2.6918 4.84213 2.69177 6.83759 4.84213 4.29968 4.84213 4.29971 2.83704 5.50079 6.99246 7.37024 
6.99246 2.6918 2.69177 5.76233 2.69177 4.45471 4.69684 4.29968 3.76706 2.6918 2.69177 4.84213 
4.29971 2.69177 7.37024 2.6918 4.84213 7.37991 4.29971 4.8421 4.29974 4.8421 2.6918 2.44962 
4.69684 7.37024 3.76706 4.84213 4.84216 4.29968 4.84216 3.22446 4.84213 4.84216 2.69177 4.29974 
4.29968 2.69183 2.69177 4.84216 7.91266 4.84216 0 ]xsh
262.788 645.642 mo
(nonlinearly)sh
309.94 645.642 mo
(coupled)sh
343.639 645.642 mo
(directional)sh
388.098 645.642 mo
(comple)sh
416.469 645.642 mo
(xnetworks.Ourworks)
[7.87491 4.84311 4.30066 2.69275 6.89661 4.84308 3.22543 4.84311 3.76801 5.45331 6.99347 4.84308 
6.2572 6.89661 4.84308 3.2254 4.84314 0 ]xsh
262.788 657.265 mo
(here)sh
284.785 657.265 mo
(isanontrivialextensiontotheworkin[20],where)
[2.69278 9.1051 9.62808 4.84311 4.84308 4.84311 2.69275 3.22543 2.45062 4.84308 2.69278 4.30066 
8.02988 4.15536 4.84311 2.69275 4.30069 4.84311 3.76801 2.69275 4.84308 10.1705 2.69275 10.1705 
2.69275 4.84311 9.63779 6.89655 4.84311 3.22543 10.1705 2.69278 10.1802 3.22546 4.84308 4.84314 
3.2254 7.74896 6.99341 4.84314 4.30066 3.2254 0 ]xsh
262.788 668.889 mo
(the)sh
278.383 668.889 mo
(coupling)sh
316.043 668.889 mo
(strength)sh
351.01 668.889 mo
(isconstant.Byconstructingaadaptive)
[2.69275 7.52625 4.30069 4.84311 4.84308 3.76801 2.69278 4.30066 4.84311 2.69275 6.1701 6.46078 
8.60135 4.30066 4.84311 4.84311 3.76801 2.69275 3.22543 4.84311 4.30066 2.69275 2.69278 4.84311 
8.60135 8.05893 4.30066 4.84308 4.30072 4.84308 2.69275 2.45062 4.69781 0 ]xsh
262.788 680.512 mo
(coupling)sh
299.625 680.512 mo
(strength)sh
333.768 680.512 mo
(controller)sh
371.041 680.512 mo
(,wederivesomecriteriatoensure)
[5.35645 6.99344 7.2356 4.84311 4.30069 3.2254 2.45062 4.69781 7.2356 3.76801 4.84308 7.53589 
7.2356 4.30066 3.22543 2.69275 2.69278 4.30066 3.22543 2.69278 7.2356 2.69275 7.77802 4.30066 
4.84314 3.76794 4.84314 3.2254 0 ]xsh
PHVJFS+TimesNewRomanPS-BoldMT*1 [12.6393 0 0 -12.6393 0 0 ]msf
346.336 53.3395 mo
(ComplexNetworkwithan)
[9.12558 6.31964 10.5284 7.02747 3.5137 5.42227 10.7434 9.12558 5.61185 4.2088 8.99918 6.31964 
5.61185 11.4512 9.12555 3.51373 4.2088 11.4512 6.3197 0 ]xsh
173.62 75.4583 mo
(AsymmetricalCoupling)
[9.12558 4.91678 6.31966 10.5284 10.5284 5.61186 4.20877 5.61185 3.51373 5.61185 6.31967 7.93747 
9.12556 6.31964 7.02747 7.02744 3.51373 3.5137 7.02747 0 ]xsh
%ADOBeginSubsetFont: FXYAAA+TimesNewRoman,Italic Initial
ct_T42Dict begin
-0.496 -0.305 1.117 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /FXYAAA+TimesNewRoman,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32a02c8d29000000cc000000566376
7420ff44a29700000124000007786670676d015abb920000089c000005cd
676c7966646252a6000057180002aabc68656164c514940800000e6c0000
0036686865610c7d077200000ea400000024686d74781197607500000ec8
00000eb06c6f6361056017e200001d7800000eb46d61787008d90c500000
2c2c000000206e616d65b2f5b8f600002c4c0000200570726570791a47c3
00004c5400000ac367646972000000000000000000000000000103370190
00050000059a0533002c0125059a0533004c03a000660212010502020503
05040509030400000a870000000000000000000000004d6f6e6f00010020
fffc058efe460133072101bb400001bfdff700000000058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
59b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b2021002436042595959592d00
0000000100000002e667f8e3866b5f0f3cf50819080000000000a31fb8bd
00000000b5c9aa29fc05fd8c08f608300002000900010001000000000001
00000721fe450057086bfc05fcfe08f60018000700000000000000000000
000003ac0639011c00000000020000000200000002aa009a035c01260400
00930400005606aa00900639006201b6010d02aa008c02aaff2104000122
056600be0200ffeb02aa0036020000450239ffbb0400007a0400007d0400
002004000044040000400400004904000081040000e80400004e0400003b
02aa007a02aa002405660096056600c805660096040000c6075c006104e3
ff9c04e3ffd10556008a05c7ffc304e3ffd204e3ffce05c7008e05c7ffca
02aaffc0038dffba0556ffc90473ffbe06aaffbd0556ffc705c7007a04e3
ffcf05c7006104e3ffd10400000e0473008f05c700da04e3010006aa00f9
04e3ff77047300b80473fffc031d000d023900da031dff33036000380400
ffef02aa01680400003004000036038d003804000027038d00400239fe9b
0400ffc904000029023900580239fea0038d00140239004f05c700230400
00270400003c0400ff1e0400002d031d002a031dffed023900540400003c
038d002c05560023038dffb8038dff5c031dffc70333008d023300ed0333
ff670454001404e3ff9c04e3ff9e0556008a04e3ffd20556ffc705c7007a
05c700da040000300400003004000030040000300400003004000030038d
003c038d0040038d0040038d0040038d0040023900580239005802390058
02390058040000270400003c0400003c0400003c0400003c0400003c0400
003c0400003c0400003c0400003c040000dd033300d40400007204000031
0400fffc02cd00ad042f006c0400feb70614008b0614008b07d700be02aa
019902aa010c04640019071dff9405c7004805b40035046400350464005e
0464005a0400fff2049cffd203f4004005b4002b06960092046400480231
0000023500b2027b00e40625005b0556002d0400000504000049031d0090
0566009604640054040000020464001e04e5ffc40400005404000025071d
010a04e3ff9c04e3ff9c05c7007a078d002d055600360400ffee071dffed
0473018a0473017502aa01b202aa01910464003503f4002f038dff600473
00b70156feab0400001102aa007402aa002e0400fe7d0400fe7d0400ffe3
0200009102aa00410473001e0800007f04e3ff9c04e3ffd204e3ff9c04e3
ffd204e3ffd202aaffc002aaffc002aaffc002aaffc005c7007a05c7007a
05c7007a05c700da05c700da05c700da0239005802aa00fe02aa00c602aa
00f602aa012602aa01c102aa017d02aaffdb02aa012f02aa004e02aa0152
0473ffc6023900330400000e031dfff00473fffc031dffad023300ed05c7
ffd004000037047300b7038dff6004e3ffcf0400ff1e056600960566017a
026600a30266006f02660084060000a1060000a1060000820400ffce05c7
008e0400ffc902aaffc00400000e031dffed0556008a038d003c0556008a
038d003c04000027040000c502ab01ee04e3ff9c0400003004e3ff9c0400
003005c7ffc304de002705c7ffd004e3ffd2038d004004e3ffd2038d0040
0473ffbe0239004f0473ffbe02e9004e0473ffbe029500490556ffc70400
00270556ffc70400002705c7007a0400003c04e3ffd1031d002604e3ffd1
031d00260400000e031dffed0473008f0239ffdd0473008f02e9005605c7
00da0400003c05c700da0400003c0473fffc031dffc30473fffc031dffc3
048dffb605c7007d0617009d0433003c03b800300327001603f2003602dd
0033046d004a0400ffef0495009a0285001407eb002f0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00566
00c604cd00990566009804d5022204d5010505abffe904ed01c005ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f0415004004000025060000550600ffc30401004b049e
007301c0010d0355012606ab006c0355001e04d5009202d6008302d60083
04d500b202d6007004e3ff9c040000300556008a038d003a0556008a038d
003a04e3ffd2038d004004e3ffd2038d004004e3ffd2038d004005c7008e
0400ffc905c7008e0400ffc905c7008e0400ffc805c7ffca0400002905c7
ffca0400002902aaffc00239005402aaffc00239005802aaffc002390054
02aaffc0023a0034038dffba0239fea00556ffc9038d0014038d00140473
ffbe0239ffa20556ffc7040000270592ffc003db002705c7007a0400003c
05c7007a0400003c04e3ffd1031dfff90400000e031dffed04730093023a
003105c700da0400003c05c700da0400003c05c700da0400003c05c700de
0400003c06aa00f905560023047300b8038dff5e0239fe9d04e3ffa50400
0030071dff940556002d05c700480400000502aa014d06aa00f905560023
06aa00f90556002306aa00f905560023047300b8038dff5e02aa01bd02aa
00b70400003104cd005a060000a10600008206000084060000e802aa004c
02aaffdb02aa019902aa00b404e3ff9c056f005d065600590337004d05c7
007a0548005e05cf00200239005404e3ff9c04e3ffd104b2ffa704e3ffd2
0473fffc05c7ffca02aaffc00556ffc904d5ff8f06aaffbd0556ffc7051d
fff205c7007a05c7ffc504e3ffcf04c1ffb90473008f047300b804e3ff77
05a0011305c9001b02aaffc0047300bc0433003c0327001603f8003a0239
005503ac003503fcff7703270031033d002f03f8003a03ee005a02390055
03d7001f0377ffc00404ff94038d002c036d00250400003c03d7ff6f033f
003f03ac00350385ff4004f8008f05a600480239005503ac00350400003c
03ac00350595003f04e3ffce066000c1048dffb6055a008e0400000e02aa
ffc002aaffc0038dffba076bffbb075effc2066400c60550ffc7056200e1
05c7ffcd04e3ff9c04b8ffc604e3ffd1048dffb60517ff2d04e3ffd20754
ff9003f6fffe05c7ffcc05c7ffcc0550ffc7056bffb906aaffbd05c7ffca
05c7007a05c7ffc504e3ffcf0556008a0473008f056200e1066f009504e3
ff7705c7ffcc058300e70858ffe40858ffe40568007606faffc604b8ffc6
053d001e0842ffbe0542ff9104000030040600490379003f031f0002040c
003d038d00400771ffff031fffce0400003c0400003c03be0025037dffa5
051bffa403f800290400003c040000270400ff1e038d003805c70023038d
ff5c05ae003c038dffb80400003c03d10056060a0040060a00400427003c
056b006603a400660387000f05a4002a03b8ff84038d003c03d500280304
ffaa037d0036031dffed02390058023900550239fea0056fffa605b2002a
0400002903be0025038dff5c040000250385ffc30285005608000041078b
ffa80402003202aa003502aaff4f02aaff6502aaff4502aa003502aaffc2
02aaffc202aaffc302aaffc302aa01cf02aaff4f02aa010202aa005402f7
00ed02aa015c02aa005f02be037c02be003702aa007a03d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00bf0208002903c4fffa03d3005901ef
00c6038000c10349ffc7037000c703c8ffe403c3ffde020b004a023cff9d
03b1006b0383ffcd0372004f036effd5039000c50397fff0038eff8f0395
00bc04f500c203cbff85043800bf040b00c603de00c60186009b02f1009b
064c0010021c0041038000c10380008f03700016037000160383ffd104f5
00c204f500c204f500c204f500c203d3ffd503d3ffd503d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00620225000c03d3005901ef005a0380
00c10349ffc7037000c703c3ffde023cff9d03b1006b0372004f036effd5
0397fff0038eff8f038e009d04f500c203cbff85021c00bf037fffc50349
ffc7036effd50448004a0000ffdc0000ff250000ffdc0000fe510400005a
0800000005c7007a0445003c060800da045d003c0000ff1a0000fdf20000
fdb40000ff910000fef60000fee40000ff780000ff8a0000fe880000fefb
0000fea20000fe6e0000fdf4000000350000001f0000fe47041a00780600
00a10600006f0000ff2b0000fe6c0000fe8a0000fdd20000ff1e0000fe38
0000fdcd0000fd190000fce70000fd710000fd3f0000fcf90000fccd0000
fc050000fc050000fc550000fc0f0000ff190000ffa20000fe310000fc55
0000fcef0000fd9c0000fdda0000fca10000fd530000fcef0000fcb30000
fd0d0000fcb30000fdba0000fd940000fd7e0000fd300239005804e3ff9c
0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3
ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c04000030
04e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400
003004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2
038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3
ffd2038d004002aaffc00239005802aaffc00239003105c7007a0400003c
05c7007a0400003c05c7007a0400003c05c7007a0400003c05c7007a0400
003c05c7007a0400003c05c7007a0400003c05c7007a0445003c05c7007a
0445003c05c7007a0445003c05c7007a0445003c05c7007a0445003c05c7
00da0400003c05c700da0400003c060800da045d003c060800da045d003c
060800da045d003c060800da045d003c060800da045d003c047300b8038d
ff5c047300b8038dff5c047300b8038dff5c04e3ff9c0400003002aaffc0
0239005805c7007a0400003c05c700da0400003c05c700da0400003c05c7
00da0400003c05c700da0400003c05c700da0400003c000000be000000be
000000be000000be048dffb6031f00020754ff900771ffff0550ffc703be
00250550ffc703be002505c7ffca03f80029047300b804000003047300b8
0400ffdf04e3ff77038dffb8058300e703d100560583ffca04000027058f
007a038d001b05c7007a0400003c00000000000000680000006800000068
0000006800000116000001fe0000040c0000065e000007ec0000099c0000
0a0e00000a8e00000b1600000ce800000d5c00000dd000000e0800000e52
00000eb800000fbe000010ea0000120200001356000014e6000016140000
174c000018220000197600001ab200001b3600001be600001c9a00001cf4
00001db200001eec00002140000023540000259a000026a40000281a0000
2a6c00002c4800002db6000030a20000329e00003406000036a800003832
00003af400003ce800003e0800003fbe00004196000043c0000045c00000
47580000494800004b1a00004da600004fd2000051f40000535600005448
00005494000055b40000561c00005652000056c20000593e00005aba0000
5c3e00005eb60000602a000062540000643c00006632000067d600006950
00006baa00006d340000706e000072a2000073a800007596000077760000
78f400007a3800007ba400007dee00007f64000081640000833e000084fe
000086da000087da0000881600008924000089cc00008a0000008a400000
8a6e00008ab600008aee00008b2000008b5800008b8800008bb800008be8
00008c1a00008c4e00008c8a00008cb800008ce600008d1a00008d4a0000
8d7a00008daa00008dda00008e1600008e4600008e8000008eb000008ee0
00008f1000008f4400008f7a00008fac00008fda0000900c0000903e0000
9170000091f8000093780000951800009686000096f4000097aa00009996
00009ba000009d4c00009ff40000a0520000a0e80000a1ce0000a4ae0000
a66c0000a7c60000a8660000a96e0000aa660000acd20000ae640000af5c
0000b0940000b17a0000b3120000b4260000b58a0000b6020000b78c0000
b9740000bb360000bc280000bcf40000bd3e0000bde40000bf980000c0cc
0000c1560000c23a0000c3140000c3bc0000c3ee0000c41e0000c44e0000
c6a00000c8540000c88a0000c8c20000c99c0000ca720000cadc0000cb4e
0000cbfe0000ccb80000ccfc0000cd360000cd880000cee80000cf4a0000
cfa60000d1a60000d3ae0000d57c0000d5c20000d6360000d70a0000d93a
0000d96a0000d99e0000d9ce0000da020000da3e0000da700000daa00000
dade0000db120000db420000db7c0000dbac0000dbf00000dc3a0000dc70
0000dd640000ddd40000de6e0000deac0000df280000df740000dfe20000
e0880000e1240000e1be0000e22e0000e3fa0000e55a0000e58c0000e5bc
0000e5ee0000e6200000e6840000e8080000e97c0000e9b20000e9e60000
eb7c0000ed060000ed3c0000ee140000ef3a0000f0220000f11e0000f330
0000f5760000f7bc0000f9880000f9b80000f9e60000fa200000fa4e0000
fa7a0000faaa0000fada0000fb140000fb4e0000fd340000fd6e0000fdb4
0000fde40000fe120000fe4e0000fe7c0000feac00010084000100940001
00c0000100ee000101220001016a0001019a000101cc0001034c0001048c
000104c200010504000105360001056a0001059a000105da000106280001
0674000106a4000106de00010710000107480001077e000107b60001095a
00010ad200010b1800010c8000010cb400010cf200010d3e00010d8a0001
0dba00010df400010e2c00010e5e00010f6c0001112a0001132a00011452
0001158e000116e6000117ca000118ce00011a4a00011ab400011adc0001
1c2800011f3a00011fb200012032000120ac00012128000121ce0001227e
00012358000123ae0001245e000124e80001258e000125da0001265e0001
26e20001271800012734000127540001277400012794000127b4000127da
00012800000128260001284c0001287c000128a4000128cc000128f60001
2920000129540001297e000129aa000129e000012a0800012a3400012a68
00012a9200012abc00012af000012b1e00012b5200012b9400012bc40001
2bf800012c3a00012c6e00012ca000012ce200012d1600012d4600012d88
00012dcc00012e1200012e6e00012e8a00012ea600012ec000012eda0001
2ef4000130620001330c0001357c00013596000135b0000135ca000135e6
000136020001361e0001367a000136b40001371c000137f4000138980001
3970000139f000013a7800013ae600013b7c00013bd400013c1400013c72
00013cd400013d1600013d9600013ddc00013dec00013dfc00013fb80001
40f40001411e0001413a000141660001419e000141ea0001422e00014262
00014292000142c8000142f80001432600014370000143a2000143d20001
44060001443c00014474000144a8000144d8000145080001453600014568
0001459a000145ca0001460c000148fa00014af400014b4000014b760001
4bb400014be200014c2800014c5e00014c8200014cb600014cea00014e3a
00014e6a00014e9000015088000150b0000150da000151020001512a0001
52f4000154de000155140001554400015578000155a8000155da00015600
00015634000156620001584400015a0800015a5000015a8000015ab00001
5aee00015b4200015b7200015b9800015bd200015c0200015c3200015c62
00015c9000015d9e00015dee00015e1e00015e4e00015e7e00015eae0001
5ede00015f2800015f5800015f8800015fb800015fe80001601c00016054
00016088000160b60001613c000161740001637a0001648c000166c00001
68b400016a9400016c3c00016ca000016d3800016d4800016e0a00016ff6
00017214000174360001755e000176540001789c00017aae00017c320001
7c4200017c5200017d2400017d3400017d4400017d5400017d6400017d74
00017eae00017ebe00017ece0001810a0001811a00018296000182a60001
8402000184120001842200018432000186660001886e000188a2000188e0
000189100001893e0001896e0001899e000189de00018b4000018c5c0001
8d8e00018f2200019028000190380001921e0001934000019490000194a0
00019632000196420001977200019894000199b400019b2400019d2e0001
9e8c00019ebc00019f1000019f4000019f7600019faa00019fde0001a1fe
0001a22e0001a3360001a3460001a3560001a38a0001a39a0001a5900001
a8560001aa680001aa980001aca80001af1e0001af2e0001b14a0001b15a
0001b16a0001b2ce0001b2de0001b5fe0001b7240001b9f40001bd200001
bede0001c0340001c0440001c0540001c0640001c0740001c0840001c094
0001c0a40001c2160001c4660001c4760001c6cc0001c8960001cab80001
cd020001ce4c0001d0cc0001d2960001d3da0001d6560001d7da0001d7ea
0001d92e0001da440001db360001dc100001dc200001de100001df3a0001
df4a0001e1f20001e37e0001e4fc0001e6ea0001e8500001e8600001e870
0001e8800001e8900001e8a00001e8b00001ead60001eae60001ed640001
eeba0001f0f00001f3780001f4dc0001f6f00001f84c0001f9560001faa0
0001fc780001fca80001fe220001ff80000200a4000200b4000200c40002
00f400020104000202720002045e0002046e0002049e0002065600020864
000209f600020b0c00020b4000020d9a00020f4600020fa80002108e0002
110000021184000211bc0002121e000212ac000212c6000213040002133e
000213cc000214060002141e000214380002145200021470000214a40002
14d80002152e000215e200021634000216ac0002170e0002179c000217ec
00021848000218ce0002194400021988000219dc00021a2400021abc0002
1b2200021ba400021bfe00021c5c00021cc000021d7c00021df600021e76
00021f0e00021fae0002202e0002207800022146000221c0000222540002
22dc0002235800022382000223c800022432000224ae00022558000225de
000226a400022796000228500002295000022a4c00022b7800022ca00002
2d6200022e4800022f2800022fa80002304c000230dc0002319400023212
0002329c0002333e000233b000023432000234a60002356a000236180002
36a400023736000237dc000238880002395600023a0400023a7c00023b76
00023c1c00023c9800023cf800023d0e00023d9e00023e8c00023ea60002
3ee200023f1200023f4200024088000243ce0002455e0002469c00024868
00024a9400024b1600024b6c00024bc400024c5a00024cee00024d460002
4e0800024f0e00024fcc00025098000251480002522e000252ca0002538e
00025442000254820002564a00025828000259d000025a2400025a780002
5acc00025b2000025bc400025c6000025d0c00025db800025e6400025ef8
00025f8c00026020000260320002604400026056000260680002607a0002
60d000026128000261bc000261ce000261e0000261f20002620200026214
00026226000262380002624a0002625c0002626e00026354000264000002
64e60002659200026692000266bc000266ec000267240002675000026798
000267fc00026858000268a2000268f400026962000269b400026a040002
6a4600026a9800026ae600026b2600026b7800026bc800026c1200026c5c
00026c9c00026ce000026d2600026d6e00026dae00026dd400026e0e0002
6e3c00026e7000026ec200026f2a00026f8400026fea0002702a00027086
000270fc000271580002719e000272040002724200027282000272ba0002
72fc000273380002735e00027390000273c80002740e0002746e000274ca
000275280002756a000275c20002764000027690000276dc000277200002
776c000277a8000277e20002781a0002784a00027882000278c8000278f8
00027932000279580002798c000279c6000279ec00027a2200027a5c0002
7a9c00027ad400027b0c00027b5e00027b9800027bcc00027c1000027c48
00027c8200027ca800027ce400027d0a00027d5200027d9800027dda0002
7e3200027e7800027eca00027f0400027f4c00027f8600027fd800028016
0002807a000280ac0002815e000281900002822600028258000282f40002
8326000283da000284d4000286060002876000028886000289a200028ab0
00028d4800028f5e00029130000292ea000294ea00029702000298c00002
9a2000029a3000029b5400029cbc00029e1a00029fae0002a13e0002a300
0002a4ac0002a5e20002a7000002a8060002a8dc0002a9e60002aabc0001
000003ac00f2003c0068000500020010002f0055000004830ac300030002
0000005f047a000000030000000000fe00000000000300000001001e00fe
0000000300000002000c02080000000300000003007001d6000000030000
0004002c01e8000000030000000500180216000000030000000600300246
000000030000000700d800fe000000030000000800260302000000030000
00090086092a000000030000000a055609b0000000030000000b00720f06
000000030000000c00660f78000000030000000d06b40276000000030000
000e005c0fde0001000000000000007f103a0001000000000001000f10b9
00010000000000020006113e000100000000000300381125000100000000
00040016112e0001000000000005000c114500010000000000060018115d
0001000000000007006c10b90001000000000008001311bb000100000000
0009004314cf000100000000000a02ab1512000100000000000b003917bd
000100000000000c003317f6000100000000000d035a1175000100000000
000e002e18290003000104030002000e18770003000104030004002e1857
0003000104050002000e18a50003000104050004002e1885000300010406
0002000c18d30003000104060004002c18b30003000104070002000c18ff
0003000104070004002c18df0003000104080002000c1933000300010408
0004002c1913000300010409000000fe00000003000104090001001e00fe
0003000104090002000c02080003000104090003007001d6000300010409
0004002c01e8000300010409000500180216000300010409000600300246
000300010409000700d800fe000300010409000800260302000300010409
00090086092a000300010409000a055609b0000300010409000b00720f06
000300010409000c00660f78000300010409000d06b40276000300010409
000e005c0fde00030001040a0002000e195f00030001040a0004002e193f
00030001040b0002001418ff00030001040b0004003418df00030001040c
00020010198d00030001040c00040030196d00030001040e0002000819bd
00030001040e00040028199d0003000104100002000e19e5000300010410
0004002e19c50003000104130002000e1a130003000104130004002e19f3
0003000104140002000c18ff0003000104140004002c18df000300010415
0002000e1a410003000104150004002e1a210003000104160002000e1a6f
0003000104160004002e1a4f0003000104190002000c1a9d000300010419
0004002c1a7d00030001041b0002000e1ac900030001041b0004002e1aa9
00030001041d0002000c18ff00030001041d0004002c18df00030001041f
0002000c1af700030001041f0004002c1ad70003000104240002000e1b23
0003000104240004002e1b0300030001042a0002000e1b5100030001042a
0004002e1b3100030001042d0002000c1b7f00030001042d0004002c1b5f
00030001080a0002000e195f00030001080a0004002e193f000300010816
0002000e1a6f0003000108160004002e1a4f000300010c0a0002000e195f
000300010c0a0004002e193f000300010c0c00020010198d000300010c0c
00040030196d00540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
007300200052006500730065007200760065006400540069006d00650073
0020004e0065007700200052006f006d0061006e00ae0020005400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c00630020007200650067006900730074
006500720065006400200069006e00200074006800650020005500530020
0050006100740020002600200054004d0020004f00660066002e00200061
006e006400200065006c0073006500770068006500720065002e004d006f
006e006f0074007900700065003a00540069006d006500730020004e0065
007700200052006f006d0061006e0020004900740061006c00690063003a
00560065007200730069006f006e00200032002e0039003000200028004d
006900630072006f0073006f00660074002900540069006d00650073004e
006500770052006f006d0061006e00500053002d004900740061006c0069
0063004d0054004e004f00540049004600490043004100540049004f004e
0020004f00460020004c004900430045004e005300450020004100470052
00450045004d0045004e0054000d000a000d000a00540068006900730020
007400790070006500660061006300650020006900730020007400680065
002000700072006f007000650072007400790020006f00660020004d006f
006e006f00740079007000650020005400790070006f0067007200610070
0068007900200061006e0064002000690074007300200075007300650020
0062007900200079006f007500200069007300200063006f007600650072
0065006400200075006e0064006500720020007400680065002000740065
0072006d00730020006f0066002000610020006c006900630065006e0073
0065002000610067007200650065006d0065006e0074002e00200059006f
0075002000680061007600650020006f0062007400610069006e00650064
002000740068006900730020007400790070006500660061006300650020
0073006f0066007400770061007200650020006500690074006800650072
0020006400690072006500630074006c0079002000660072006f006d0020
004d006f006e006f00740079007000650020006f007200200074006f0067
006500740068006500720020007700690074006800200073006f00660074
007700610072006500200064006900730074007200690062007500740065
00640020006200790020006f006e00650020006f00660020004d006f006e
006f0074007900700065002700730020006c006900630065006e00730065
00650073002e000d000a000d000a005400680069007300200073006f0066
0074007700610072006500200069007300200061002000760061006c0075
00610062006c00650020006100730073006500740020006f00660020004d
006f006e006f0074007900700065002e00200055006e006c006500730073
00200079006f00750020006800610076006500200065006e007400650072
0065006400200069006e0074006f00200061002000730070006500630069
0066006900630020006c006900630065006e007300650020006100670072
00650065006d0065006e00740020006700720061006e00740069006e0067
00200079006f00750020006100640064006900740069006f006e0061006c
0020007200690067006800740073002c00200079006f0075007200200075
007300650020006f00660020007400680069007300200073006f00660074
00770061007200650020006900730020006c0069006d0069007400650064
00200074006f00200079006f0075007200200077006f0072006b00730074
006100740069006f006e00200066006f007200200079006f007500720020
006f0077006e0020007000750062006c0069007300680069006e00670020
007500730065002e00200059006f00750020006d006100790020006e006f
007400200063006f007000790020006f0072002000640069007300740072
006900620075007400650020007400680069007300200073006f00660074
0077006100720065002e000d000a000d000a0049006600200079006f0075
0020006800610076006500200061006e0079002000710075006500730074
0069006f006e00200063006f006e006300650072006e0069006e00670020
0079006f00750072002000720069006700680074007300200079006f0075
002000730068006f0075006c006400200072006500760069006500770020
0074006800650020006c006900630065006e007300650020006100670072
00650065006d0065006e007400200079006f007500200072006500630065
006900760065006400200077006900740068002000740068006500200073
006f0066007400770061007200650020006f007200200063006f006e0074
0061006300740020004d006f006e006f007400790070006500200066006f
00720020006100200063006f007000790020006f00660020007400680065
0020006c006900630065006e00730065002000610067007200650065006d
0065006e0074002e000d000a000d000a004d006f006e006f007400790070
0065002000630061006e00200062006500200063006f006e007400610063
007400650064002000610074003a000d000a000d000a0055005300410020
002d0020002800380034003700290020003700310038002d003000340030
0030000900090055004b0020002d00200030003100310034003400200030
00310037003300370020003700360035003900350039000d000a00680074
00740070003a002f002f007700770077002e006d006f006e006f00740079
00700065002e0063006f006d004d006f006e006f00740079007000650020
0054007900700065002000440072006100770069006e00670020004f0066
00660069006300650020002d0020005300740061006e006c006500790020
004d006f007200690073006f006e002c00200056006900630074006f0072
0020004c0061007200640065006e00740020003100390033003200540068
00690073002000720065006d00610072006b00610062006c006500200074
007900700065006600610063006500200066006900720073007400200061
007000700065006100720065006400200069006e00200031003900330032
00200069006e0020005400680065002000540069006d006500730020006f
00660020004c006f006e0064006f006e0020006e00650077007300700061
007000650072002c00200066006f00720020007700680069006300680020
006900740020007700610073002000640065007300690067006e00650064
002e00200020004900740020006800610073002000730075006200730065
007100750065006e0074006c00790020006200650063006f006d00650020
006f006e00650020006f0066002000740068006500200077006f0072006c
006400730020006d006f0073007400200073007500630063006500730073
00660075006c002000740079007000650020006300720065006100740069
006f006e0073002e002000200054006800650020006f0072006900670069
006e0061006c002000640072006100770069006e00670073002000770065
007200650020006d00610064006500200075006e00640065007200200053
00740061006e006c006500790020004d006f007200690073006f006e0027
007300200064006900720065006300740069006f006e0020006200790020
0056006900630074006f00720020004c0061007200640065006e00740020
006100740020005400680065002000540069006d00650073002e00200020
004900740020007400680065006e002000770065006e0074002000740068
0072006f00750067006800200061006e00200065007800740065006e0073
006900760065002000690074006500720061007400690076006500200070
0072006f006300650073007300200069006e0076006f006c00760069006e
00670020006600750072007400680065007200200077006f0072006b0020
0069006e0020004d006f006e006f00740079007000650027007300200054
007900700065002000440072006100770069006e00670020004f00660066
006900630065002e00200020004200610073006500640020006f006e0020
006500780070006500720069006d0065006e007400730020004d006f0072
00690073006f006e002000680061006400200063006f006e006400750063
0074006500640020007500730069006e0067002000500065007200700065
00740075006100200061006e006400200050006c0061006e00740069006e
002c00200069007400200068006100730020006d0061006e00790020006f
006c00640020007300740079006c00650020006300680061007200610063
007400650072006900730074006900630073002000620075007400200077
006100730020006100640061007000740065006400200074006f00200067
00690076006500200065007800630065006c006c0065006e00740020006c
00650067006900620069006c00690074007900200063006f00750070006c
006500640020007700690074006800200067006f006f0064002000650063
006f006e006f006d0079002e002000200057006900640065006c00790020
007500730065006400200069006e00200062006f006f006b007300200061
006e00640020006d006100670061007a0069006e00650073002c00200066
006f00720020007200650070006f007200740073002c0020006f00660066
00690063006500200064006f00630075006d0065006e0074007300200061
006e006400200061006c0073006f00200066006f00720020006400690073
0070006c0061007900200061006e00640020006100640076006500720074
006900730069006e0067002e0068007400740070003a002f002f00770077
0077002e006d006f006e006f0074007900700065002e0063006f006d002f
00680074006d006c002f006d0074006e0061006d0065002f006d0073005f
00740069006d00650073006e006500770072006f006d0061006e002e0068
0074006d006c0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d002f00680074006d
006c002f006d0074006e0061006d0065002f006d0073005f00770065006c
0063006f006d0065002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f0074007900700065002f006c0069
00630065006e00730065002e00680074006d006c547970656661636520a9
20546865204d6f6e6f7479706520436f72706f726174696f6e20706c632e
204461746120a920546865204d6f6e6f7479706520436f72706f72617469
6f6e20706c632f5479706520536f6c7574696f6e7320496e632e20313939
302d313939322e20416c6c2052696768747320526573657276656454696d
6573204e657720526f6d616ea82054726164656d61726b206f6620546865
204d6f6e6f7479706520436f72706f726174696f6e20706c632072656769
73746572656420696e2074686520555320506174202620544d204f66662e
20616e6420656c736577686572652e4d6f6e6f747970653a54696d657320
4e657720526f6d616e204974616c69633a56657273696f6e20322e393020
284d6963726f736f66742954696d65734e6577526f6d616e50532d497461
6c69634d544e4f54494649434154494f4e204f46204c4943454e53452041
475245454d454e540d0a0d0a546869732074797065666163652069732074
68652070726f7065727479206f66204d6f6e6f74797065205479706f6772
6170687920616e64206974732075736520627920796f7520697320636f76
6572656420756e64657220746865207465726d73206f662061206c696365
6e73652061677265656d656e742e20596f752068617665206f627461696e
6564207468697320747970656661636520736f6674776172652065697468
6572206469726563746c792066726f6d204d6f6e6f74797065206f722074
6f676574686572207769746820736f667477617265206469737472696275
746564206279206f6e65206f66204d6f6e6f747970652773206c6963656e
736565732e0d0a0d0a5468697320736f6674776172652069732061207661
6c7561626c65206173736574206f66204d6f6e6f747970652e20556e6c65
737320796f75206861766520656e746572656420696e746f206120737065
6369666963206c6963656e73652061677265656d656e74206772616e7469
6e6720796f75206164646974696f6e616c207269676874732c20796f7572
20757365206f66207468697320736f667477617265206973206c696d6974
656420746f20796f757220776f726b73746174696f6e20666f7220796f75
72206f776e207075626c697368696e67207573652e20596f75206d617920
6e6f7420636f7079206f722064697374726962757465207468697320736f
6674776172652e0d0a0d0a496620796f75206861766520616e7920717565
7374696f6e20636f6e6365726e696e6720796f7572207269676874732079
6f752073686f756c642072657669657720746865206c6963656e73652061
677265656d656e7420796f75207265636569766564207769746820746865
20736f667477617265206f7220636f6e74616374204d6f6e6f7479706520
666f72206120636f7079206f6620746865206c6963656e73652061677265
656d656e742e0d0a0d0a4d6f6e6f747970652063616e20626520636f6e74
61637465642061743a0d0a0d0a555341202d202838343729203731382d30
3430300909554b202d203031313434203031373337203736353935390d0a
687474703a2f2f7777772e6d6f6e6f747970652e636f6d4d6f6e6f747970
6520547970652044726177696e67204f6666696365202d205374616e6c65
79204d6f7269736f6e2c20566963746f72204c617264656e742031393332
546869732072656d61726b61626c65207479706566616365206669727374
20617070656172656420696e203139333220696e205468652054696d6573
206f66204c6f6e646f6e206e65777370617065722c20666f722077686963
68206974207761732064657369676e65642e202049742068617320737562
73657175656e746c79206265636f6d65206f6e65206f662074686520776f
726c6473206d6f7374207375636365737366756c20747970652063726561
74696f6e732e2020546865206f726967696e616c2064726177696e677320
77657265206d61646520756e646572205374616e6c6579204d6f7269736f
6e277320646972656374696f6e20627920566963746f72204c617264656e
74206174205468652054696d65732e20204974207468656e2077656e7420
7468726f75676820616e20657874656e7369766520697465726174697665
2070726f6365737320696e766f6c76696e67206675727468657220776f72
6b20696e204d6f6e6f74797065277320547970652044726177696e67204f
66666963652e20204261736564206f6e206578706572696d656e7473204d
6f7269736f6e2068616420636f6e647563746564207573696e6720506572
706574756120616e6420506c616e74696e2c20697420686173206d616e79
206f6c64207374796c652063686172616374657269737469637320627574
20776173206164617074656420746f206769766520657863656c6c656e74
206c65676962696c69747920636f75706c6564207769746820676f6f6420
65636f6e6f6d792e2020576964656c79207573656420696e20626f6f6b73
20616e64206d6167617a696e65732c20666f72207265706f7274732c206f
666669636520646f63756d656e747320616e6420616c736f20666f722064
6973706c617920616e64206164766572746973696e672e687474703a2f2f
7777772e6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d
735f74696d65736e6577726f6d616e2e68746d6c687474703a2f2f777777
2e6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f77
656c636f6d652e68746d6c687474703a2f2f7777772e6d6f6e6f74797065
2e636f6d2f68746d6c2f747970652f6c6963656e73652e68746d6c005400
69006d006500730020004e0065007700200052006f006d0061006e002000
6300750072007300690076006100540069006d006500730020004e006500
7700200052006f006d0061006e0020006b00750072007a00ed0076006100
540069006d006500730020004e0065007700200052006f006d0061006e00
20006b0075007200730069007600540069006d006500730020004e006500
7700200052006f006d0061006e0020004b00750072007300690076006f00
690074007500540069006d006500730020004e0065007700200052006f00
6d0061006e002003a003bb03ac03b303b903b100540069006d0065007300
20004e0065007700200052006f006d0061006e0020004300750072007300
690076006100540069006d006500730020004e0065007700200052006f00
6d0061006e0020004900740061006c006900710075006500540069006d00
6500730020004e0065007700200052006f006d0061006e00200044015100
6c007400540069006d006500730020004e0065007700200052006f006d00
61006e00200043006f0072007300690076006f00540069006d0065007300
20004e0065007700200052006f006d0061006e0020004300750072007300
690065006600540069006d006500730020004e0065007700200052006f00
6d0061006e0020006b00750072007300790077006100540069006d006500
730020004e0065007700200052006f006d0061006e00200049007400e100
6c00690063006f00540069006d006500730020004e006500770020005200
6f006d0061006e0020041a0443044004410438043200540069006d006500
730020004e0065007700200052006f006d0061006e0020004b0075007200
7a00ed0076006100540069006d006500730020004e006500770020005200
6f006d0061006e0020013000740061006c0069006b00540069006d006500
730020004e0065007700200052006f006d0061006e00200050006f016100
650076006e006f00540069006d006500730020004e006500770020005200
6f006d0061006e0020006e00670068006900ea006e006700540069006d00
6500730020004e0065007700200052006f006d0061006e00200045007400
7a0061006e0061000000ba0054ffc003bbb345453240b803bbb32b2e3240
b803bbb2282932b9ffc003bbb31a263280411303bb009f03bb00af03bb00
cf03bb0004000003bb001f03bb000203bb02af0027001fffc003b9b2161b
32b9ffc003b8b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df41
0a03b800ef03b8000203b803b90028001fffc003b9b3282e32f0410b03b9
0001000003b7000103b700030800001f03b60381b23a1f0f411703b30010
03b2002003b2005003b2007003b200e003b2000600cf03b300df03b300ef
03b300ff03b30004001203a8b2e2891fbe039f016b019a001f0398009308
01400c1f7f047f05027f027f03025fbb02b00001ffc00117b2196632b8ff
c0b3651a6632b9ff800173b2196632bd038401170800001fffc002afb231
3340b802afb22e3340b802afb328293240b802afb326273240b802afb321
253240b802afb31c203240b802afb2233340b802afb21933a0bc02af00b0
02af00e002afb5034003212932b8fff2b33a263d32bc038203820382003a
0800b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e
3269be03810001008a03810001000e0381b32b2f3210b80381b3515b320c
b80381b34e513222b80381b3474d320eb80381b246330ab8038140092647
3212254358320cb80381b2323310b80381b22a3312b80381b3373d3212bb
0381003d0033fff44015253d331825355b32102526343206252a330c252e
33b8fffe4024252d330c3a2f33329925aa25ba25c92504052536330c2532
3832193a293a383a03182517b80381b42825382504bc0381038103810025
080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc03
8003800380001f080040151f375f07af07025f06af060222ac2b2e3209ac
2f33b8ffdc400aac1f223222232b52320eb8037fb229330eb8037fb22233
14b8037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232
262c33410affee037f00390033fff8037f002b0033ffea037fb23a3320b8
037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320e
b8037fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8
037f400c1d3322263032322226333832b8fff8400a262b2f3209261b2132
8abe037f0001037f037f037f00260800402e1f371f062f063f06039f02af
02bf02cf02049f03af03bf03cf03046f037f038f03031f032f033f034f03
5f03050f413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f
02ed006f02ed000300af02af0001004f02af009f02af0002002f02af003f
02af0002003f02b00001004f02af005f02af0002002f02af003f02af0002
007003b2000103b203b202ed02ed02b002b002af02af401a370100300140
0102010100090102000800171700000012110840410b027b02230034000d
013d0034000d01370034000d011b401a340d8f340d84340d68340d59340d
54340d48340d2c340d28340d411002350020000d021b0020000d01fc0020
000d01c30020000d01500020000d012c401a200df0200dbe200d94200d79
200d6a200d61200d5f200d44200d410d013e0138000d003d0138000d0030
0138000d001d0138000d01fdb40f4d0f0009bf01fd004d000d03b1037f00
15001f0215b226341fb80214b2263f1fb80208b21ebb1f41190206001e08
01001f0205001f02ab001f0204001f02ab001f0203001f0401001f020100
31019a001f01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb2
26341f411501a8002602ab001f01a5001e0125001f01a400ab02ab001f01
a2003102ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109
019b00230401001f019a0033019a001f0176b2262e1fb8016cb231721f41
11016b0023019a001f016800240401001f014500260801001f013f002304
01001f0123b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b2
1ffa33b80801b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe4
31b80101400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b804
01b21fb731b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97
269e1f9333b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f75
23e41f7026cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401
b21f5324b80201b21f4f33b802abb21f4e26b8040140131f4731671f4626
ab1f4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23
b80401b21f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a
0007012b402e077f077107690766074b074007380736072d072207210714
08120810080e080c080a080808060804080208000814b8ffe0402b000001
001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b5342b0372b4bb807ff52b0382b4b
b009505b58b101018e59014bb0c063004b6220b0f65323b8010a515ab005
234201b0124b004b544218b0382bb00288b801005458b801ffb101018e85
1bb0124358b900010140858d1bb900010159858d59590016763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181d
b0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d027b
4544b9027c027b45445958b90146027d455258b9027d01464459594bb047
53205c58b9001e027c4544b90026027c45445958b9017f001e455258b900
1e017f4459594bb05e53205c58b9001f027d4544b90025027d45445958b9
01a8001f455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f
1f45445958b9047000ab455258b900ab04704459594bb8012553205c58b1
e61f4544b11f1f45445958b9051000e6455258b900e605104459594bb017
53205c58b124244544b1312445445958b12224455258b124224459594bb0
5153205c58b124244544b1232445445958b17d24455258b1247d4459594b
b06e53205c58b124244544b1332445445958b1aa24455258b124aa445959
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b10800425943
5c58b1080042591610703eb0124358b911b53d801bba011c03d9000b2b59
b00a2342b00b2342003f3f182b103c012f5d060cb0062342b0072342b012
4358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b9
2d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b
211bba01a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45
b02a60b8016b234459001845694445694418456944456944737373737575
7573737475757575752b4bb026534bb03d515a58b1262645b0196044592b
45186944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b004bb02a534bb03f515a58b1070745b04060445973732b2b45186944
2b2b752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b74752b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b
007373732b2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9
fff00381b112332b2b2b2b590173742b002b73752b2b732b2b2b2b2b7375
2b2b2b2b2b0000>
[15881 15773 15825 15945 16225 16185 13909 15369 16289 16301 17089 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> FXYAAA+TimesNewRoman,Italic AddT42Char 
1 3768 19 <0002007affe803f3056800120024008c404e35163b2048064a07491e4f1f
4c2054175a20641664176e1e6e1f6b20760f731674177e1f7b2082168517
8d20951691179e20a315a416a117ab1eaf20b902b415b216b417bd1ebf20
2413f900051cb80167401a0a0d19ab800d010d192522ab8003cf03df03ef
03ff0305031a26ba011d011600182b4e10f65d4ded4e10f45d4ded003fed
3fed3130015d013216151402070607062322263534371237361722060207
0215141633323736131211342602c480af82765e673c4f82af5867a06983
3a777f3a4b5a403d2b7352855a0568d6e7c6fe649777351ed6e8e5e7010e
8c5c345bfee0e3fed7d16867286c010501ab010b6f69>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 4030 20 <0001007d000003570568001b00ca401a071a015602670276027403bd0d05
080008101701170f04080f09b80138b308070106410b01380007001a01a3
0010020e002800190138001a01fd401300100f0103000828100f0fe60100
1401010019ba01f4001a030d40091b1b000508070c0001bb03280010001a
020bb31f0f010fb80327400b10011c2800100117011c0aba022801e30018
2b2b103c2b2b3c2b10c0012bf65de43cf53c003f3c3f3c10f4ed870e2e2b
7d10c42b11121739180010f5ed2bfc01f50010ed0110c00010ed0110c031
30015d5d0071010106151416170721373637363736371336373635342623
220727250357febe1c335e0afdfd0e521a2a152122e815020326211a370d
01510568fb9f632c2527072525020b121e2e770325490b141323280c245e
>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 4330 21 <00010020000003c00568001d00b540218f08860b9c08960aac08ab0cbf08
ba0cce08ce180aef03ea04eb16ef17040b0c1dbd01a3001900190177001c
013840151d031718041605021514130312060317041604010bb80202400c
09ab0f051918e60000010c0cbf0217000201f7001e00060121001d0202b2
121a1fba01f601ef00182b4e10f64de4ed10f6e4003f3c10fd3c3ffde412
173901111217391217392eedec0010fd0110c9b1060243545840090f030b
041f031b0404005d593130005d015d212135001336353426232207273636
33321615140706070601213236373302c3fd5d0204a64d80668d5b2333c4
7281b01f3081c4feb90154526a17282501c40101778368838710818fb17e
584b7591defedf443900>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 4610 22 <00010044ffe803a10568002e00cdb90014ffc04046111c3f5d2d6d2d7426
7d2d8e2d9a2da50aa918af2dbb02bb07b50ab918bf2d0e5e005f01026514
7514020502090f0c29030603160324149d2daa2dbe2df515070414141402
14ba038e000001f4b301010e22ba030e0028016cb21b0d0bbc0197000a02
020008016cb20e052bbc01210017030d00050121b64011012f110111bf01
9e0030000a01f4000b030f00010217b32f1f011fbc035d002f00c8035c00
182b10f65df4f4ed10f65d71edf4ed003ffdf4e43feded12392fede45d31
30005d717101715d2b013536373635342623220727363633321615140607
161615140606232227263534363332171e02333236353426260139f27756
644770572534a361769289a7686a90fb8a7e412b33251a1a107d46255a75
4faa02e51d256b4c694f678b0b74778d6c5caa432ba1717dfb892c1e2823
3208054617d17660965d>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 8512 36 <0002ff9c00000460056b0022002501914081031500160418032108220a23
0624070c23012f233f234f235f236f237e238e239a23bb23e720f6200b05
2105230524302133223024451d452255226d1d6422662476147522a822d4
15d521d723d62413262230143015311d0429002c1b2f1c2f1d042740193a
342640133a34132523121424232315212222200a120b1d0a1d2121b8021b
404a22211e1d1d0901081d091c151b1d1c23151523212214212122231223
15121e01001401010024251425231313092200031d1c1c0a0a0908032211
22022200232115142404122630150115b8ffc0b30b3a3415b80342b7237e
2240191b3422b8ffc0b30b3a3422b8033eb50040191b3400b8ffc0b30b3a
3400b80142400d0140103a340f012f014f010301b8034eb5268b23220020
ba035a035b00182b2b10f45d2bf42b2bf62b2bf4e62b5d11121739111239
5d003f3c103c103c3f3c12392fed3c103c870e2e2b087d10c4870e2e182b
047d10c4180010ed0110c00010ed0110c00010ed08ec0110c00010ed0110
c0070e103c0705103c3c073c3c3130012b2b5d5d5d005d00710171010306
151417161633072137333237363736373721070606151416170721373636
3701030121041f67080f13414d0bfdea0b1741291d100b0a10fe7c8a2f18
343c0bfe6f0b4a7170032aa3fe770155056bfb984f1928151d1c25251c13
2c1f73acbb3f3718202e022525035d98044efeb3fde9>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 9626 38 <0001008affe105a1056b0027008f40242410430b43105c06670b740a760b
771e86109610a700b600b40c0da612c61202060f0102b8014d4009082492
083327200315b80213b71164180900150115b8031eb2028801b80142b227
8800b8ffc0b4143900f40eb8037f40121c40474b341c4014399f1c011c65
28657d182b4e10f45d2b2b4de9fd2bedf4ede45d003ffde43f3cedec10e4
3130005d71015d010323272e032322070607061514163332363733060423
22242635341224333217163332363705a16524040524486e43b386ab6150
e6b88bd95d2f6efef4bba6ff0086ee019fd3637b361818242a056bfe496e
3c5e4527627de4bcc1c5eb7c81afa58bfc91de01a4f02f14142f>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 9892 39 <0002ffc3000005a3054c001a002d00dfb9001cffe8403311392f2b571b79
277a2b8b27b51e060d140e1d0d0115001d011b1c1c1e141514141415232e
0d2c2e01020d08142e2815141029ba037f0006ffc0b326173f06ba011700
2fffc040091339702f012f1bd41cba030100150345b4120f140114b80173
b62e091417142e0aba0173011500182b2b103c2b2b4e10f471435c58b900
14ff80b326173f14b8ff80b328183f14b8ff80400b2d173f144018391440
11392b2b2b2b2b59014de4fde44e105d2bf62b4de92b103c2b10c0003f3f
ed10ed870e2e2b057d10c4180010ed0110c00010ed0110c03130015d2b01
372120041215140e02042321373637363736371336353426230501061514
1617163332243736123534262322012c0c01b1011301099e5b73eefeead0
fdc20d4f1b28131d24f01c344c014dfeda2115121a3a9d010d567a92e0d7
350527257efef19b85fb97b65725020c111d2a7f03346137272a26fc0972
1b101e050941405d0146d0ebe500>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 12450 44 <0001ffc000000348054c001e0193b401220f3916b8ffde40400f133e001f
0f200255179913b31b038020010209031d020912011218131d120119001d
01110a101d111819191e090a1409090a121102020108091f280a091018bc
021300190301000a02134011120f091f092f097f098f09050980183909b8
ffc0b22b3509b8ffc0b73335094026273409b8ffc0401728358009c009d0
09e009f009050940113909400f113e09b80173b61f090917091f0aba0173
011300182b2b103c2b2b4e10f42b2b5d2b2b2b2b2b71435c584015094012
0b3f0940140c3f0940160d3f0940170e3f09b8ffc040091c113f09401e12
3f09b8ffc0b320133f09b8ff80b326173f09b8ff80b328183f09b8ffc0b3
0f1e3f09b8ffc0b2273909b8ffc0400915233f09800f193f09b8ffc0b30b
123f09b8ffc0b30b123e09b8ffc0b323123f09b8ff8040092d173f094028
143f09b8ffc0b114392b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5901
4de4fde42b103c2b10c0003f3c3f3c870e2e2b0e7d10c4180010ed0110c0
0010ed0110c00010ed0110c05d0010ed0110c03130015d5d712b2b250721
3736373637363713363534262623372107260706060703061514161601f9
0bfdd20e541b2c152123ec1e1a354d0c020c0b401f2d2f25eb2019372525
25020c111e2f79033266341a24132525010f144a7ffcce711f192313>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 6330 68 <00020030ffe803c103890026003501d940180920082135018401842a9501
981b932a982eac33b62b0b30b8ffde40170c143fa416a43102362a4a2002
0c2219350c0e2228340eb8ffde40392228343f174f175f17033d30010c40
2228340c401935b916d926e826030102040400161617252626150c0d1627
2f322625160431152c331d26b80395401300272422220007280004041f15
26141515262fb8ffdcb31e123f2fb8032e400d1a1a100b1536282615100d
8a0cbd014300040203001500000203b726ad15401e123f15b8ffc0400e23
25340015101530150390150115b8ff80b2533515bd0295002c0381001200
1dffc0b32e34341db8ffc040172627341d8053359f1def1d021d32361517
15360a32c3182b2b103c2b4e10f45d2b2b2b435c58b9001dffc0b350283f
1db8ffc0b332193f1db8ffc0b318283f1db8ffc0b315233f1db8ffc0b30f
193f1db8ffc0b31e123f1db8ffc0b313193f1db8ffc0b117392b2b2b2b2b
2b2b2b594de9f42b5d712b2bf4ed10fdf6ed2b103c2b10c0003f3c10ed2b
870e2e2b0e7d10c42b183f003c10ed10e401113911123911393911390011
12390110c9870e7d10c4083c870e10c4c43130015d002b2b5d72012b2b2b
5d004bb02a534bb03a515a58bf0035ffd40034ffd40028ffe80027ffe838
38383859005d2b015d010307061514171633323736371706062322263534
373706070623222635341237363332161737072207060215141633323736
35342603c1c316030a080c0d1527412245923e2b2b1615836e4f4c496abf
9373663d511524c54048669f442c6d80ab420389fd5a5b0d09100c09101d
5b18686d2b2931504bab4431796a9f01616a54404a721c3c55feb287444f
a1d6e1554c00>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 7346 70 <0001003cffe8036c03890028010d40460040170e3f2840170e3f2e002c01
2b272e283e003e013a053e273e288c028b218927ab02a424b51fb324101f
001a021a0419051a271f28068526017a278a27a621031605012ab8ffc0b2
11352ab8ffc0b216352ab8ffc0400e23359f28af2802280000280d1911b8
0104b41d240a0725b8ffdeb31b103f25b8ffdc40221e392527030b00c914
7019270d8053352f0d3f0d4f0d5f0d040f0d1f0d020d1a2a22b80381401e
068053353f064f065f066f06048006a006b006c006d006050619292b5618
2b4e10f45d712b4de94e10fe5d712b4dedede4003fed2b2b3feded011112
393910c95d3130012b2b2b715d004bb021534bb02e515a58bb001fffe800
1effe8383859007101715d2b2b2506062322263534122433321615140706
23222635343e0235342726232206070615141633323637031b68d4768e9f
ab01218b6d6c261c291f290f2f0a131d3562c0445274644d975eda7d75a0
87990128b95b423e2c22281e13202d140b150e148a7f9a9a66774d65>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 7734 71 <00020027ffe80454058e002f003b01c2409e071e011422190f3f0b401935
0a4019350b40363c340a40363c340b183435340b403233340a403235341b
0a1a0b690a690bdf0ade0b063f154f155f155533040b4019350a4019350b
40223a343635491e493b552e873596019b149a15a600b601b80ab51db434
b3350e540001260101f335010c18223a340a40223a340b40223a343d4025
353d402324343d401c3514141523242626136c0a010a0b2ffe26b801f340
26282e302f4d2314333930261b3a36231403130000280003002f031f1326
141313263324200739b8ffdab21e3939b8032e400b18180e0b133c282613
1000b80303b326af130bb8ffc0400a36350b40329e340b8a0ab8ffc0b736
350a40439e340ab80143400a03e42f95001310130213b8ff80b2533513ba
029500360381400e1b8053351b4025351b401d24341bb8ffc0b228351bb8
ffc040112e3434ef1b011b193c1317133c0a32a7182b2b103c2b10f65d2b
2b2b2b2be9f42b71e4fdf62b2bed2b2b10f4ed2b103c2b10c0003f3c10ed
2b3fed870e2e2b087d10c42b183f011112393912391112390011123939f5
ed2bfc01f510c95d870e103c3c087dc43130012b2b2b2b2b2b715d5d5d00
2b2b2b7201722b2b2b2b2b2b2b2b005d0101061514163332373637170606
232226353437370607062322263534123736333216171336373635342726
232207350334262322001514163332000454fea81c11090d122250224893
40222c1e279177524b4c71be9c7b67364e26620b070c0f152117351b4a39
7efeef422e68013a058efb64601e0a120d186015647c302c39607ce0563b
87749501526a552c33015c2516281a150e110725fd73404efe60be4b4f01
c200>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 8366 72 <00020040ffe803710389001a002500fe40360f100b251810182504000810
080212530851090228092a2538093b1e480749084909480a5b0857105525
9304a204a513b204b6251027b8ffc0403d263509221c113f0822120b3f08
090809051b0008091520008a1b40080a3e0d1b1d1b2f1b031b1b0b232412
0705270b0b203a0f151f1502151a27004902b8038140170e8053350e8028
503f0e401c113f9f0e010e19262bc3182b4e10f45d2b2b2b4df9e44e10f6
5d4ded003fed3fed12392f5d2bed011112393912390011393910c9313001
2b2b2b5d005d435c58b90009ffdeb3120b3f09b8ffdeb3110a3f08b8ffde
b3110a3f07b8ffdeb3090c3e08b8ffdeb2090c3e2b2b2b2b2b59005d015d
130615141633323637170623222635341224333216151407060706273637
3636353426232206f4077e5a48858315edd79294b80116936a664257a970
c4945d7b7b353166e501793221597d3b651debb86f950138ad563b534c63
3d291a11293799452a34d900>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 8738 73 <0001fe9ffe4603c9058e00430166b90003ffdeb35a2d3f03b8ffc0401355
2b3f06401741174239000412454028293423b8ffc0401a19233400401923
3445403235454016354540183545400e103445b8ffc0b10d35b106024354
58400c2104044544012340552b3f23b8016b40102424000633953d242d00
10951b24090f003ffde43ffde43f3c10fd2b3c011112392fcd1b402b2122
27271f03024342042324041f0243274204041f1f27141f1f2710951b3395
3d242d00012340552b3f23b8016b4013242400061b24090f1f4428271f10
363a393130b802feb217310db802034010301340130213ad441f171f440a
32db182b2b103c2b10f45dfdedfdeded2b103c2b10c0003fed3f3c10fd2b
3c3ffde410e4870e2e2b0e7d10c4011139391112393987c4c40ec4870510
c40e3c593130012b2b2b2b2b2b2b2b435c58b90004ffdeb3552b3f02b8ff
de401b552b3f04223c1e3f02403c143f22222d5a3f21222d5a3f45401339
2b2b2b2b2b2b2b59015d2b2b010723030207060706232227263534363332
161514070615141716333236363736371323373236363736373636333216
1514062322263534363534272623220706070607026312926e494a69795c
5c3c2a1f33251b2515100709132b5f4a210e3daeae0e5342372c3b364aa3
484c5c2e241f271a090d193f3243351b48037142fe4bfedf9edf55412419
28202f221616130e07090507366b652aeb02a542174159784259594d2d23
302419102f080e070a2835713bea>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 9292 74 <0003ffc9fe46042b0389002f003d004c010a40399243a112aa13ab16a343
ad47b012bf1ebb1fb3430a126a106a4b7910794b9a4bac4b06110f0f1f3e
4a143e3e4a0f113e4a043e211826398a08b80333b22c0002b80393401f2f
c633242c074524180f12111448022f04082630363e210c23019504483114
bd0332001c00300381000403314009290c3a236c29413a1cbc0124003603
810029ffc0b22a3529b8ffc0400f262834102901d0290129b94dcb4c182b
10f65d712b2be9f4ed10f4ed10fde910fded10e411123939111239391139
3911123939003fed3fedf4ed3c10fded391239391739870e2e2b0e7d10c4
3130005d435c58b54b220d163f0fb8ffdeb30d163f0fb8ffdeb30f103e10
b8ffdeb20f103e2b2b2b2b59015d01072316151407060706070615141617
171617161514060623222626353436373637263534363726263534363332
161707342623220615141633323e02010606151417163332363534262726
042b1da7137071c56a35142449c2a1343379e98d7ccc58392b1b7e2e5183
6e81f9cf4b602d4d594871935e4335634428fe2151533c56a68fcb4b6c3b
034b68362f8467670b202c10111421112d2634354552884d3b64352b5d1e
1347242b285a36158e578ee01e209d505ce37b4d623a669efd7525743842
2b3e614d2746160c>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 10282 76 <00020058ffe8022e0516000b002901244027176e3a3516763a35122b4012
352b40191b34590c0119230116172945215a282830294d0c007006b8039c
401a0c07280c0f0c290f1f1e21141e1e211b0b1e2a28211e10178a16b801
43b40f0970030cb80147b203600fb80123b7296c121e401b351eb8ffc0b3
3a3b341eb8ffc0b32a34341eb8ffc040092324341e401f20341eb8ffc040
13131634301e8f1e021e192a1e171e2a0a7786182b2b103c2b4e10f45d2b
2b2b2b2b2b435c58400b1e401c113f1e400d113f1eb8ffc0b3160d3f1eb8
ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b103c2b10c0003f870e
2e2b087d10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c
58b517400c143f0db8ffdeb61339172213390db8ffdeb50f3917400f392b
2b2b2b2b59012b2b01321615140623222635343613030615141633323736
371706070623222635343713363534262322073501ca2a3a3b29293b3a37
c614130d0f15393a23445c443e29341982201f1b164505163a2a293b3b29
2a3afe73fd43470e1014102d53176847353125255601c06e1c161c0b2700
>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 11682 79 <0001004fffe80261058e001d0129404a09000112001f011f401a35540054
1cef1ff917040a200b300b400b500b040b1d45155a281c301d4d00000003
001d031f1215141212150f0b121e28151210200b300b400b500b040b6c0a
ba01bb001d0124400c032512001201c012d0120212b8013b400a1e091217
121e0a774c182b2b103c2b2b10f65d71435c58b90012ffc0b3170e3f12b8
ffc0400932193f124028143f12b8ffc0b325163f12b8ffc0401323153f12
4021143f1240170e3f1240101b3f12b8ffc0b30f193f12b8ffc040090e17
3f12400d163f12b8ffc0b51839124016392b2b2b2b2b2b2b2b2b2b2b2b2b
5901ede4f4ec5d2b103c2b10c0003f870e2e2b087d10c400183ff5ed2bfc
01f500105dc93130015d2b0171435c58400b0b40170e3f0a40170e3f01b8
ffdeb123392b2b2b59015d01010615141633323736371706070623222635
34370136353426232207350261feaa19130e131634391e5f503b35263320
010f212628172f058efb5a59140f141129561f8635263422247003aa7311
181f0725>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 12076 80 <00010023ffe8056e038900530245408419010112382d0159095b0c5f0d57
145c385d3a5d3b5e3c5552681369166a2c790c79167a2c783c89038b2c8b
3c89439d039b0e9b369d43a701ab0da137a938af39af3aaf3bae3caa44a3
45b538b63ab648256b3668376a4403520059445252038936884498450365
397a36753a7b447648a339062801253927472f556f5405212253fe4bb801
1c4054285230534d000d3a070149410d0a3a01004b343111114131070753
c600071419191f2930142929300a3a3a1f3b3e143b3b3e00480053481f49
4b1449494b260b4948483b3b3a0a29542830293e3b4b4910228a21b80143
b319142530b80124400c192529400e356029df290229b80234b66f3a01af
3a013ab8020340153b4023353b401b1c346f3b013b500a010a253ead3bba
01c000480203b44bad52c949b8ffc0b2173949b8ffc0b2233549b8ffc0b2
1f3549b8ffc0b31b1c3449b8ffc0b2193549b8ffc0b32a2c3449b8ffc040
172f34346f49ef490249195429173b17491729540a3286182b2b103c2b2b
2b4e10f45d2b2b2b2b2b2b2b4de4e4edf4f4ed5d10712b2bed5d71f45d2b
edf4ed10f6ed2b103c103c103c2b10c0003f3c103c103c3f87052e2b087d
10c487052e182b0e7d10c4870e2e182b7d10c400183fe43c10ed3c10ed01
1112391112390011123911123910f5ed2bfc01f510c93130015d5d5d5d5d
5d0171435c5840110d180c393c180c3900220c394a180c3936b8ffc0b20f
390fb8ffdeb20f3904b8ffdeb20f3900b8ffc0b20f3953b8ffc0b20f3917
b8ffdeb613143e222213392b2b2b2b2b2b2b2b2b2b2b59005d0103363736
373633321615140707123736333216151407030615141716333237363717
0e0223222635343713363736353427262322070607060723133635342623
22070602070603231337363534262322072701bc82573d5f5a353a324217
47a392514f2e3b126e2409060a0a19393221197f5a26232f295b1f02030b
0c0f2a2f8a784f4597ab1c161021253cbd34195e94b91807281f0d3b0903
89fe3d9f507c38204032314ffe01317b443f423a41fe7b7f0e0e0a07132c
4815288c323023309101416f0c1312190e0e2b7fe597ec025d62211b1a18
27ff007537fed6028854130916230c25>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 12902 81 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 13466 82 <0002003cffe803b30389000d001900ad404108020903060a03a413ae18a0
1bb212b216be18065b18591985138c1895139d18a5120736133a19471349
19570856125413070a0c0c11240b070305051724040b14b8038140120780
4b5334078043358f079f070207191a0eb8038140270040170e3f00404b53
34004043350040323500401e350000200030004000a0000500c31b2bc318
2b4e10f65d2b2b2b2b2b4de94e10f45d2b2b4de9003fed3c103c3fed3c10
3c3130015d5d5d005d011402042322263534122433321607342623220215
141633321203b39ffee48689ada9011b8484aba65b4893f760498df70250
96fedaacaf8b930128acae465d63fe5bd05f6701a300>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 13728 83 <0002ff1efe4a03c80389002300320153404b55018d0c9d0cad0cbc0d0539
154b00460e4615482a5506650e750e791aac28b908bc29b92ac91a0e4322
5000560e0330003422400003010d2431320e0e00161a173016150e143015
23451bb801a7400e282230234d0024012f2601001b2fb8038d4022040400
0728000e00230e1f1a1b141a1a1b26240a0b16150e0f1a011a33281b1a10
2cba03810007ffc0b22e3507b8ffc0b2293507b8ffc0b2273507b8ffc040
15203507401f354f0701400750077007a007c0070507ba033b0000032bb4
1b2323b81ab8ffc0b732351a401e123f1ab8ffc040121c351a401b1d34ef
1a011b19331a171a330ab8033ab156182b2b103c2b10f45d2b2b2b2b7ae8
182f10edfd5d712b2b2b2b2be92b103c2b10c071003f3c3fed870e2e2b08
7d10c42b183f003c10ed01111239001112393910f5ed2bfc01f50010ed01
10c00010ed0110c0870e103c3c3c3c7dc43130015d5d5d005d0107363633
321615140023222627030615141616330721373636371336353426232207
35131633323e033534262322060701c5456dab59597efe9aee324d304916
17344d09fe290a5d4124fd171f201d346e3e69346c67524149316cd33103
89e680668d71dcfe39161cfefe4c17161f11252504387f036c53141b1e07
27fd134a3a7295ca635055f8a600>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 14702 85 <00010026000003390389002900f9404102180c3921180c39510155035e09
5e0a5229aa03ac0faa18a51a09851a951aff2b0389049904021e1f1f0100
4521ea282930004d01021420021f0201212f0d010db8019f402214250606
010728011f01001f1f202114202021201f0a282120103009400950090309
ba0240001f0203b229c920b8ffc0402e17392040343d3420402c35204024
352040223520401f203420401c1d3400200100209f20bf20d020ef20ff20
0620b80188b52b2017324c182b2b10f45d712b2b2b2b2b2b2be4fde45d2b
103c2b3f3c87052e2b087d10c42b183f003c10fde45d0111123911390011
123910f5ed2bfc01f5870e7d10c43130005d015d5d2b2b13250312373633
321615140706232226272627262322070607060706070607072313363534
272623220767015990af8f5133212622182d1721040207080b110f1a3553
612a1e2a062099b9200f14211538035138fe1a012b77442725423c2d1e1f
130608080e40629c425372177e026d6c2e120c100900>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 15084 86 <0001ffedffe802e70389003000b7402432010117221b103f080b040f180b
150f3a2705280b230f9903032f013f014f015f010401b80104400a2ec600
30070524290719b801b5403415c618170b1d24110b028a00c60140120b3f
50010101c90e3ad020e020f020037f208f209f20c0200420a0083a26951a
8a19c618b8ffc040133435184030351840212234a018c01802187c31ba01
44016400182b10f55d2b2b2bf4edf4edf45d5dfdf45d2be4ed003fed3f3c
e4ed3fed3f3ce4ed5d3130015d5d2b005d01032326262322061514161716
161514062322272623220723133316163332363534272e02353436333217
161633323702e73d2505684d3e491d31824cad84485e21122d17253d2506
72634c59101cb3338d6f201a0e67112b1d0389fecd867a4430213c368e90
4068a1220c2e0144987e553e28223cd46a3561860503272f>FXYAAA+TimesNewRoman,Italic AddT42Char 
2 15408 87 <00010057ffe802660481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702174e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>FXYAAA+TimesNewRoman,Italic AddT42Char 
3 0 88 <0001003cffe803c40389003c01974084083a193a021235314731543c6a16
79157a16ac15c500fa1509552e543b6a09034b1554005a150336003c1502
2128293902ab090139263f284f285f28f515f616f53907143b3c3c13090a
262738393a16170533153c1326271b3d2e33331f1b20141b1b202b073c00
060003031f133c1413133c180e0b1b133d28201b3c13100a8a096003b802
03401b3cad134043351340181934134015351f134f135f138f139f130513
b80234400c33251b402e012e252095121bb8ffc0b23a351bb8ffc0b31819
341bb8ffc0b31415341bb8ffc0b32c34341bb8ffc04019232834301b401b
a01b031b193d091b1713171b133d0a77c3182b2b103c3c2b2b2b4e10f45d
2b2b2b2b2b435c58b51b4023123f1bb8ffc0b3120b3f1bb8ffc0b116392b
2b2b59014df4ed5d10edf45d2b2b2be4edf4ed2b103c103c2b10c0c0003f
3c870e2e2b057d10c400183f3c3f870e2e2b0e7d10c40111123939111239
12173910c910c9870e103cc43130005d01715d5d5d5d5d435c5840181518
0b3915180c3900220c393b220c3930220c391e220c392b2b2b2b2b2b5901
5d0103061514163332363717060706232226353437363702062322263534
3713363534262322060727363736333216151407030615141633323e0237
3703c4ae270d0b1129531e4f533733272c0d104baae5622e402c5720110a
152a4a1f4b544036252f285e271915216ab17341160371fdac852312111f
6c177d3b262c2322384af8fee9d440314b9b01356f1b0c111e601674372b
2f25368bfebd8423131742e3c7d94c00>FXYAAA+TimesNewRoman,Italic AddT42Char 
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>FXYAAA+TimesNewRoman,Italic AddT42Char 
FXYAAA+TimesNewRoman,Italic /CharStrings get begin
/space 3 def
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/A 36 def
/C 38 def
/D 39 def
/I 44 def
/a 68 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/g 74 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
end
FXYAAA+TimesNewRoman,Italic /Encoding get
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/PHVJGF+TimesNewRoman,Italic /FXYAAA+TimesNewRoman,Italic findfont ct_VMDictPut
/PHVJGF+TimesNewRoman,Italic*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three 13{/.notdef}rp 
/A /.notdef /C /D 4{/.notdef}rp /I 23{/.notdef}rp /a 
/.notdef /c /d /e /f /g /.notdef /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u 138{/.notdef}rp]
PHVJGF+TimesNewRoman,Italic nf
PHVJGF+TimesNewRoman,Italic*1 [9 0 0 -9 0 0 ]msf
90.0578 11.007 mo
(2011 )sh
110.308 11.007 mo
(3rd )
[4.5 3.50107 4.5 0 ]xsh
125.06 11.007 mo
(Int)sh
135.059 11.007 mo
(ernational )
[3.996 3.50107 4.5 4.5 2.502 2.502 4.5 4.5 4.5 2.502 0 ]xsh
174.807 11.007 mo
(Conf)sh
192.312 11.007 mo
(erence )
[3.996 3.50107 3.996 4.5 3.996 3.996 0 ]xsh
218.541 11.007 mo
(on )sh
229.791 11.007 mo
(Com)sh
246.792 11.007 mo
(put)sh
258.294 11.007 mo
(er )
[3.99603 3.50104 0 ]xsh
268.041 11.007 mo
(Design )
[6.49799 3.99603 3.50104 2.50201 4.5 4.5 0 ]xsh
295.788 11.007 mo
(and )sh
311.538 11.007 mo
(Applications)
[5.49893 4.5 4.5 2.50198 2.50201 3.996 4.5 2.50198 2.50201 4.5 4.5 0 
]xsh
%%IncludeResource: font AdobeSongStd-Light-Adobe-GB1-1
/PHVJGG+AdobeSongStd-Light-Adobe-GB1-1 (Adobe-GB1-1) /Adobe-GB1 [/Default] /AdobeSongStd-Light-Adobe-GB1-1 /AdobeSongStd-Light-Adobe-GB1-1  ?set
/PHVJGG+AdobeSongStd-Light-Adobe-GB1-1  findfont [9 0 0 -9 0 0 ]msf
357.035 11.007 mo
(\001\015)sh
PHVJGF+TimesNewRoman,Italic*1 [9 0 0 -9 0 0 ]msf
366.035 11.007 mo
(ICCD)sh
387.536 11.007 mo
(A )
[5.49893 0 ]xsh
395.285 11.007 mo
(2011)sh
%%IncludeResource: font AdobeSongStd-Light-Adobe-GB1-1
/PHVJGG+AdobeSongStd-Light-Adobe-GB1-1  findfont [9 0 0 -9 0 0 ]msf
413.285 11.007 mo
(\001\016)sh
%ADOBeginSubsetFont: FLEAAA+TimesNewRoman Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /FLEAAA+TimesNewRoman
Type42DictBegin
[<00010000000c000c000c000c4f532f3210732def000000cc000000566376
7420f32cda8100000124000007c66670676dc3a61d01000008ec00000631
676c796660978a9e00006fd0000485d668656164cf5b1d8300000f200000
00366868656112ef12f600000f5800000024686d7478b14216ca00000f7c
00001a286c6f63611181f1ae000029a400001a2c6d6178700d0110ae0000
43d0000000206e616d650035b207000043f000001cc970726570e43894a4
000060bc00000f1367646972000000000000000000000000000103350190
00050000059a053300000125059a0533000003a000660212010502020603
05040502030400007a878000000000000008000000004d6f6e6f00400020
fffc058cfe460133072101bb400001ffffff00000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000ad000000ad0000000000250096009f002400f0013100c2
00c0004a00a6004100500094004700cf00af000e007901cb000400230044
00a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a0043
00ae00ba016c0153002f00430048022c012b0025008fffc000170028ffcd
ffd80025009d00e50124ffb10048009d00e600110027007f00910012006a
00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b
00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe7
00be04010065007f00820088009900b200c0022e034305a000200026003d
004e00610065007b00d9011301310340ff27ff42ff99004e00a700f2022b
02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b9
013101310217021700020017002900550080008f00a500b200b300d0014b
015901c001c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c1
00e400f40130015901ab01ab03220374041e04740532fd81004d0064009c
00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe5
00000008001f00380051005a006f0076007700a200c000c200c400f101fb
0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064
008b00ae00b200b800b800d600f50111012001310138014e01520167018f
019601b801d901d902060221027102ea03b003cb03dc04360505ff3a0012
0016001e001f002300570068006c007e0088009200a500a800c500c90115
0126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef01160120
0129016a017301e3027e029002b4030e0310032303350341035403590388
039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff840000
00010006001e0027002c0034003700620066006a006b006c007000700072
007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f4
0100012101300169016a016d017c0185018e018e019901ac01c101c501c9
01e101f601f601f60222022202280236023f024302460267028502850294
02d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1a
fe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a1
00a500a500aa00af00b600c600cc00d700dd00ec00f20102010501170118
0123012a012c0131013f014701490149014d01510151015501550157015a
015a0161016201680168017f0180018201830184018d0195019501950198
019901a501a901b601b601b701ba01ba01d501df01e601ea01f202000200
0203021702250227022f0239024302430247024f025202520267026f026f
027002720276027e02a702b302b902d603130325032d03610371039903ae
03c203d403f90402042c042f043c04560467048304cf04d104d804fb051f
05450568059e05c2061b06340655066a069806af06e806fc070607500762
077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e
03d2056601f0032001da018a0369036bffa3034602f8036f015602bf0122
031f053a0366008c00ff01ab02e102f402e70415015402e90128049101b7
026f034302060000000005d30415048305e8000002d7003a027d01c002c5
03830383ffbd003a059e01df059e02d1002004e0021300df01c001870297
000000ce0269028b0058043405fb0069015a01a905780182013e0288012a
03d4049e00e5032302f301f00196007a00cd014a0424025e023901ab00cf
00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a005900000000012602150150
02f0025503bc06d00335010100d000d2007a01030130007c000000000000
000000fe006e006600940227002b0045004d00d3013200180097004100f4
febcffe9001605d8058b009100a1032c00520030005d02cb003a009200e5
00e500580086003200ba0099008800300298007cff8001640028004d0065
000200b8016a002f010b001100170100007f00040016022200a6005f0000
00f8000a00ca0043004b01ee0077012000f401c00028045f0000008c0445
00c20060007b008b008b0064005d00c2009c009206b505d3004f01170000
0420fe9e00cc00dc005e004600e30032001a003c0091005a00a1042c0041
002000490071009c009cfe4800400040008600cb0102007d003a003e006a
0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb2003600870559
0256052b043400de00c901c4004800db018b00b3004800da011601250118
00ea00ea00ae0000003e05bb008a04d70053003fff8cffd5001500280022
00990062004a00e4006d00ee00e5004803c00033fe4e02b1ff4603700079
05df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a5
0025000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b09051582320b00d
44235921212d2c20204518684420b001602045b04676688a4560442d2c01
b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01
b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045
b00325456164b050515845441b2121592d2cb00143632362b0002342b00f
2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112b
b0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112b
b0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112b
b0172344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c
482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212110592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b
53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a
8a462320468a608a61b8ff8062232010238ab9035803588a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1230188
51b1400188535a58b910000020885458b202010243604259b12401885158
b920000040885458b2020202436042b12401885458b2022002436042004b
014b5258b2020802436042591bb940000080885458b202040243604259b9
4000008063b80100885458b202080243604259b94000010063b802008854
58b202100243604259b94000020063b80400885458b20240024360425959
5959592d2cb0024354584b53234b515a58381b2121591b21212121592d00
000000010000000300001baaf9b55f0f3cf50819080000000000a2e31dc2
00000000b9d5b528fb74fd8c1000080e0000000900010001000000000001
00000721fe4500571000fb74fe2610000001000000000000000000000000
0000068a0639011c00000000020000000200000002aa00e4034400850400
00250400006c06aa00480639004b0171005102aa005402aa002e04000091
048300250200006e02aa005302000091023900030400004a040000f00400
002c040000530400002004000062040000580400004c0400007c04000051
023900b00239008e048300250483002504830025038d005c075e006105c7
0010055600220556004a05c7002304e3002a0473002105c7004805c70023
02aa0033031d002a05c7002204e30029071d002205c7ffe505c700480473
002205c70048055600230473008004e3003e05c7000b05c70012078d001b
05c7000f05c7001304e3001a02aa00a80239000302aa004b03c100250400
ffef02aa0076038d00490400fffb038d004604000044038d004c02aa004f
0400003d0400000d0239003c0239ff63040000110239003d063900110400
000c040000450400fff90400004402aa000d031d00640239001404000002
0400001105c7000d0400001b0400000c038d002903d7011b019a00a103d7
00b10454001405c7000e05c7000e0556004a04e3002a05c7ffe505c70048
05c7000b038d0049038d0049038d0049038d0049038d0049038d0049038d
0046038d004c038d004c038d004c038d004c0239003c0239003c0239000d
023900020400000c04000045040000450400004504000045040000450400
00020400000204000002040000020400006503330062040000810400003d
0400009c02cd007003a0fff204000023061400450614004507d7001e02aa
00ec02aa003904640019071dffe805c7004905b400350464000804640018
0464001804000002049c008603f4004005b4002b0696002e0464003e0231
00000235fffa027b001d062500470556004904000027038d005902aa00e4
0483002404640053040000020464001e04e5001a04000040040000400800
00e605c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed
038d0043038d004302aa00b902aa00c10464001703f4002f0400000c05c7
00130156feab0400ffe902aa007702aa007304730019047300170400008b
0200009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3
002a04e3002a02aa003302aa003202aa003202aa003205c7004805c70048
05c7004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa
001702aa003702aa00e902aa009602aa00bb02aa004e02aa009402aa003c
04e300160239001e0473007e031d006404e3001a038d0029019a00a105c7
00230400004405c700130400000c047300240400fff904830025048300a5
02660088026600140266002c06000086060000860600002a0400002105c7
00480400003d02aa003304730080031d00640556004a038d00460556004a
038d0046040000260400ffef02aa01ef05c70010038d004905c70010038d
004905c70023052c004405c7002304e3002a038d004c04e3002a038d004c
04e300290239003d04e300290340003c04e3002902c0003605c7ffe50400
000c05c7ffe50400000c05c70048040000450556002302aa000d05560023
02aa000d04730080031d006404e3003e0239001404e3003e036b001305c7
000b0400000205c7000b0400000204e3001a038d002904e3001a038d0029
04a0002505c7004c05d900470431005703c50046035c0047045000460337
000c049e00450400ffef049500e40285000207c0002c0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00483
002604cd00990483002604d5022204d5010505abffe905ab027e05ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f04150040040000250600005505ab002f046b003b04d5
000301c00089035500a206ab003403d5006404d5009202d6008302d60083
04d500b202d6007005c70010038d00490556004a038d00460556004a038d
004604e3002a038d004c04e3002a038d004c04e3002a038d004c05c70048
0400003d05c700480400003d05c700480400003d05c700230400000d05c7
00230400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe
02aa003302390039031d002a0239ff6305c70022040000110400001104e3
00290239003d05c7ffe50400000c059d002603f5000c05c7004804000045
05c70048040000450556002302aa000d04730080031d006404e3003b0239
001005c7000b0400000205c7000b0400000205c7000b0400000205c7000e
04000002078d001b05c7000d05c700130400000c0239001605c7000f038d
0049071dffe80556004905c7004904000027023900b2078d001b05c7000d
078d001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aa
ffdb0400003d04cd005a060000860600002a060000310600002502aa00c3
02aa00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7
ffb60687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a
04e3001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525
004f05c7004805c700250473002204a8002004e3003e05c7001305c7000f
05e7001805f2003c02aa003205c7001304310057035c0047042f000b0227
002503f6fffa0412006e0389000003500046042f000b03d5005102270025
0408001503e10019044a0074039effd3039100460400004503fe0059032b
004603f6fffa038d00180502001c0544004b0227000003f6fffa04000045
03f6fffa0544004b04e3002a0604003704a000250548004b0473008002aa
003302aa0032031d002a06fa000d06fa002705ee00360556002505aa001a
05c7002505c70010049800240556002204a000250575001a04e3002a072b
00120402002b05c7002505c7002505560025056d0012071d002205c70023
05c7004805c70025047300220556004a04e3003e05aa001a0652004c05c7
000f05c700250533fffa081200390812003905a6003606fa002504980024
0548003a083900260556ffee038d00490412004e03c700300348001f0412
001a038d004c05870017032900180448002e0448002e03e3002e03fe000c
0510002e0448002e040000450448002e0400fff9038d0046037f000c0400
000c052f00570400001b0448002e0406001e0629002e0629002e0423000c
0560002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348
001f036f0046031d00640239003c023900020239ff6305d1000c05c9002d
0400000d03e3002e0400000c0448002e039a002502cf001f0800004107a2
0010040a000d02aa010102aa001c02aa003202aa001202aa010202aa008f
02aa008f02aa008f02aa009002aa010202aa001c02aa010202aa012102d9
005602aa008f025400e002be02af02beff6b023900b003da005f03a40033
02af0021035a004303c5004e023b0043024a004e03d0005803ce00430222
0043039e0043037600330374000f040f006403e2004e0232004302700021
03cd005f03a2004303a200430386005803dc004303ae003d03ca006903c0
004304e200430400002104750043045d00430444004301ac006b02f9006b
06360096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e2
004304e2004304e2004304e2004303da005f03da005f03da005f03a40033
02af0021035a004303c5004e023b00430279000c03ce004302220043039e
0043037600330374000f03e2004e0270002103cd005f03a2004303860058
03ae003d03ca006903c0004304e2004304000021023b004303a400330376
0033038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab
028d00a002da0043034d007901a8ffba019c004601e50046019c0046019c
004601ad0048019c004601b10046015100460435017c0435012e043500b7
043500810435012c043500be043500af043500810435009a043500db0435
0085028d00c1043500b3060001000600010002420036060001000435009e
04350098043500cb060001000600010006000100060001000600010001b1
004606000100060001000600010006000100060001000600010006000100
06000100051bffba06000100060001000600010005b5003a05b5003a01f4
ffba01f4ffba060001000600010006000100060001000481003604350036
043dffba043dffba03e9004a03e9004a067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba051b003204b5002406000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
01cf003001b1004601b1004601b1004001b1004606000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000400001b080000000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc
01a8005601d60010037500320375003201a8002d01d60013051b003204b5
002401f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba
01f4ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e
06c5ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a
039a00360435ffba0327ffba064f0027064f00270224ffba021affba04a7
004604a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba
040d0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba024200360300fff7039affba
0327ffba0375003203750032051b003204b50024051b003204b5002401f4
ffba01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041
045a005304ce00410600010006000100019c0046019c0046060001000600
0100060001000151004601b10046060001000600010001ad004801e50046
06000100060001000600010001b1004601b1004601b1004601b1004601b1
004001cf003006000100019c0046019c0046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100028d00ca028d
00c7028d00c6060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000100ffba0800ffba1000ffba05c70048043b
00450635000b045600020000fdcc0000fc140000fd130000fe420000fce0
0000fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000
fcfe0000feff0000ff030000fe9e041a00a206000088060000140000fe70
0000fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000
fb740000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae
0000fc440000fe140000fe700000fd910000fc710000fdc30000fe470000
fe620000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a
0000fc620000fc090000fbd70239003c05c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004905c70010038d004905c7
0010038d004905c70010038d004905c70010038d004904e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d
004c04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa0033
0239003c02aa00330239003c05c700480400004505c700480400004505c7
00480400004505c700480400004505c700480400004505c7004804000045
05c700480400004505c70048043b004505c70048043b004505c70048043b
004505c70048043b004505c70048043b004505c7000b0400000205c7000b
040000020635000b045600020635000b045600020635000b045600020635
000b045600020635000b0456000205c700130400000c05c700130400000c
05c700130400000c05c70010038d004902aa00330239000605c700480400
004505c7000b0400000205c7000b0400000205c7000b0400000205c7000b
0400000205c7000b040000020000ff090000ff090000ff090000ff0904a0
00230348001f072b0012058700170556002503e3002e0556002503e3002e
05c700230448002e05c700130400000205c700130400000205c7000f0400
001b0533fffa0406001e053300250400000d05c7002b038d004c05c70048
0400004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4
001001f4001b01f4001001f4006b01f4fff90227ffce01a8000f01a8fff5
02aa00a402aa00a401a8000e01a8005601a800560000ffcf01a8000f01d6
ffbf01a8fff501d6ffcd01a8001d01d6fff501a8009301d6001303750032
037500320375003203750032051b003204b5002405b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3
005f02b3005f02b3005f02b3005f02b3003802b3003802b3004902b30049
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7
ffba045a002a039a00360435ffba0327ffba064f0027064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba04a7004604a7004604a7004604a70046067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327
ffba04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047
040d004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba0435
0045043500450435004504350045043500450435004501f4ffba01f4ffba
04350045043500450481003604350036043dffba043dffba024200360300
fff7031a001a031a001a031a001a03750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032051bffba04b5ffba051b0032
04b5002401f4ffba01f4ffba0375003203750032051b003204b5002401f4
ffba01f4ffba051b003204b50024067f0045067f0045067f0045067f0045
01a800280000fe290000fea20000ff300000ff1d0000ff120000ff920000
fe7e08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e
0000ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000
ff580000ff640692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b4
00230242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b1
01f4006d067f001407760014022200430000fee702bc000004440043045a
fff504cefff5045a005304ce0041045a005304ce0041045a005304ce0041
045a005304ce0041045a005304ce0041045a005304ce0041043500710435
00ad045a000f04ce000f0000000000000076000000760000007600000076
0000013000000228000003f60000062e0000083a00000a6e00000af20000
0b7600000bf800000dd000000ea000000f3e00000f9800000ff000001062
0000119400001278000014480000162600001738000018c400001a3e0000
1b3400001d4800001ece00001f5e0000202c0000214a000021ec0000231c
0000248c0000276e000029f600002d1a00002e9400003006000031d80000
338800003582000037bc000038de00003a3200003da800003ebe0000411a
00004354000044700000466a000047f200004a9200004d8c00004ee20000
50ea0000536c0000574200005b3a00005da000005eea00005f9200006014
000060be000061a6000061e200006238000066320000687600006ad40000
6da6000071860000740a000078a200007bd200007e88000080ca00008534
0000871000008bda00008f42000091ae0000947a000096d4000099040000
9dc80000a01e0000a2c20000a5f00000aa520000aeec0000b1aa0000b3a6
0000b49a0000b5080000b5fa0000b6b80000b7080000b73a0000b7860000
b7bc0000b7f80000b82e0000b8780000b8ae0000b8ee0000b9360000b976
0000b9a40000b9da0000ba060000ba3a0000ba760000bab80000baee0000
bb280000bb580000bb900000bbc80000bc040000bc3c0000bc6e0000bcac
0000bce80000bd260000bd600000bd960000bddc0000be200000bf7c0000
c0540000c24a0000c4b40000c71c0000c7780000c8140000c9b00000ccc8
0000ceca0000d1360000d18e0000d2240000d3880000d5a40000d7480000
d89c0000d99e0000dada0000dc360000de6c0000dfee0000e1160000e1f0
0000e2da0000e4040000e4ea0000e6800000e76e0000e9020000ec6c0000
ee8e0000efea0000f0920000f0ea0000f1b00000f3320000f49a0000f548
0000f5e00000f67c0000f77e0000f7ba0000f7f80000f82e0000fa6e0000
fe020000fe3a0000fe720000ff780000ff9e0001004a000100ec000101d0
000102e20001032c0001035e000103ba0001052000010584000105e40001
084800010a7000010d0a00010d5a00010d7c00010e9000011168000111b0
000112040001124200011282000112b2000112e60001133a000113800001
13b2000113e60001141e0001145000011480000114c6000114f600011664
000116e0000117a2000117de0001185a000118b4000119ce00011aa40001
1b4200011bc600011c3000011da800011fae00011fec0001202a00012062
000120ac0001213000012276000124ba000124ea0001252c000126a80001
289c000128e200012a0400012abc00012bda00012d0000012efe0001308e
0001327c000134400001347a000134b6000134e60001352c000135800001
35bc000135fc000136380001366c000139100001394e000139b8000139f6
00013a3800013a6600013aae00013ae600013d9400013ebe00013eea0001
3f1c00013f5400013f9200013fc200013ff600014124000142c8000142fc
0001433000014366000143a4000143e600014422000144540001449a0001
44d0000145060001454400014578000145bc000145f8000147680001497a
000149be00014c0a00014c4c00014c7e00014cb600014ce800014d180001
4d4e00014d8e00014dce00014e7000015038000151c0000152d000015472
000155d6000156c0000157cc00015932000159a4000159d800015b240001
5e4600015ef200015fb600016064000161220001623e00016356000164b2
0001650e0001664a000167300001680e0001686c000168f0000169760001
69b8000169f400016a4400016a9400016ae400016b3600016b9600016bf6
00016c5800016cbe00016d4800016db000016e1600016e8c00016f020001
6f90000170060001707a000171060001717c000171f600017284000172fc
00017372000174000001748400017508000175c60001764e000176de0001
779800017826000178b00001796e000179fe00017a8a00017b4800017c22
00017d0200017e2400017e6800017ea400017ee200017f2600017f6a0001
839200018b260001925400019290000192ce000193140001935c000193a2
000193e8000194d00001955800019626000197d20001993400019b6c0001
9c5a00019d8400019e7e00019f960001a0340001a0b80001a1660001a234
0001a28e0001a33c0001a3be0001a42a0001a45e0001a5e80001a7420001
a7ba0001a8080001a8880001a8ec0001a9720001a9ae0001a9e00001aa16
0001aa540001aa960001aac40001ab080001ab360001ab700001ab9e0001
abd60001ac040001ac500001ac980001acd80001ad080001ad340001ad6a
0001ad9a0001add00001afbe0001b2720001b2a20001b2ec0001b31e0001
b3640001b3940001b3ce0001b3fa0001b4280001b4660001b6080001b63e
0001b66e0001b8900001b8b60001b9060001b9300001b9600001baaa0001
bc4e0001bc840001bcba0001bcee0001bd320001bd580001bd880001bdb8
0001bdea0001bf420001c12e0001c15e0001c1920001c1c40001c1f80001
c2280001c2580001c2860001c2b40001c2e40001c3180001c3480001c378
0001c4660001c4a60001c4e60001c5160001c5460001c5760001c5a60001
c5f00001c6200001c6500001c6800001c6b00001c6e40001c7180001c74e
0001c7880001c7fe0001c8380001ca100001cade0001cce80001cf680001
d1b60001d3bc0001d4360001d4d00001d4e00001d5f40001d6200001d7a2
0001d9080001d9ca0001da040001db780001dbb20001dbee0001dbfe0001
dc0e0001dd260001dd360001dd460001dd560001dd660001dd760001dee0
0001def00001df000001e0840001e0940001e19a0001e1aa0001e2b20001
e2c20001e2d20001e2e20001e4500001e60a0001e63e0001e6700001e6a0
0001e6d00001e7000001e72e0001e7640001e9000001e9f60001eb960001
ecbc0001edee0001eeec0001f09a0001f1dc0001f3420001f4480001f642
0001f6520001f7ac0001f8fa0001fa1a0001fb9e0001fd2a0001febc0001
fef40001ff2a0001ff620001ff920001ffc20001fff60002016800020198
000202be000202ce000202de000203120002032200020488000206640002
07f20002082200020a0200020b6000020b7000020c9200020ca200020d44
00020e7200020e820002112a000212c60002143e0002161e000217980002
188a0002189a000218aa000218ba000218ca000218da000218ea000218fa
00021a6400021c1200021c2200021d5600021ea60002208e0002229a0002
23d60002254e0002264600022680000227c2000227f2000228020002296e
00022b0a00022bf000022d6600022d760002303e0002319e0002337e0002
35d4000237e60002394a00023b9200023d3e00023d4e00023eb000023ec0
00023ed000023fda00023fea00024202000242120002439e000245160002
46f80002491000024a9200024c8a00024dcc00024e0600024fc00002516e
000251b4000253c4000253f2000255340002554400025554000255900002
55a00002577e0002599400025bdc00025c0c00025e7800026018000260b6
00026194000261da0002639800026522000265c000026728000267f00002
69140002696a00026a0400026af000026b2400026bca00026c2000026d1e
00026d7400026db400026df600026e3200026e6400026eae00026ef60002
6f7e0002716e0002724400027352000274280002754e000275e2000276b0
000277d20002795e000279f800027ab200027b6600027c9800027d7c0002
7eca00027f780002805200028142000282fa0002841000028536000286ee
000288b8000289f800028aa200028cc000028de200028efe000290240002
914a000291a4000292540002938c000293be000294040002945200029496
0002950600029684000296b2000296e00002970e0002973c0002976a0002
979800029a4000029a7800029ac600029b0400029b5000029bb000029cba
00029cee00029df000029e2800029e6200029ea800029eec00029f300002
9f5e0002a0f80002a2a00002a2e60002a33c0002a3740002a5fc0002a630
0002a65e0002a68c0002a6b80002a6ea0002a9340002a95e0002aa7a0002
ab2c0002abd80002ac5a0002ad160002ae2e0002af3c0002af700002aff6
0002b1520002b1d40002b21e0002b3280002b3700002b4740002b4f00002
b5480002b5ca0002b6b60002b7cc0002b8ba0002b9640002ba640002bb44
0002bc340002bd1c0002bdcc0002be4e0002c0ac0002c0d60002c1000002
c1b80002c1e20002c3240002c42a0002c5140002c53e0002c5680002c592
0002c5bc0002c5e60002c7660002c7900002c7ba0002c7e40002c80e0002
c8380002c8620002c88c0002c8b60002c8ea0002c9140002c93e0002c968
0002cae20002caf20002cc0c0002cc1c0002cc460002cc700002cc9a0002
ccc40002ce6c0002d07c0002d1aa0002d1ba0002d3360002d3460002d48c
0002d6580002d75e0002d8de0002da860002dcb20002de140002dffe0002
e1420002e2700002e29a0002e2c40002e2ee0002e3180002e3420002e36c
0002e3960002e3c00002e3ea0002e4140002e43e0002e4680002e4920002
e4bc0002e4e60002e5100002e74c0002e8c80002ea0c0002ebf40002ed3c
0002ed660002ed900002edba0002ede40002ee0e0002ee380002ee620002
ee8c0002eeb60002eee00002ef0a0002ef340002ef5e0002ef880002efb2
0002efdc0002f0060002f0300002f26c0002f5b20002f5dc0002f6060002
f6300002f65a0002f6840002f6ae0002f6d80002f7020002f72c0002f756
0002f7800002f7aa0002f7d40002f7fe0002f8280002f8520002f87c0002
f8a60002f8d00002f8fa0002f9240002f94e0002f9780002f9a20002f9cc
0002f9f60002fa200002fa4a0002fae40002fafa0002fb240002fe040002
fe140002ff2e000300500003018e000302d00003047600030486000305c8
000307180003090800030adc00030bf400030c0400030c8600030d140003
0e1400030e2400030ec400030ed400030fea0003113e0003126e0003127e
0003134c0003135c000314d2000314e2000315f6000316060003173a0003
18d00003198c0003199c00031a9a00031bf400031c8000031c9000031dba
00031f460003200200032012000320aa000320ba00032186000321960003
226e0003227e00032386000323960003255c0003256c000326c4000326d4
0003293e0003294e00032b4800032b5800032cc200032cd200032dc20003
2dd200032f6a00032f7a00033098000330a8000331e8000331f800033208
0003321800033390000333a0000333b0000333c000033512000336620003
3730000338140003399400033b1800033c1800033d2c00033e7000033e80
00033f6e00034048000341e4000341f40003431200034418000346100003
462000034630000346400003478a0003479a000348520003486200034970
0003498000034a6c00034a7c00034b9a00034baa00034c4800034c580003
4c6800034d5600034eca00034ff6000350f0000351000003511000035120
000352be000354780003554600035556000357b600035a0000035c860003
5eee00036174000363ea000365ba000367740003679e000367c8000367d8
000367e8000368120003683c000368660003687600036886000368b00003
68da000368ea000368fa000369240003694e000369780003698800036998
000369a8000369b8000369c8000369d800036a0200036a1200036a220003
6a4c00036a7600036aa000036aca00036af400036b1e00036b4800036b72
00036b9c00036bc600036bf000036c1a00036c4400036c6e00036c980003
6cc200036cec00036d1600036d4000036d6a00036d9400036dbe00036de8
00036e1200036e3c00036e6600036e9000036eba00036ee400036f0e0003
6f3800036f6200036f8c00036fb600036fe00003700a000370340003705e
00037088000370b2000370dc00037106000371300003715a000371840003
71ae000371d8000372020003722c0003725600037280000372aa000372d4
000372fe0003739e000373e20003745800037482000374ac000374d60003
75000003752a000375540003757e000375a8000375d2000375fc00037626
000376500003767a000376a4000376ce000376f8000377220003774c0003
7776000377a0000377ca000377f40003781e000378480003787c000378b0
000378e400037a9200037ca200037e92000380a0000381320003818c0003
81f600038290000383200003839000038464000385520003862600038716
000387b0000388840003891e000389cc00038a7200038ac400038c220003
8c7000038cbe00038d1600038d6e00038dc000038e1200038ece00038f8a
00039020000390b60003914c000391e80003928400039320000393320003
934400039356000393680003937a000393d400039434000394d0000394e2
000394f4000395040003951400039526000395380003954a0003955c0003
956e000395800003961c000396b20003974e000397e40003990000039926
0003994c000399720003999c000399d800039a4600039a8e00039b040003
9b4400039bb000039bec00039c5000039c8800039cec00039d2c00039d82
00039dc200039e2e00039e7800039ed000039f0800039f5a00039f920003
9fe60003a0140003a03a0003a0640003a09e0003a0ce0003a0fe0003a154
0003a1b60003a21a0003a2820003a2ea0003a34a0003a39c0003a3f40003
a44e0003a4a60003a4d60003a5140003a53a0003a56e0003a5980003a5be
0003a5e40003a60a0003a6460003a69e0003a6fa0003a75c0003a7ae0003
a80c0003a8440003a8940003a8d00003a9200003a9500003a9880003a9b8
0003a9ec0003aa120003aa380003aa680003aa980003aabe0003aae40003
ab0e0003ab3a0003ab600003ab9c0003abcc0003abfc0003ac2c0003ac5c
0003ac820003acbe0003acee0003ad2e0003ad580003ad840003adb60003
ade00003ae0c0003ae3a0003ae700003aeae0003aef60003af340003af64
0003afb40003afee0003b0300003b0600003b0b60003b0e00003b1ac0003
b1d60003b2960003b2c00003b3760003b3a00003b4640003b5580003b686
0003b7ee0003b91e0003b9fa0003bb1e0003bdda0003c0ce0003c27e0003
c4b00003c6d20003c9c20003cb6e0003cd6a0003cd7a0003cede0003d14c
0003d2d20003d6c60003d9dc0003db8a0003dd7e0003dee60003def60003
e05c0003e1d00003e2e00003e4520003e52c0003e5a20003e6580003e6fe
0003e86e0003e8a60003e9200003e9e20003ea9c0003eb040003ec0a0003
ed400003ee0e0003ef6c0003efe60003f0600003f1280003f1e20003f296
0003f2f20003f34c0003f3940003f4040003f4800003f4ca0003f5040003
f54a0003f58e0003f5e00003f6320003f6b40003f7360003f7780003f7b8
0003f7ee0003f8240003f8520003f8800003f8b40003f8e80003f92a0003
f96c0003f9a80003f9e40003fa1e0003fa580003fa8a0003fabc0003faee
0003fb200003fb5a0003fb940003fbd60003fc180003fc5a0003fc9c0003
fcea0003fd380003fd7a0003fdbc0003fdfc0003fe3c0003fe760003feb0
0003fefc0003ff480003ff860003ffc60004000c000400520004008e0004
00e4000401200004015c0004019c000401dc000402180004025400040294
000402d4000403180004035c000403b00004043e00040480000404c20004
052a00040592000405c4000405f60004062e00040666000406fc00040792
000407dc00040826000408620004089e000408f40004094a000409940004
09de00040a3600040a8e00040ace00040b0e00040b4600040b7e00040bc8
00040c1200040c5000040c8e00040cd000040d1200040d6600040dba0004
0e0000040e4600040e8c00040ed200040f2800040f7e00040fd40004102a
00041076000410c20004110e0004115a000411ce00041242000412b60004
132a00041368000413a6000413e400041422000414600004149e000414e2
0004152600041572000415be0004161e0004166a000416a8000416f60004
180600041856000418a6000418de000419160004196c000419c200041a36
00041a9a00041adc00041b1e00041b7400041bc200041c0e00041c5a0004
1c9a00041cda00041d2200041d6a00041dd600041e3000041e6800041ea0
00041ee000041f200004203a000421800004227000042380000423d60004
242c0004247e000424d2000425360004259a000425f000042646000426bc
0004273200042774000427b6000427f80004283a0004287c000428be0004
29140004296a000429bc00042a1000042a9800042b1a00042bba00042c5c
00042c9a00042cd800042d1600042d5200042d9000042dce00042e0c0004
2e4800042f2c000430180004312e0004324a00043314000433de000434d8
000435d2000436d0000437ce000438ec00043a0a00043b3000043c560004
3d5800043e5a00043eec00043f7e00043fbc00043ffa00044054000440ae
000440e60004411e0004422e0004423e00044286000442ce000443260004
437e000443b0000443e20004442400044466000444a0000444da0004451e
00044562000445da00044654000446e40004472800044768000447ea0004
486c000449c4000449d400044a2200044a7000044aac00044ae800044b2e
00044b7400044bc200044c1000044c6000044cb000044d0c00044d680004
4ede000450460004507e000450b80004510400045150000451a2000451f4
000452460004529c000452d8000453140004536a000453be000454f60004
5596000455e4000456240004565e000457f400045a5c00045b2000045cb6
00045e1400045ee200046088000462dc000465140004655a0004658c0004
66360004675a0004677e000468180004692400046a3400046b4400046c52
00046dd800046e0a00046eac00046ed400046f3600046f9800046ffa0004
705c0004709a000470d8000471120004714c00047178000471c4000471fe
0004723800047394000474e8000474f8000475b6000476ec0004774a0004
7862000479f000047a9600047bdc00047c1a00047c5800047c9000047ce8
00047d1400047d5600047dba00047e0200047e6400047ec400047f360004
7fb20004802e000480b00004813c000481c800048252000482d20004830c
00048348000484ac00048576000485a6000485d600010000068a00f2003c
0076000700020010002f0056000005ca0f130003000200000047035a0000
00030000000000fe00000000000300000001001e00fe0000000300000002
000e02080000000300000003007201d60000000300000004001e00fe0000
000300000005001802180000000300000006002202480000000300000007
00d800fe0000000300000008002602f600000003000000090086091e0000
00030000000a055609a4000000030000000b00720efa000000030000000c
00660f6c000000030000000d06b4026a000000030000000e005c0fd20001
000000000000007f102e0001000000000001000f10ad0001000000000002
000711320001000000000003003911190001000000000004000f10ad0001
000000000005000c113a0001000000000006001111520001000000000007
006c10ad0001000000000008001311a90001000000000009004314bd0001
00000000000a02ab1500000100000000000b003917ab000100000000000c
003317e4000100000000000d035a1163000100000000000e002e18170003
000104030002000c18450003000104050002001018550003000104060002
000c18650003000104070002001018710003000104080002001018810003
00010409000000fe00000003000104090001001e00fe0003000104090002
000e02080003000104090003007201d60003000104090004001e00fe0003
000104090005001802180003000104090006002202480003000104090007
00d800fe0003000104090008002602f600030001040900090086091e0003
00010409000a055609a4000300010409000b00720efa000300010409000c
00660f6c000300010409000d06b4026a000300010409000e005c0fd20003
0001040a0002000c184500030001040b00020010189100030001040c0002
000c184500030001040e0002000c18a10003000104100002000e18b10003
000104130002001218bf0003000104140002000c18450003000104150002
001018450003000104160002000c18450003000104190002000e18d10003
0001041b0002001018a100030001041d0002000c184500030001041f0002
000c18450003000104240002000e18df00030001042a0002000e18ed0003
0001042d0002000e18fb00030001080a0002000c18450003000108160002
000c1845000300010c0a0002000c1845000300010c0c0002000c18450003
00010f0000070066190900540079007000650066006100630065002000a9
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200070006c0063002e
00200044006100740061002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002f005400790070006500200053006f006c
007500740069006f006e007300200049006e0063002e0020003100390039
0030002d0031003900390032002e00200041006c006c0020005200690067
00680074007300200052006500730065007200760065006400540069006d
006500730020004e0065007700200052006f006d0061006e00ae00200054
0072006100640065006d00610072006b0020006f00660020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e00200070006c006300200072006500670069
00730074006500720065006400200069006e002000740068006500200055
005300200050006100740020002600200054004d0020004f00660066002e
00200061006e006400200065006c0073006500770068006500720065002e
004d006f006e006f0074007900700065003a00540069006d006500730020
004e0065007700200052006f006d0061006e00200052006500670075006c
00610072003a00560065007200730069006f006e00200033002e00300030
00200028004d006900630072006f0073006f00660074002900540069006d
00650073004e006500770052006f006d0061006e00500053004d0054004e
004f00540049004600490043004100540049004f004e0020004f00460020
004c004900430045004e00530045002000410047005200450045004d0045
004e0054000d000a000d000a005400680069007300200074007900700065
00660061006300650020006900730020007400680065002000700072006f
007000650072007400790020006f00660020004d006f006e006f00740079
007000650020005400790070006f00670072006100700068007900200061
006e00640020006900740073002000750073006500200062007900200079
006f007500200069007300200063006f0076006500720065006400200075
006e00640065007200200074006800650020007400650072006d00730020
006f0066002000610020006c006900630065006e00730065002000610067
007200650065006d0065006e0074002e00200059006f0075002000680061
007600650020006f0062007400610069006e006500640020007400680069
007300200074007900700065006600610063006500200073006f00660074
007700610072006500200065006900740068006500720020006400690072
006500630074006c0079002000660072006f006d0020004d006f006e006f
00740079007000650020006f007200200074006f00670065007400680065
00720020007700690074006800200073006f006600740077006100720065
002000640069007300740072006900620075007400650064002000620079
0020006f006e00650020006f00660020004d006f006e006f007400790070
0065002700730020006c006900630065006e0073006500650073002e000d
000a000d000a005400680069007300200073006f00660074007700610072
006500200069007300200061002000760061006c007500610062006c0065
0020006100730073006500740020006f00660020004d006f006e006f0074
007900700065002e00200055006e006c00650073007300200079006f0075
0020006800610076006500200065006e0074006500720065006400200069
006e0074006f002000610020007300700065006300690066006900630020
006c006900630065006e00730065002000610067007200650065006d0065
006e00740020006700720061006e00740069006e006700200079006f0075
0020006100640064006900740069006f006e0061006c0020007200690067
006800740073002c00200079006f0075007200200075007300650020006f
00660020007400680069007300200073006f006600740077006100720065
0020006900730020006c0069006d006900740065006400200074006f0020
0079006f0075007200200077006f0072006b00730074006100740069006f
006e00200066006f007200200079006f007500720020006f0077006e0020
007000750062006c0069007300680069006e00670020007500730065002e
00200059006f00750020006d006100790020006e006f007400200063006f
007000790020006f00720020006400690073007400720069006200750074
00650020007400680069007300200073006f006600740077006100720065
002e000d000a000d000a0049006600200079006f00750020006800610076
006500200061006e00790020007100750065007300740069006f006e0020
0063006f006e006300650072006e0069006e006700200079006f00750072
002000720069006700680074007300200079006f0075002000730068006f
0075006c0064002000720065007600690065007700200074006800650020
006c006900630065006e00730065002000610067007200650065006d0065
006e007400200079006f0075002000720065006300650069007600650064
00200077006900740068002000740068006500200073006f006600740077
0061007200650020006f007200200063006f006e00740061006300740020
004d006f006e006f007400790070006500200066006f0072002000610020
0063006f007000790020006f006600200074006800650020006c00690063
0065006e00730065002000610067007200650065006d0065006e0074002e
000d000a000d000a004d006f006e006f0074007900700065002000630061
006e00200062006500200063006f006e0074006100630074006500640020
00610074003a000d000a000d000a0055005300410020002d002000280038
0034003700290020003700310038002d0030003400300030000900090055
004b0020002d002000300031003100340034002000300031003700330037
0020003700360035003900350039000d000a0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d004d006f006e006f007400790070006500200054007900700065
002000440072006100770069006e00670020004f00660066006900630065
0020002d0020005300740061006e006c006500790020004d006f00720069
0073006f006e002c00200056006900630074006f00720020004c00610072
00640065006e007400200031003900330032005400680069007300200072
0065006d00610072006b00610062006c0065002000740079007000650066
006100630065002000660069007200730074002000610070007000650061
00720065006400200069006e0020003100390033003200200069006e0020
005400680065002000540069006d006500730020006f00660020004c006f
006e0064006f006e0020006e00650077007300700061007000650072002c
00200066006f007200200077006800690063006800200069007400200077
00610073002000640065007300690067006e00650064002e002000200049
00740020006800610073002000730075006200730065007100750065006e
0074006c00790020006200650063006f006d00650020006f006e00650020
006f0066002000740068006500200077006f0072006c006400730020006d
006f007300740020007300750063006300650073007300660075006c0020
00740079007000650020006300720065006100740069006f006e0073002e
002000200054006800650020006f0072006900670069006e0061006c0020
00640072006100770069006e00670073002000770065007200650020006d
00610064006500200075006e0064006500720020005300740061006e006c
006500790020004d006f007200690073006f006e00270073002000640069
00720065006300740069006f006e00200062007900200056006900630074
006f00720020004c0061007200640065006e007400200061007400200054
00680065002000540069006d00650073002e002000200049007400200074
00680065006e002000770065006e00740020007400680072006f00750067
006800200061006e00200065007800740065006e00730069007600650020
006900740065007200610074006900760065002000700072006f00630065
0073007300200069006e0076006f006c00760069006e0067002000660075
0072007400680065007200200077006f0072006b00200069006e0020004d
006f006e006f007400790070006500270073002000540079007000650020
00440072006100770069006e00670020004f00660066006900630065002e
00200020004200610073006500640020006f006e00200065007800700065
00720069006d0065006e007400730020004d006f007200690073006f006e
002000680061006400200063006f006e0064007500630074006500640020
007500730069006e00670020005000650072007000650074007500610020
0061006e006400200050006c0061006e00740069006e002c002000690074
00200068006100730020006d0061006e00790020006f006c006400200073
00740079006c006500200063006800610072006100630074006500720069
007300740069006300730020006200750074002000770061007300200061
00640061007000740065006400200074006f002000670069007600650020
0065007800630065006c006c0065006e00740020006c0065006700690062
0069006c00690074007900200063006f00750070006c0065006400200077
00690074006800200067006f006f0064002000650063006f006e006f006d
0079002e002000200057006900640065006c007900200075007300650064
00200069006e00200062006f006f006b007300200061006e00640020006d
006100670061007a0069006e00650073002c00200066006f007200200072
00650070006f007200740073002c0020006f006600660069006300650020
0064006f00630075006d0065006e0074007300200061006e006400200061
006c0073006f00200066006f007200200064006900730070006c00610079
00200061006e00640020006100640076006500720074006900730069006e
0067002e0068007400740070003a002f002f007700770077002e006d006f
006e006f0074007900700065002e0063006f006d002f00680074006d006c
002f006d0074006e0061006d0065002f006d0073005f00740069006d0065
0073006e006500770072006f006d0061006e002e00680074006d006c0068
007400740070003a002f002f007700770077002e006d006f006e006f0074
007900700065002e0063006f006d002f00680074006d006c002f006d0074
006e0061006d0065002f006d0073005f00770065006c0063006f006d0065
002e00680074006d006c0068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f0074007900700065002f006c006900630065006e0073
0065002e00680074006d006c547970656661636520a920546865204d6f6e
6f7479706520436f72706f726174696f6e20706c632e204461746120a920
546865204d6f6e6f7479706520436f72706f726174696f6e20706c632f54
79706520536f6c7574696f6e7320496e632e20313939302d313939322e20
416c6c2052696768747320526573657276656454696d6573204e65772052
6f6d616ea82054726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e20706c6320726567697374657265642069
6e2074686520555320506174202620544d204f66662e20616e6420656c73
6577686572652e4d6f6e6f747970653a54696d6573204e657720526f6d61
6e20526567756c61723a56657273696f6e20332e303020284d6963726f73
6f66742954696d65734e6577526f6d616e50534d544e4f54494649434154
494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a5468
6973207479706566616365206973207468652070726f7065727479206f66
204d6f6e6f74797065205479706f67726170687920616e64206974732075
736520627920796f7520697320636f766572656420756e64657220746865
207465726d73206f662061206c6963656e73652061677265656d656e742e
20596f752068617665206f627461696e6564207468697320747970656661
636520736f66747761726520656974686572206469726563746c79206672
6f6d204d6f6e6f74797065206f7220746f67657468657220776974682073
6f667477617265206469737472696275746564206279206f6e65206f6620
4d6f6e6f747970652773206c6963656e736565732e0d0a0d0a5468697320
736f66747761726520697320612076616c7561626c65206173736574206f
66204d6f6e6f747970652e20556e6c65737320796f75206861766520656e
746572656420696e746f2061207370656369666963206c6963656e736520
61677265656d656e74206772616e74696e6720796f75206164646974696f
6e616c207269676874732c20796f757220757365206f6620746869732073
6f667477617265206973206c696d6974656420746f20796f757220776f72
6b73746174696f6e20666f7220796f7572206f776e207075626c69736869
6e67207573652e20596f75206d6179206e6f7420636f7079206f72206469
7374726962757465207468697320736f6674776172652e0d0a0d0a496620
796f75206861766520616e79207175657374696f6e20636f6e6365726e69
6e6720796f75722072696768747320796f752073686f756c642072657669
657720746865206c6963656e73652061677265656d656e7420796f752072
6563656976656420776974682074686520736f667477617265206f722063
6f6e74616374204d6f6e6f7479706520666f72206120636f7079206f6620
746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e6f
747970652063616e20626520636f6e7461637465642061743a0d0a0d0a55
5341202d202838343729203731382d303430300909554b202d2030313134
34203031373337203736353935390d0a687474703a2f2f7777772e6d6f6e
6f747970652e636f6d4d6f6e6f7479706520547970652044726177696e67
204f6666696365202d205374616e6c6579204d6f7269736f6e2c20566963
746f72204c617264656e742031393332546869732072656d61726b61626c
6520747970656661636520666972737420617070656172656420696e2031
39333220696e205468652054696d6573206f66204c6f6e646f6e206e6577
7370617065722c20666f7220776869636820697420776173206465736967
6e65642e20204974206861732073756273657175656e746c79206265636f
6d65206f6e65206f662074686520776f726c6473206d6f73742073756363
65737366756c2074797065206372656174696f6e732e2020546865206f72
6967696e616c2064726177696e67732077657265206d61646520756e6465
72205374616e6c6579204d6f7269736f6e277320646972656374696f6e20
627920566963746f72204c617264656e74206174205468652054696d6573
2e20204974207468656e2077656e74207468726f75676820616e20657874
656e73697665206974657261746976652070726f6365737320696e766f6c
76696e67206675727468657220776f726b20696e204d6f6e6f7479706527
7320547970652044726177696e67204f66666963652e2020426173656420
6f6e206578706572696d656e7473204d6f7269736f6e2068616420636f6e
647563746564207573696e6720506572706574756120616e6420506c616e
74696e2c20697420686173206d616e79206f6c64207374796c6520636861
726163746572697374696373206275742077617320616461707465642074
6f206769766520657863656c6c656e74206c65676962696c69747920636f
75706c6564207769746820676f6f642065636f6e6f6d792e202057696465
6c79207573656420696e20626f6f6b7320616e64206d6167617a696e6573
2c20666f72207265706f7274732c206f666669636520646f63756d656e74
7320616e6420616c736f20666f7220646973706c617920616e6420616476
6572746973696e672e687474703a2f2f7777772e6d6f6e6f747970652e63
6f6d2f68746d6c2f6d746e616d652f6d735f74696d65736e6577726f6d61
6e2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f
68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c687474
703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f74797065
2f6c6963656e73652e68746d6c004e006f0072006d0061006c006e007900
6f00620079010d0065006a006e00e9006e006f0072006d0061006c005300
740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac00
4e006f0072006d00610061006c0069004e006f0072006d00e1006c006e00
65004e006f0072006d0061006c0065005300740061006e00640061006100
720064041e0431044b0447043d044b0439004e0061007600610064006e00
6f0074006801b001a10300006e00670041007200720075006e0074006100
490061006e005000200053007500730061006e004c002000470057006100
6400650020004d0069006b00650044007500200047007200650067004800
200045006c0069004b002000500050006100740068006500200026002000
52006f0062004e006f002e000000ba0054ffc003e1b345453240b803e1b3
2b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fff
c003dfb2161b32b9ffc003deb2424232b9ffc003deb2363832b9ffc003de
b32a2d32df410a03de00ef03de000203de03df0028001fffc003dfb3282e
32f0410d03df0001037e000f0101001f00a003dd00b003dd0002004003da
b32426329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c7
03b70012001f03b603b50064001fffc003b5b30e1132004173038d000100
c0038d00d0038d00e0038d00f0038d0004006f03a7007f03a7008f03a700
af03a70004000f03a7001f03a7002f03a7004f03a7000403ab03ab00ef03
a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03
aa000103a8036a0022001f038c03940015001f038b03930015001f03a403
93001a001f03a20394001e001f03a10393001e001f039f0394001e001f03
9b0394001a001f039a0393001e001f039903940016001f03980394001600
1f03970393001b001f03960394001b001f03950393001b001f0376037500
1a001f03740375001a001f03a00373b21e1f10411e039300200393003003
93000300200394003003940040039400030000039400010383036c001e00
1f03b1036c0032001f036d036c0032001fffc0037db2212332b9ffc0037d
b3171932a0410a037d00b0037d00c0037d00d0037d0004ffc0037cb22123
32b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c000400
300373004003730002000003730010037300200373000300e0037300f003
73000200b0037300c0037300d003730003008403730090037300a0037300
030377036a0029001f0389036ab2281f40b80367b33940323fbb03660001
00400366b3191d328fbb0366000100400366b3090a3240b80366b3090e32
40b80366b3090f323fbb0365000100400365b3090c3240b80365b31a1d32
40b80365b3090e326b410e0363007b036300020014036300240363003403
630044036300040363b2242f1fba034e006d0800400e1f7f027f037f047f
050430440112bf033200500800001f0012032d003c080040291f5f3c0137
6009700980090310092009300940095009056f037f038f03031f032f033f
034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd0
0b05b006c006d006e006f0060520063006400650066006700680069006a0
06099006900702600b700b800b03100b200b300b400b500b051f0701a041
850362000100000362001003620070036200900362000400f0035f000100
20035e0020035f0030035f0040035e00040000035e0000035f0010035f00
d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0030f00
050000030f0010030f0050030f0060030f0070030f00d0030f0006000003
0f0010030f0020030f0030030f00e0030f00f0030f0006030f0027000003
0e0030030e000200e0030e00f0030e0002030e004a00e0030d00f0030d00
02030d002700d002fc0001001002fc002002fc005002fc000300d002fc00
e002fc0002000002fc001002fc002002fc003002fc005002fc006002fc00
0600e002fc00f002fc0002002002fc003002fc004002fc000302fc406127
c02901b02901a02901902901403c3f413240223f41321212125f235f255f
285fa5046f236f256f286fa5044f234f254f284fa5043f233f253f283fa5
042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c
6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32
370f413b02af0001005f02af009f02af00df02af0003001f02af002f02af
003f02af006f02af000402af02af001f02ad002f02ad003f02ad004f02ad
005f02ad000500df02ad0001000f02ad001f02ad003f02ad005f02ad009f
02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad00030040
02acb23a334f414a02ac005f02ac009f02ac0003002f02ac003f02ac0002
000f02ac003f02ac00af02ac000300b002ac00e002ac0002004f02ac005f
02ac00a002ac0003001f02ac002f02ac003f02ac0003000f035a0001000f
035a001f035a003f035a005f035a0070035a000500cf035700df03570002
000f0357001f03570070035700af03570004035a035a0357035702ad02ad
02ac02ac032c400d31151f001616000000121108104110020c004a000d01
a8004a000d0198004a000d0189004a000d013f004a000d0124400e4a0df6
4a0dbe4a0d864a0d274a0dbe02280041000d01940041000d0121400b410d
b4410d4f410d29410d411002170021000d02150021000d02060021000d01
eb0021000d014e0021000d012c4014210df9210df3210df1210d9d210d71
210d3d210d4110021c001f000d0214001f000d020b001f000d0196001f00
0d014a001f000d0126400b1f0dc61f0d571f0d371f0d410d019e0141000d
00420141000d001e0141000d001b0141000d01f2b40f440f0009bb01f200
44000d0201b23c291fb80200b23c291fb801ffb23c411fb801feb23c471f
b801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224e41f41
1501f401490401001f01f301490401001f01f1014900ab001f01f0014900
67001f01a6003c0125001f01a4b23c811f411501a3010f019a001f01a200
220801001f01a100500401001f019f0149019a001f019d01490067001f01
9cb22c621fb8019bb22c791fbc019a002c0101001f0197b22ce41fb80193
b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f4111016700
240201001f0163002502ab001f014c010f019a001f01480149006c001f01
47b22c891fb80145b22c9e1fb80144b22c791fb80143b223311fb80127b2
3c811fbc012300500101001f011fb223e41f4115011d0023019a001f011c
00230801001f011b00250801001f010e010f0401001f010d00220401001f
0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1fe3bc01
490156001f00e20149b2ab1fd1b901490401b21fcf2cb80125b61fce23bb
1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb124e41fb0b90149
0201b61faf2c671fad23b80801b21fa523b80201400b1f9f3c2d1f9b235a
1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e1f4c3c
ab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b80149b3
ab1f3124b80401b21f3025b802abb61f2a24e41f2623b80156b21f5537ba
023500070175402c0774076207560751073b0733072d0720071d071c0714
08120810080e080c080a080808060804080208000814b8ffe0402b000001
001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b534201b0124b004b5442b0372b4b
b807ff52b0382b4bb008505b58b101018e59b0382bb00288b801005458b8
01ffb101018e851bb0124358b90001012f858d1bb90001017c858d595901
4bb0c063004b6220b0f65323b8010a515ab0052342180016763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b90271026f4544
b90270026f45445958b9017a0271455258b90271017a4459594bb0475320
5c58b9002202704544b9003c027045445958b901b30022455258b9002201
b34459594bb04c53205c58b9014900224544b1222245445958b901c20149
455258b9014901c24459594bb06753205c58b9002402714544b900500271
45445958b9021e0024455258b90024021e4459594bb8020153205c58b901
0f00224544b1222245445958b90c00010f455258b9010f0c004459594bb0
1c53205c58b125254544b12c2545445958b13725455258b125374459594b
b0ab53205c58b125254544b1232545445958b901590025455258b9002501
594459594bb8010153205c58b125254544b1282545445958b90208002545
5258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463456523456023456560234560
b08b766818b080622020b164dc4565234520b003266062636820b0032661
65b0dc236544b064234420b161634565234520b003266062636820b00326
6165b063236544b0612344b10063455458b163406544b261406145236144
59b3a67f434b456523456023456560234560b089766818b080622020b143
7f4565234520b003266062636820b003266165b07f236544b043234420b1
a64b4565234520b003266062636820b003266165b04b236544b0a62344b1
004b455458b14b406544b2a640a645236144594b5242014b5058b1080042
59435c58b108004259b3020b0a124358601b2159421610703eb0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b0112342002b001845694445694445694445
6944737373747373737475752b7373747475184569447373742b4bb02153
4bb046515a58b03cb03c45b040604459012b2b2b2b757575757575757543
584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22
025f226f227f228f229f22af2206757559435c58b6403c9f22ef22037559
2b2b01747474744544737374747575454473454473744544737475737373
737300757575737575752b2b757575752b752b435841220063032d000100
03032d0013032d0023032d0033032d0053032d000500c3032d00d3032d00
e3032d00f3032d00040083032d0093032d00a3032d00b3032d0004032d03
2d4518694474747575592b4358b900180332b330353238b80332b3616632
38b80332b3535a3238b80332b3454e3238b80332b33c413218b80332b23f
330a410f0332000100ba033200ca033200da033200ea033200fa03320005
033203324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74
002b2b2b732b74012b002b2b017373737474732b2b00732b2b002b2b2b01
7374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500737300
4569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b
2b2b2b0000>
[15785 11565 15133 15893 15661 16181 16337 16077 15205 16177 15877 16065 15621
15813 16129 13457 16337 16293 16819 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 3902 16 <000100530180025802170003003f40200205801d64367f050101000200b0
030300021001500160019001a001d0010601b80134b5008004545a182b10
f6fd5d3c103c002fed3c103c3130015d2b13211521530205fdfb02179700
>FLEAAA+TimesNewRoman AddT42Char 
1 4728 21 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>FLEAAA+TimesNewRoman AddT42Char 
1 6718 26 <0001004cffe403a5054c000b00c1b90004ffe0b3131b3e05b8ffe0402b13
1b3e19080105032a094200400d600da00dca01c902d801d802e00d0b1a00
010b01000d400d0302050404b80193401a03021403030204030d05404735
05e2010640473506e201000400b80199b6a00b010b190c05ba02e8000302
e7400c0004100440045004a0040504bc02e6000c011e010100182b10f65d
ede44e10f45d4df4003f3ced2b10ed2b3f3c87052e2b870e7dc4b1060243
54584009740574068405840604005d5931300171725d0072012b2b132115
012301212207060727ce02d7fe3c700195fe8b713054331d054c26fabe04
c51b2e600b00>FLEAAA+TimesNewRoman AddT42Char 
1 7496 28 <00020051ffe403a8056800170027010c40337b27d905d722d92704680479
057d087a09770c780d791377208b0883130a09088f29023b080527182127
1805031e2504000705ba016300180140b42750070107b8014340092f256f
25022525001eb80106b20e0501b8018cb41717000d18ba013e001a010fb7
0012101220120312b8016540120029402980290340296029a029e0290429
01ba01400021010fb7400abf0a020a1928ba011e01e800182b4e10f45d4d
ede4105d71f65dfde4003f3c10ed3fed12392f5ded7210f4ed1112391112
1739011112393931304379402a1b2408110c2610251c2623261f0d216200
1d0f1a62012408216200200b1e62011b111e62012209256200002b2b2b01
2b2b2b2b2b2b2b818101715d005d17353636123706232226353437363332
1716151402070623013635342626232206151417163332366c82e0d1299d
7f8fcc667bc6a77792dec6a1be02331242794d598659415f2e7e1c250275
0124af65ddb7b28ba98aabfbe2fe79816a02b9824e61e178a09ed377562c
>FLEAAA+TimesNewRoman AddT42Char 
2 4930 57 <00010012ffe105ae054c001f0212b40a0f061f02b10202435458b416011e
100db803e2b70e1f0216070e0207002f3f12393f10fdd0d0c0012f31301b
400c1210210116080b39a9160121b8ffc0b2183521b8ffc0b333353421b8
ffc0b32c2f3421b8ffc04083202334f312fb1ff02103ba17b918bb1ab021
f90705a919ac1abc05b606b90705aa05a706a907aa15a716059b07900f90
129a16902105691564177404790a8021055a165717502165066907055b07
59085b0a5e0e59150540215000540357055306052021340438154600490e
0525062907280828152816050021202130216021d02105b1060243545840
1c000e21200a161a162a160316070d011e100d1b0e06070107081f0e0200
3f3c3f5d10fdc5c5c51112395d01111239391b40140005011b000f15101b
0f0e080d1b0e1f171e1b1fb8ff8740111607062008070722161514161615
050606b802c940351617141616171f0f0f0e0e0002070609fb170117e730
1640169016f0160416e8301540155015b015f01505201560157015801504
15b802ebb6202196216b8a182b2bf45d5d19f45de45d00183f3c3f3c103c
103c87052e2b0e7d10c487052e182b0e7d10c42b180010ed0110c00010ed
0110c00010ed0110c00010ed0110c059313001715d5d5d5d5d5d5d5d5d5d
5d2b2b2b2b005d2b0172435c5840090a1812390f40123904b8ffe8b61039
0808133907b8ffd8b613390a28133904b8ffd8b10f39012b2b2b2b2b2b2b
5959015d0115060706070123012627262627352115060615141701013635
34262726273505ae48253529fe2725fe04271019493e022a5e382e015901
402f3a45050c054c250d213165fb7e04915a141f23052525092e24326afc
e50311742d1d350b01022500>FLEAAA+TimesNewRoman AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>FLEAAA+TimesNewRoman AddT42Char 
FLEAAA+TimesNewRoman /CharStrings get begin
/hyphen 16 def
/two 21 def
/seven 26 def
/nine 28 def
/V 57 def
end
FLEAAA+TimesNewRoman /Encoding get
dup 45 /hyphen put
dup 50 /two put
dup 55 /seven put
dup 57 /nine put
dup 86 /V put
pop
end
%ADOEndSubsetFont
/PHVJGH+TimesNewRoman /FLEAAA+TimesNewRoman findfont ct_VMDictPut
/PHVJGH+TimesNewRoman*1 
[45{/.notdef}rp /hyphen 4{/.notdef}rp /two 4{/.notdef}rp /seven /.notdef /nine 
28{/.notdef}rp /V 169{/.notdef}rp]
PHVJGH+TimesNewRoman nf
PHVJGH+TimesNewRoman*1 [9 0 0 -9 0 0 ]msf
243.323 718.227 mo
(V7-292)
[6.49802 4.5 2.9969 4.5 4.5 0 ]xsh
/PHVJFS+TimesNewRomanPS-BoldMT*1 uf
/PHVJFS+TimesNewRomanPS-BoldMT uf
/PBAAAA+TimesNewRomanPS-BoldMT uf
/PHVJGF+TimesNewRoman,Italic*1 uf
/PHVJGF+TimesNewRoman,Italic uf
/FXYAAA+TimesNewRoman,Italic uf
/PHVJGE+CMR7*1 uf
/PHVJGE+CMR7 uf
/LLIBAA+CMR7 uf
/PHVJGB+CMMI7*1 uf
/PHVJGB+CMMI7 uf
/YEKBAA+CMMI7 uf
/PHVJGD+CMEX10*1 uf
/PHVJGD+CMEX10 uf
/NQPBAA+CMEX10 uf
/PHVJFX+NimbusRomNo9L-Medi*1 uf
/PHVJFX+NimbusRomNo9L-Medi uf
/UGXAAA+NimbusRomNo9L-Medi uf
/PHVJFY+TimesNewRomanPS-BoldItalicMT*1 uf
/PHVJFY+TimesNewRomanPS-BoldItalicMT uf
/MZQAAA+TimesNewRomanPS-BoldItalicMT uf
/PHVJGA+CMR10*1 uf
/PHVJGA+CMR10 uf
/AXNBAA+CMR10 uf
/PHVJFT+NimbusRomNo9L-Regu*1 uf
/PHVJFT+NimbusRomNo9L-Regu uf
/HIBBAA+NimbusRomNo9L-Regu uf
/PHVJFZ+CMMI10*1 uf
/PHVJFZ+CMMI10 uf
/ELRBAA+CMMI10 uf
/PHVJFW+NimbusRomNo9L-MediItal*1 uf
/PHVJFW+NimbusRomNo9L-MediItal uf
/HJCBAA+NimbusRomNo9L-MediItal uf
/PHVJGG+AdobeSongStd-Light-Adobe-GB1-1 uf
/PHVJGG+AdobeSongStd-Light-Adobe-GB1-1 /CIDFont ur
/PHVJFU+CMSY8*1 uf
/PHVJFU+CMSY8 uf
/QJJAAA+CMSY8 uf
/PHVJGH+TimesNewRoman*1 uf
/PHVJGH+TimesNewRoman uf
/FLEAAA+TimesNewRoman uf
/PHVJGC+CMSY10*1 uf
/PHVJGC+CMSY10 uf
/LLIAAA+CMSY10 uf
/PHVJFV+CMSY7*1 uf
/PHVJFV+CMSY7 uf
/GFNBAA+CMSY7 uf
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210732def000000cc000000566376
7420f32cda8100000124000007c66670676dc3a61d01000008ec00000631
676c796660978a9e00006fd0000485d668656164cf5b1d8300000f200000
00366868656112ef12f600000f5800000024686d7478b14216ca00000f7c
00001a286c6f63611181f1ae000029a400001a2c6d6178700d0110ae0000
43d0000000206e616d650035b207000043f000001cc970726570e43894a4
000060bc00000f1367646972000000000000000000000000000103350190
00050000059a053300000125059a0533000003a000660212010502020603
05040502030400007a878000000000000008000000004d6f6e6f00400020
fffc058cfe460133072101bb400001ffffff00000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000ad000000ad0000000000250096009f002400f0013100c2
00c0004a00a6004100500094004700cf00af000e007901cb000400230044
00a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a0043
00ae00ba016c0153002f00430048022c012b0025008fffc000170028ffcd
ffd80025009d00e50124ffb10048009d00e600110027007f00910012006a
00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b
00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe7
00be04010065007f00820088009900b200c0022e034305a000200026003d
004e00610065007b00d9011301310340ff27ff42ff99004e00a700f2022b
02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b9
013101310217021700020017002900550080008f00a500b200b300d0014b
015901c001c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c1
00e400f40130015901ab01ab03220374041e04740532fd81004d0064009c
00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe5
00000008001f00380051005a006f0076007700a200c000c200c400f101fb
0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064
008b00ae00b200b800b800d600f50111012001310138014e01520167018f
019601b801d901d902060221027102ea03b003cb03dc04360505ff3a0012
0016001e001f002300570068006c007e0088009200a500a800c500c90115
0126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef01160120
0129016a017301e3027e029002b4030e0310032303350341035403590388
039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff840000
00010006001e0027002c0034003700620066006a006b006c007000700072
007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f4
0100012101300169016a016d017c0185018e018e019901ac01c101c501c9
01e101f601f601f60222022202280236023f024302460267028502850294
02d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1a
fe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a1
00a500a500aa00af00b600c600cc00d700dd00ec00f20102010501170118
0123012a012c0131013f014701490149014d01510151015501550157015a
015a0161016201680168017f0180018201830184018d0195019501950198
019901a501a901b601b601b701ba01ba01d501df01e601ea01f202000200
0203021702250227022f0239024302430247024f025202520267026f026f
027002720276027e02a702b302b902d603130325032d03610371039903ae
03c203d403f90402042c042f043c04560467048304cf04d104d804fb051f
05450568059e05c2061b06340655066a069806af06e806fc070607500762
077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e
03d2056601f0032001da018a0369036bffa3034602f8036f015602bf0122
031f053a0366008c00ff01ab02e102f402e70415015402e90128049101b7
026f034302060000000005d30415048305e8000002d7003a027d01c002c5
03830383ffbd003a059e01df059e02d1002004e0021300df01c001870297
000000ce0269028b0058043405fb0069015a01a905780182013e0288012a
03d4049e00e5032302f301f00196007a00cd014a0424025e023901ab00cf
00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a005900000000012602150150
02f0025503bc06d00335010100d000d2007a01030130007c000000000000
000000fe006e006600940227002b0045004d00d3013200180097004100f4
febcffe9001605d8058b009100a1032c00520030005d02cb003a009200e5
00e500580086003200ba0099008800300298007cff8001640028004d0065
000200b8016a002f010b001100170100007f00040016022200a6005f0000
00f8000a00ca0043004b01ee0077012000f401c00028045f0000008c0445
00c20060007b008b008b0064005d00c2009c009206b505d3004f01170000
0420fe9e00cc00dc005e004600e30032001a003c0091005a00a1042c0041
002000490071009c009cfe4800400040008600cb0102007d003a003e006a
0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb2003600870559
0256052b043400de00c901c4004800db018b00b3004800da011601250118
00ea00ea00ae0000003e05bb008a04d70053003fff8cffd5001500280022
00990062004a00e4006d00ee00e5004803c00033fe4e02b1ff4603700079
05df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a5
0025000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b09051582320b00d
44235921212d2c20204518684420b001602045b04676688a4560442d2c01
b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01
b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045
b00325456164b050515845441b2121592d2cb00143632362b0002342b00f
2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112b
b0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112b
b0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112b
b0172344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c
482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212110592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b
53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a
8a462320468a608a61b8ff8062232010238ab9035803588a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1230188
51b1400188535a58b910000020885458b202010243604259b12401885158
b920000040885458b2020202436042b12401885458b2022002436042004b
014b5258b2020802436042591bb940000080885458b202040243604259b9
4000008063b80100885458b202080243604259b94000010063b802008854
58b202100243604259b94000020063b80400885458b20240024360425959
5959592d2cb0024354584b53234b515a58381b2121591b21212121592d00
000000010000000300001baaf9b55f0f3cf50819080000000000a2e31dc2
00000000b9d5b528fb74fd8c1000080e0000000900010001000000000001
00000721fe4500571000fb74fe2610000001000000000000000000000000
0000068a0639011c00000000020000000200000002aa00e4034400850400
00250400006c06aa00480639004b0171005102aa005402aa002e04000091
048300250200006e02aa005302000091023900030400004a040000f00400
002c040000530400002004000062040000580400004c0400007c04000051
023900b00239008e048300250483002504830025038d005c075e006105c7
0010055600220556004a05c7002304e3002a0473002105c7004805c70023
02aa0033031d002a05c7002204e30029071d002205c7ffe505c700480473
002205c70048055600230473008004e3003e05c7000b05c70012078d001b
05c7000f05c7001304e3001a02aa00a80239000302aa004b03c100250400
ffef02aa0076038d00490400fffb038d004604000044038d004c02aa004f
0400003d0400000d0239003c0239ff63040000110239003d063900110400
000c040000450400fff90400004402aa000d031d00640239001404000002
0400001105c7000d0400001b0400000c038d002903d7011b019a00a103d7
00b10454001405c7000e05c7000e0556004a04e3002a05c7ffe505c70048
05c7000b038d0049038d0049038d0049038d0049038d0049038d0049038d
0046038d004c038d004c038d004c038d004c0239003c0239003c0239000d
023900020400000c04000045040000450400004504000045040000450400
00020400000204000002040000020400006503330062040000810400003d
0400009c02cd007003a0fff204000023061400450614004507d7001e02aa
00ec02aa003904640019071dffe805c7004905b400350464000804640018
0464001804000002049c008603f4004005b4002b0696002e0464003e0231
00000235fffa027b001d062500470556004904000027038d005902aa00e4
0483002404640053040000020464001e04e5001a04000040040000400800
00e605c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed
038d0043038d004302aa00b902aa00c10464001703f4002f0400000c05c7
00130156feab0400ffe902aa007702aa007304730019047300170400008b
0200009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3
002a04e3002a02aa003302aa003202aa003202aa003205c7004805c70048
05c7004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa
001702aa003702aa00e902aa009602aa00bb02aa004e02aa009402aa003c
04e300160239001e0473007e031d006404e3001a038d0029019a00a105c7
00230400004405c700130400000c047300240400fff904830025048300a5
02660088026600140266002c06000086060000860600002a0400002105c7
00480400003d02aa003304730080031d00640556004a038d00460556004a
038d0046040000260400ffef02aa01ef05c70010038d004905c70010038d
004905c70023052c004405c7002304e3002a038d004c04e3002a038d004c
04e300290239003d04e300290340003c04e3002902c0003605c7ffe50400
000c05c7ffe50400000c05c70048040000450556002302aa000d05560023
02aa000d04730080031d006404e3003e0239001404e3003e036b001305c7
000b0400000205c7000b0400000204e3001a038d002904e3001a038d0029
04a0002505c7004c05d900470431005703c50046035c0047045000460337
000c049e00450400ffef049500e40285000207c0002c0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00483
002604cd00990483002604d5022204d5010505abffe905ab027e05ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f04150040040000250600005505ab002f046b003b04d5
000301c00089035500a206ab003403d5006404d5009202d6008302d60083
04d500b202d6007005c70010038d00490556004a038d00460556004a038d
004604e3002a038d004c04e3002a038d004c04e3002a038d004c05c70048
0400003d05c700480400003d05c700480400003d05c700230400000d05c7
00230400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe
02aa003302390039031d002a0239ff6305c70022040000110400001104e3
00290239003d05c7ffe50400000c059d002603f5000c05c7004804000045
05c70048040000450556002302aa000d04730080031d006404e3003b0239
001005c7000b0400000205c7000b0400000205c7000b0400000205c7000e
04000002078d001b05c7000d05c700130400000c0239001605c7000f038d
0049071dffe80556004905c7004904000027023900b2078d001b05c7000d
078d001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aa
ffdb0400003d04cd005a060000860600002a060000310600002502aa00c3
02aa00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7
ffb60687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a
04e3001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525
004f05c7004805c700250473002204a8002004e3003e05c7001305c7000f
05e7001805f2003c02aa003205c7001304310057035c0047042f000b0227
002503f6fffa0412006e0389000003500046042f000b03d5005102270025
0408001503e10019044a0074039effd3039100460400004503fe0059032b
004603f6fffa038d00180502001c0544004b0227000003f6fffa04000045
03f6fffa0544004b04e3002a0604003704a000250548004b0473008002aa
003302aa0032031d002a06fa000d06fa002705ee00360556002505aa001a
05c7002505c70010049800240556002204a000250575001a04e3002a072b
00120402002b05c7002505c7002505560025056d0012071d002205c70023
05c7004805c70025047300220556004a04e3003e05aa001a0652004c05c7
000f05c700250533fffa081200390812003905a6003606fa002504980024
0548003a083900260556ffee038d00490412004e03c700300348001f0412
001a038d004c05870017032900180448002e0448002e03e3002e03fe000c
0510002e0448002e040000450448002e0400fff9038d0046037f000c0400
000c052f00570400001b0448002e0406001e0629002e0629002e0423000c
0560002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348
001f036f0046031d00640239003c023900020239ff6305d1000c05c9002d
0400000d03e3002e0400000c0448002e039a002502cf001f0800004107a2
0010040a000d02aa010102aa001c02aa003202aa001202aa010202aa008f
02aa008f02aa008f02aa009002aa010202aa001c02aa010202aa012102d9
005602aa008f025400e002be02af02beff6b023900b003da005f03a40033
02af0021035a004303c5004e023b0043024a004e03d0005803ce00430222
0043039e0043037600330374000f040f006403e2004e0232004302700021
03cd005f03a2004303a200430386005803dc004303ae003d03ca006903c0
004304e200430400002104750043045d00430444004301ac006b02f9006b
06360096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e2
004304e2004304e2004304e2004303da005f03da005f03da005f03a40033
02af0021035a004303c5004e023b00430279000c03ce004302220043039e
0043037600330374000f03e2004e0270002103cd005f03a2004303860058
03ae003d03ca006903c0004304e2004304000021023b004303a400330376
0033038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab
028d00a002da0043034d007901a8ffba019c004601e50046019c0046019c
004601ad0048019c004601b10046015100460435017c0435012e043500b7
043500810435012c043500be043500af043500810435009a043500db0435
0085028d00c1043500b3060001000600010002420036060001000435009e
04350098043500cb060001000600010006000100060001000600010001b1
004606000100060001000600010006000100060001000600010006000100
06000100051bffba06000100060001000600010005b5003a05b5003a01f4
ffba01f4ffba060001000600010006000100060001000481003604350036
043dffba043dffba03e9004a03e9004a067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba051b003204b5002406000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
01cf003001b1004601b1004601b1004001b1004606000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000400001b080000000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc
01a8005601d60010037500320375003201a8002d01d60013051b003204b5
002401f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba
01f4ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e
06c5ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a
039a00360435ffba0327ffba064f0027064f00270224ffba021affba04a7
004604a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba
040d0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba024200360300fff7039affba
0327ffba0375003203750032051b003204b50024051b003204b5002401f4
ffba01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041
045a005304ce00410600010006000100019c0046019c0046060001000600
0100060001000151004601b10046060001000600010001ad004801e50046
06000100060001000600010001b1004601b1004601b1004601b1004601b1
004001cf003006000100019c0046019c0046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100028d00ca028d
00c7028d00c6060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000100ffba0800ffba1000ffba05c70048043b
00450635000b045600020000fdcc0000fc140000fd130000fe420000fce0
0000fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000
fcfe0000feff0000ff030000fe9e041a00a206000088060000140000fe70
0000fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000
fb740000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae
0000fc440000fe140000fe700000fd910000fc710000fdc30000fe470000
fe620000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a
0000fc620000fc090000fbd70239003c05c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004905c70010038d004905c7
0010038d004905c70010038d004905c70010038d004904e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d
004c04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa0033
0239003c02aa00330239003c05c700480400004505c700480400004505c7
00480400004505c700480400004505c700480400004505c7004804000045
05c700480400004505c70048043b004505c70048043b004505c70048043b
004505c70048043b004505c70048043b004505c7000b0400000205c7000b
040000020635000b045600020635000b045600020635000b045600020635
000b045600020635000b0456000205c700130400000c05c700130400000c
05c700130400000c05c70010038d004902aa00330239000605c700480400
004505c7000b0400000205c7000b0400000205c7000b0400000205c7000b
0400000205c7000b040000020000ff090000ff090000ff090000ff0904a0
00230348001f072b0012058700170556002503e3002e0556002503e3002e
05c700230448002e05c700130400000205c700130400000205c7000f0400
001b0533fffa0406001e053300250400000d05c7002b038d004c05c70048
0400004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4
001001f4001b01f4001001f4006b01f4fff90227ffce01a8000f01a8fff5
02aa00a402aa00a401a8000e01a8005601a800560000ffcf01a8000f01d6
ffbf01a8fff501d6ffcd01a8001d01d6fff501a8009301d6001303750032
037500320375003203750032051b003204b5002405b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3
005f02b3005f02b3005f02b3005f02b3003802b3003802b3004902b30049
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7
ffba045a002a039a00360435ffba0327ffba064f0027064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba04a7004604a7004604a7004604a70046067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327
ffba04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047
040d004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba0435
0045043500450435004504350045043500450435004501f4ffba01f4ffba
04350045043500450481003604350036043dffba043dffba024200360300
fff7031a001a031a001a031a001a03750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032051bffba04b5ffba051b0032
04b5002401f4ffba01f4ffba0375003203750032051b003204b5002401f4
ffba01f4ffba051b003204b50024067f0045067f0045067f0045067f0045
01a800280000fe290000fea20000ff300000ff1d0000ff120000ff920000
fe7e08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e
0000ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000
ff580000ff640692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b4
00230242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b1
01f4006d067f001407760014022200430000fee702bc000004440043045a
fff504cefff5045a005304ce0041045a005304ce0041045a005304ce0041
045a005304ce0041045a005304ce0041045a005304ce0041043500710435
00ad045a000f04ce000f0000000000000076000000760000007600000076
0000013000000228000003f60000062e0000083a00000a6e00000af20000
0b7600000bf800000dd000000ea000000f3e00000f9800000ff000001062
0000119400001278000014480000162600001738000018c400001a3e0000
1b3400001d4800001ece00001f5e0000202c0000214a000021ec0000231c
0000248c0000276e000029f600002d1a00002e9400003006000031d80000
338800003582000037bc000038de00003a3200003da800003ebe0000411a
00004354000044700000466a000047f200004a9200004d8c00004ee20000
50ea0000536c0000574200005b3a00005da000005eea00005f9200006014
000060be000061a6000061e200006238000066320000687600006ad40000
6da6000071860000740a000078a200007bd200007e88000080ca00008534
0000871000008bda00008f42000091ae0000947a000096d4000099040000
9dc80000a01e0000a2c20000a5f00000aa520000aeec0000b1aa0000b3a6
0000b49a0000b5080000b5fa0000b6b80000b7080000b73a0000b7860000
b7bc0000b7f80000b82e0000b8780000b8ae0000b8ee0000b9360000b976
0000b9a40000b9da0000ba060000ba3a0000ba760000bab80000baee0000
bb280000bb580000bb900000bbc80000bc040000bc3c0000bc6e0000bcac
0000bce80000bd260000bd600000bd960000bddc0000be200000bf7c0000
c0540000c24a0000c4b40000c71c0000c7780000c8140000c9b00000ccc8
0000ceca0000d1360000d18e0000d2240000d3880000d5a40000d7480000
d89c0000d99e0000dada0000dc360000de6c0000dfee0000e1160000e1f0
0000e2da0000e4040000e4ea0000e6800000e76e0000e9020000ec6c0000
ee8e0000efea0000f0920000f0ea0000f1b00000f3320000f49a0000f548
0000f5e00000f67c0000f77e0000f7ba0000f7f80000f82e0000fa6e0000
fe020000fe3a0000fe720000ff780000ff9e0001004a000100ec000101d0
000102e20001032c0001035e000103ba0001052000010584000105e40001
084800010a7000010d0a00010d5a00010d7c00010e9000011168000111b0
000112040001124200011282000112b2000112e60001133a000113800001
13b2000113e60001141e0001145000011480000114c6000114f600011664
000116e0000117a2000117de0001185a000118b4000119ce00011aa40001
1b4200011bc600011c3000011da800011fae00011fec0001202a00012062
000120ac0001213000012276000124ba000124ea0001252c000126a80001
289c000128e200012a0400012abc00012bda00012d0000012efe0001308e
0001327c000134400001347a000134b6000134e60001352c000135800001
35bc000135fc000136380001366c000139100001394e000139b8000139f6
00013a3800013a6600013aae00013ae600013d9400013ebe00013eea0001
3f1c00013f5400013f9200013fc200013ff600014124000142c8000142fc
0001433000014366000143a4000143e600014422000144540001449a0001
44d0000145060001454400014578000145bc000145f8000147680001497a
000149be00014c0a00014c4c00014c7e00014cb600014ce800014d180001
4d4e00014d8e00014dce00014e7000015038000151c0000152d000015472
000155d6000156c0000157cc00015932000159a4000159d800015b240001
5e4600015ef200015fb600016064000161220001623e00016356000164b2
0001650e0001664a000167300001680e0001686c000168f0000169760001
69b8000169f400016a4400016a9400016ae400016b3600016b9600016bf6
00016c5800016cbe00016d4800016db000016e1600016e8c00016f020001
6f90000170060001707a000171060001717c000171f600017284000172fc
00017372000174000001748400017508000175c60001764e000176de0001
779800017826000178b00001796e000179fe00017a8a00017b4800017c22
00017d0200017e2400017e6800017ea400017ee200017f2600017f6a0001
839200018b260001925400019290000192ce000193140001935c000193a2
000193e8000194d00001955800019626000197d20001993400019b6c0001
9c5a00019d8400019e7e00019f960001a0340001a0b80001a1660001a234
0001a28e0001a33c0001a3be0001a42a0001a45e0001a5e80001a7420001
a7ba0001a8080001a8880001a8ec0001a9720001a9ae0001a9e00001aa16
0001aa540001aa960001aac40001ab080001ab360001ab700001ab9e0001
abd60001ac040001ac500001ac980001acd80001ad080001ad340001ad6a
0001ad9a0001add00001afbe0001b2720001b2a20001b2ec0001b31e0001
b3640001b3940001b3ce0001b3fa0001b4280001b4660001b6080001b63e
0001b66e0001b8900001b8b60001b9060001b9300001b9600001baaa0001
bc4e0001bc840001bcba0001bcee0001bd320001bd580001bd880001bdb8
0001bdea0001bf420001c12e0001c15e0001c1920001c1c40001c1f80001
c2280001c2580001c2860001c2b40001c2e40001c3180001c3480001c378
0001c4660001c4a60001c4e60001c5160001c5460001c5760001c5a60001
c5f00001c6200001c6500001c6800001c6b00001c6e40001c7180001c74e
0001c7880001c7fe0001c8380001ca100001cade0001cce80001cf680001
d1b60001d3bc0001d4360001d4d00001d4e00001d5f40001d6200001d7a2
0001d9080001d9ca0001da040001db780001dbb20001dbee0001dbfe0001
dc0e0001dd260001dd360001dd460001dd560001dd660001dd760001dee0
0001def00001df000001e0840001e0940001e19a0001e1aa0001e2b20001
e2c20001e2d20001e2e20001e4500001e60a0001e63e0001e6700001e6a0
0001e6d00001e7000001e72e0001e7640001e9000001e9f60001eb960001
ecbc0001edee0001eeec0001f09a0001f1dc0001f3420001f4480001f642
0001f6520001f7ac0001f8fa0001fa1a0001fb9e0001fd2a0001febc0001
fef40001ff2a0001ff620001ff920001ffc20001fff60002016800020198
000202be000202ce000202de000203120002032200020488000206640002
07f20002082200020a0200020b6000020b7000020c9200020ca200020d44
00020e7200020e820002112a000212c60002143e0002161e000217980002
188a0002189a000218aa000218ba000218ca000218da000218ea000218fa
00021a6400021c1200021c2200021d5600021ea60002208e0002229a0002
23d60002254e0002264600022680000227c2000227f2000228020002296e
00022b0a00022bf000022d6600022d760002303e0002319e0002337e0002
35d4000237e60002394a00023b9200023d3e00023d4e00023eb000023ec0
00023ed000023fda00023fea00024202000242120002439e000245160002
46f80002491000024a9200024c8a00024dcc00024e0600024fc00002516e
000251b4000253c4000253f2000255340002554400025554000255900002
55a00002577e0002599400025bdc00025c0c00025e7800026018000260b6
00026194000261da0002639800026522000265c000026728000267f00002
69140002696a00026a0400026af000026b2400026bca00026c2000026d1e
00026d7400026db400026df600026e3200026e6400026eae00026ef60002
6f7e0002716e0002724400027352000274280002754e000275e2000276b0
000277d20002795e000279f800027ab200027b6600027c9800027d7c0002
7eca00027f780002805200028142000282fa0002841000028536000286ee
000288b8000289f800028aa200028cc000028de200028efe000290240002
914a000291a4000292540002938c000293be000294040002945200029496
0002950600029684000296b2000296e00002970e0002973c0002976a0002
979800029a4000029a7800029ac600029b0400029b5000029bb000029cba
00029cee00029df000029e2800029e6200029ea800029eec00029f300002
9f5e0002a0f80002a2a00002a2e60002a33c0002a3740002a5fc0002a630
0002a65e0002a68c0002a6b80002a6ea0002a9340002a95e0002aa7a0002
ab2c0002abd80002ac5a0002ad160002ae2e0002af3c0002af700002aff6
0002b1520002b1d40002b21e0002b3280002b3700002b4740002b4f00002
b5480002b5ca0002b6b60002b7cc0002b8ba0002b9640002ba640002bb44
0002bc340002bd1c0002bdcc0002be4e0002c0ac0002c0d60002c1000002
c1b80002c1e20002c3240002c42a0002c5140002c53e0002c5680002c592
0002c5bc0002c5e60002c7660002c7900002c7ba0002c7e40002c80e0002
c8380002c8620002c88c0002c8b60002c8ea0002c9140002c93e0002c968
0002cae20002caf20002cc0c0002cc1c0002cc460002cc700002cc9a0002
ccc40002ce6c0002d07c0002d1aa0002d1ba0002d3360002d3460002d48c
0002d6580002d75e0002d8de0002da860002dcb20002de140002dffe0002
e1420002e2700002e29a0002e2c40002e2ee0002e3180002e3420002e36c
0002e3960002e3c00002e3ea0002e4140002e43e0002e4680002e4920002
e4bc0002e4e60002e5100002e74c0002e8c80002ea0c0002ebf40002ed3c
0002ed660002ed900002edba0002ede40002ee0e0002ee380002ee620002
ee8c0002eeb60002eee00002ef0a0002ef340002ef5e0002ef880002efb2
0002efdc0002f0060002f0300002f26c0002f5b20002f5dc0002f6060002
f6300002f65a0002f6840002f6ae0002f6d80002f7020002f72c0002f756
0002f7800002f7aa0002f7d40002f7fe0002f8280002f8520002f87c0002
f8a60002f8d00002f8fa0002f9240002f94e0002f9780002f9a20002f9cc
0002f9f60002fa200002fa4a0002fae40002fafa0002fb240002fe040002
fe140002ff2e000300500003018e000302d00003047600030486000305c8
000307180003090800030adc00030bf400030c0400030c8600030d140003
0e1400030e2400030ec400030ed400030fea0003113e0003126e0003127e
0003134c0003135c000314d2000314e2000315f6000316060003173a0003
18d00003198c0003199c00031a9a00031bf400031c8000031c9000031dba
00031f460003200200032012000320aa000320ba00032186000321960003
226e0003227e00032386000323960003255c0003256c000326c4000326d4
0003293e0003294e00032b4800032b5800032cc200032cd200032dc20003
2dd200032f6a00032f7a00033098000330a8000331e8000331f800033208
0003321800033390000333a0000333b0000333c000033512000336620003
3730000338140003399400033b1800033c1800033d2c00033e7000033e80
00033f6e00034048000341e4000341f40003431200034418000346100003
462000034630000346400003478a0003479a000348520003486200034970
0003498000034a6c00034a7c00034b9a00034baa00034c4800034c580003
4c6800034d5600034eca00034ff6000350f0000351000003511000035120
000352be000354780003554600035556000357b600035a0000035c860003
5eee00036174000363ea000365ba000367740003679e000367c8000367d8
000367e8000368120003683c000368660003687600036886000368b00003
68da000368ea000368fa000369240003694e000369780003698800036998
000369a8000369b8000369c8000369d800036a0200036a1200036a220003
6a4c00036a7600036aa000036aca00036af400036b1e00036b4800036b72
00036b9c00036bc600036bf000036c1a00036c4400036c6e00036c980003
6cc200036cec00036d1600036d4000036d6a00036d9400036dbe00036de8
00036e1200036e3c00036e6600036e9000036eba00036ee400036f0e0003
6f3800036f6200036f8c00036fb600036fe00003700a000370340003705e
00037088000370b2000370dc00037106000371300003715a000371840003
71ae000371d8000372020003722c0003725600037280000372aa000372d4
000372fe0003739e000373e20003745800037482000374ac000374d60003
75000003752a000375540003757e000375a8000375d2000375fc00037626
000376500003767a000376a4000376ce000376f8000377220003774c0003
7776000377a0000377ca000377f40003781e000378480003787c000378b0
000378e400037a9200037ca200037e92000380a0000381320003818c0003
81f600038290000383200003839000038464000385520003862600038716
000387b0000388840003891e000389cc00038a7200038ac400038c220003
8c7000038cbe00038d1600038d6e00038dc000038e1200038ece00038f8a
00039020000390b60003914c000391e80003928400039320000393320003
934400039356000393680003937a000393d400039434000394d0000394e2
000394f4000395040003951400039526000395380003954a0003955c0003
956e000395800003961c000396b20003974e000397e40003990000039926
0003994c000399720003999c000399d800039a4600039a8e00039b040003
9b4400039bb000039bec00039c5000039c8800039cec00039d2c00039d82
00039dc200039e2e00039e7800039ed000039f0800039f5a00039f920003
9fe60003a0140003a03a0003a0640003a09e0003a0ce0003a0fe0003a154
0003a1b60003a21a0003a2820003a2ea0003a34a0003a39c0003a3f40003
a44e0003a4a60003a4d60003a5140003a53a0003a56e0003a5980003a5be
0003a5e40003a60a0003a6460003a69e0003a6fa0003a75c0003a7ae0003
a80c0003a8440003a8940003a8d00003a9200003a9500003a9880003a9b8
0003a9ec0003aa120003aa380003aa680003aa980003aabe0003aae40003
ab0e0003ab3a0003ab600003ab9c0003abcc0003abfc0003ac2c0003ac5c
0003ac820003acbe0003acee0003ad2e0003ad580003ad840003adb60003
ade00003ae0c0003ae3a0003ae700003aeae0003aef60003af340003af64
0003afb40003afee0003b0300003b0600003b0b60003b0e00003b1ac0003
b1d60003b2960003b2c00003b3760003b3a00003b4640003b5580003b686
0003b7ee0003b91e0003b9fa0003bb1e0003bdda0003c0ce0003c27e0003
c4b00003c6d20003c9c20003cb6e0003cd6a0003cd7a0003cede0003d14c
0003d2d20003d6c60003d9dc0003db8a0003dd7e0003dee60003def60003
e05c0003e1d00003e2e00003e4520003e52c0003e5a20003e6580003e6fe
0003e86e0003e8a60003e9200003e9e20003ea9c0003eb040003ec0a0003
ed400003ee0e0003ef6c0003efe60003f0600003f1280003f1e20003f296
0003f2f20003f34c0003f3940003f4040003f4800003f4ca0003f5040003
f54a0003f58e0003f5e00003f6320003f6b40003f7360003f7780003f7b8
0003f7ee0003f8240003f8520003f8800003f8b40003f8e80003f92a0003
f96c0003f9a80003f9e40003fa1e0003fa580003fa8a0003fabc0003faee
0003fb200003fb5a0003fb940003fbd60003fc180003fc5a0003fc9c0003
fcea0003fd380003fd7a0003fdbc0003fdfc0003fe3c0003fe760003feb0
0003fefc0003ff480003ff860003ffc60004000c000400520004008e0004
00e4000401200004015c0004019c000401dc000402180004025400040294
000402d4000403180004035c000403b00004043e00040480000404c20004
052a00040592000405c4000405f60004062e00040666000406fc00040792
000407dc00040826000408620004089e000408f40004094a000409940004
09de00040a3600040a8e00040ace00040b0e00040b4600040b7e00040bc8
00040c1200040c5000040c8e00040cd000040d1200040d6600040dba0004
0e0000040e4600040e8c00040ed200040f2800040f7e00040fd40004102a
00041076000410c20004110e0004115a000411ce00041242000412b60004
132a00041368000413a6000413e400041422000414600004149e000414e2
0004152600041572000415be0004161e0004166a000416a8000416f60004
180600041856000418a6000418de000419160004196c000419c200041a36
00041a9a00041adc00041b1e00041b7400041bc200041c0e00041c5a0004
1c9a00041cda00041d2200041d6a00041dd600041e3000041e6800041ea0
00041ee000041f200004203a000421800004227000042380000423d60004
242c0004247e000424d2000425360004259a000425f000042646000426bc
0004273200042774000427b6000427f80004283a0004287c000428be0004
29140004296a000429bc00042a1000042a9800042b1a00042bba00042c5c
00042c9a00042cd800042d1600042d5200042d9000042dce00042e0c0004
2e4800042f2c000430180004312e0004324a00043314000433de000434d8
000435d2000436d0000437ce000438ec00043a0a00043b3000043c560004
3d5800043e5a00043eec00043f7e00043fbc00043ffa00044054000440ae
000440e60004411e0004422e0004423e00044286000442ce000443260004
437e000443b0000443e20004442400044466000444a0000444da0004451e
00044562000445da00044654000446e40004472800044768000447ea0004
486c000449c4000449d400044a2200044a7000044aac00044ae800044b2e
00044b7400044bc200044c1000044c6000044cb000044d0c00044d680004
4ede000450460004507e000450b80004510400045150000451a2000451f4
000452460004529c000452d8000453140004536a000453be000454f60004
5596000455e4000456240004565e000457f400045a5c00045b2000045cb6
00045e1400045ee200046088000462dc000465140004655a0004658c0004
66360004675a0004677e000468180004692400046a3400046b4400046c52
00046dd800046e0a00046eac00046ed400046f3600046f9800046ffa0004
705c0004709a000470d8000471120004714c00047178000471c4000471fe
0004723800047394000474e8000474f8000475b6000476ec0004774a0004
7862000479f000047a9600047bdc00047c1a00047c5800047c9000047ce8
00047d1400047d5600047dba00047e0200047e6400047ec400047f360004
7fb20004802e000480b00004813c000481c800048252000482d20004830c
00048348000484ac00048576000485a6000485d600010000068a00f2003c
0076000700020010002f0056000005ca0f130003000200000047035a0000
00030000000000fe00000000000300000001001e00fe0000000300000002
000e02080000000300000003007201d60000000300000004001e00fe0000
000300000005001802180000000300000006002202480000000300000007
00d800fe0000000300000008002602f600000003000000090086091e0000
00030000000a055609a4000000030000000b00720efa000000030000000c
00660f6c000000030000000d06b4026a000000030000000e005c0fd20001
000000000000007f102e0001000000000001000f10ad0001000000000002
000711320001000000000003003911190001000000000004000f10ad0001
000000000005000c113a0001000000000006001111520001000000000007
006c10ad0001000000000008001311a90001000000000009004314bd0001
00000000000a02ab1500000100000000000b003917ab000100000000000c
003317e4000100000000000d035a1163000100000000000e002e18170003
000104030002000c18450003000104050002001018550003000104060002
000c18650003000104070002001018710003000104080002001018810003
00010409000000fe00000003000104090001001e00fe0003000104090002
000e02080003000104090003007201d60003000104090004001e00fe0003
000104090005001802180003000104090006002202480003000104090007
00d800fe0003000104090008002602f600030001040900090086091e0003
00010409000a055609a4000300010409000b00720efa000300010409000c
00660f6c000300010409000d06b4026a000300010409000e005c0fd20003
0001040a0002000c184500030001040b00020010189100030001040c0002
000c184500030001040e0002000c18a10003000104100002000e18b10003
000104130002001218bf0003000104140002000c18450003000104150002
001018450003000104160002000c18450003000104190002000e18d10003
0001041b0002001018a100030001041d0002000c184500030001041f0002
000c18450003000104240002000e18df00030001042a0002000e18ed0003
0001042d0002000e18fb00030001080a0002000c18450003000108160002
000c1845000300010c0a0002000c1845000300010c0c0002000c18450003
00010f0000070066190900540079007000650066006100630065002000a9
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200070006c0063002e
00200044006100740061002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002f005400790070006500200053006f006c
007500740069006f006e007300200049006e0063002e0020003100390039
0030002d0031003900390032002e00200041006c006c0020005200690067
00680074007300200052006500730065007200760065006400540069006d
006500730020004e0065007700200052006f006d0061006e00ae00200054
0072006100640065006d00610072006b0020006f00660020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e00200070006c006300200072006500670069
00730074006500720065006400200069006e002000740068006500200055
005300200050006100740020002600200054004d0020004f00660066002e
00200061006e006400200065006c0073006500770068006500720065002e
004d006f006e006f0074007900700065003a00540069006d006500730020
004e0065007700200052006f006d0061006e00200052006500670075006c
00610072003a00560065007200730069006f006e00200033002e00300030
00200028004d006900630072006f0073006f00660074002900540069006d
00650073004e006500770052006f006d0061006e00500053004d0054004e
004f00540049004600490043004100540049004f004e0020004f00460020
004c004900430045004e00530045002000410047005200450045004d0045
004e0054000d000a000d000a005400680069007300200074007900700065
00660061006300650020006900730020007400680065002000700072006f
007000650072007400790020006f00660020004d006f006e006f00740079
007000650020005400790070006f00670072006100700068007900200061
006e00640020006900740073002000750073006500200062007900200079
006f007500200069007300200063006f0076006500720065006400200075
006e00640065007200200074006800650020007400650072006d00730020
006f0066002000610020006c006900630065006e00730065002000610067
007200650065006d0065006e0074002e00200059006f0075002000680061
007600650020006f0062007400610069006e006500640020007400680069
007300200074007900700065006600610063006500200073006f00660074
007700610072006500200065006900740068006500720020006400690072
006500630074006c0079002000660072006f006d0020004d006f006e006f
00740079007000650020006f007200200074006f00670065007400680065
00720020007700690074006800200073006f006600740077006100720065
002000640069007300740072006900620075007400650064002000620079
0020006f006e00650020006f00660020004d006f006e006f007400790070
0065002700730020006c006900630065006e0073006500650073002e000d
000a000d000a005400680069007300200073006f00660074007700610072
006500200069007300200061002000760061006c007500610062006c0065
0020006100730073006500740020006f00660020004d006f006e006f0074
007900700065002e00200055006e006c00650073007300200079006f0075
0020006800610076006500200065006e0074006500720065006400200069
006e0074006f002000610020007300700065006300690066006900630020
006c006900630065006e00730065002000610067007200650065006d0065
006e00740020006700720061006e00740069006e006700200079006f0075
0020006100640064006900740069006f006e0061006c0020007200690067
006800740073002c00200079006f0075007200200075007300650020006f
00660020007400680069007300200073006f006600740077006100720065
0020006900730020006c0069006d006900740065006400200074006f0020
0079006f0075007200200077006f0072006b00730074006100740069006f
006e00200066006f007200200079006f007500720020006f0077006e0020
007000750062006c0069007300680069006e00670020007500730065002e
00200059006f00750020006d006100790020006e006f007400200063006f
007000790020006f00720020006400690073007400720069006200750074
00650020007400680069007300200073006f006600740077006100720065
002e000d000a000d000a0049006600200079006f00750020006800610076
006500200061006e00790020007100750065007300740069006f006e0020
0063006f006e006300650072006e0069006e006700200079006f00750072
002000720069006700680074007300200079006f0075002000730068006f
0075006c0064002000720065007600690065007700200074006800650020
006c006900630065006e00730065002000610067007200650065006d0065
006e007400200079006f0075002000720065006300650069007600650064
00200077006900740068002000740068006500200073006f006600740077
0061007200650020006f007200200063006f006e00740061006300740020
004d006f006e006f007400790070006500200066006f0072002000610020
0063006f007000790020006f006600200074006800650020006c00690063
0065006e00730065002000610067007200650065006d0065006e0074002e
000d000a000d000a004d006f006e006f0074007900700065002000630061
006e00200062006500200063006f006e0074006100630074006500640020
00610074003a000d000a000d000a0055005300410020002d002000280038
0034003700290020003700310038002d0030003400300030000900090055
004b0020002d002000300031003100340034002000300031003700330037
0020003700360035003900350039000d000a0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d004d006f006e006f007400790070006500200054007900700065
002000440072006100770069006e00670020004f00660066006900630065
0020002d0020005300740061006e006c006500790020004d006f00720069
0073006f006e002c00200056006900630074006f00720020004c00610072
00640065006e007400200031003900330032005400680069007300200072
0065006d00610072006b00610062006c0065002000740079007000650066
006100630065002000660069007200730074002000610070007000650061
00720065006400200069006e0020003100390033003200200069006e0020
005400680065002000540069006d006500730020006f00660020004c006f
006e0064006f006e0020006e00650077007300700061007000650072002c
00200066006f007200200077006800690063006800200069007400200077
00610073002000640065007300690067006e00650064002e002000200049
00740020006800610073002000730075006200730065007100750065006e
0074006c00790020006200650063006f006d00650020006f006e00650020
006f0066002000740068006500200077006f0072006c006400730020006d
006f007300740020007300750063006300650073007300660075006c0020
00740079007000650020006300720065006100740069006f006e0073002e
002000200054006800650020006f0072006900670069006e0061006c0020
00640072006100770069006e00670073002000770065007200650020006d
00610064006500200075006e0064006500720020005300740061006e006c
006500790020004d006f007200690073006f006e00270073002000640069
00720065006300740069006f006e00200062007900200056006900630074
006f00720020004c0061007200640065006e007400200061007400200054
00680065002000540069006d00650073002e002000200049007400200074
00680065006e002000770065006e00740020007400680072006f00750067
006800200061006e00200065007800740065006e00730069007600650020
006900740065007200610074006900760065002000700072006f00630065
0073007300200069006e0076006f006c00760069006e0067002000660075
0072007400680065007200200077006f0072006b00200069006e0020004d
006f006e006f007400790070006500270073002000540079007000650020
00440072006100770069006e00670020004f00660066006900630065002e
00200020004200610073006500640020006f006e00200065007800700065
00720069006d0065006e007400730020004d006f007200690073006f006e
002000680061006400200063006f006e0064007500630074006500640020
007500730069006e00670020005000650072007000650074007500610020
0061006e006400200050006c0061006e00740069006e002c002000690074
00200068006100730020006d0061006e00790020006f006c006400200073
00740079006c006500200063006800610072006100630074006500720069
007300740069006300730020006200750074002000770061007300200061
00640061007000740065006400200074006f002000670069007600650020
0065007800630065006c006c0065006e00740020006c0065006700690062
0069006c00690074007900200063006f00750070006c0065006400200077
00690074006800200067006f006f0064002000650063006f006e006f006d
0079002e002000200057006900640065006c007900200075007300650064
00200069006e00200062006f006f006b007300200061006e00640020006d
006100670061007a0069006e00650073002c00200066006f007200200072
00650070006f007200740073002c0020006f006600660069006300650020
0064006f00630075006d0065006e0074007300200061006e006400200061
006c0073006f00200066006f007200200064006900730070006c00610079
00200061006e00640020006100640076006500720074006900730069006e
0067002e0068007400740070003a002f002f007700770077002e006d006f
006e006f0074007900700065002e0063006f006d002f00680074006d006c
002f006d0074006e0061006d0065002f006d0073005f00740069006d0065
0073006e006500770072006f006d0061006e002e00680074006d006c0068
007400740070003a002f002f007700770077002e006d006f006e006f0074
007900700065002e0063006f006d002f00680074006d006c002f006d0074
006e0061006d0065002f006d0073005f00770065006c0063006f006d0065
002e00680074006d006c0068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f0074007900700065002f006c006900630065006e0073
0065002e00680074006d006c547970656661636520a920546865204d6f6e
6f7479706520436f72706f726174696f6e20706c632e204461746120a920
546865204d6f6e6f7479706520436f72706f726174696f6e20706c632f54
79706520536f6c7574696f6e7320496e632e20313939302d313939322e20
416c6c2052696768747320526573657276656454696d6573204e65772052
6f6d616ea82054726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e20706c6320726567697374657265642069
6e2074686520555320506174202620544d204f66662e20616e6420656c73
6577686572652e4d6f6e6f747970653a54696d6573204e657720526f6d61
6e20526567756c61723a56657273696f6e20332e303020284d6963726f73
6f66742954696d65734e6577526f6d616e50534d544e4f54494649434154
494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a5468
6973207479706566616365206973207468652070726f7065727479206f66
204d6f6e6f74797065205479706f67726170687920616e64206974732075
736520627920796f7520697320636f766572656420756e64657220746865
207465726d73206f662061206c6963656e73652061677265656d656e742e
20596f752068617665206f627461696e6564207468697320747970656661
636520736f66747761726520656974686572206469726563746c79206672
6f6d204d6f6e6f74797065206f7220746f67657468657220776974682073
6f667477617265206469737472696275746564206279206f6e65206f6620
4d6f6e6f747970652773206c6963656e736565732e0d0a0d0a5468697320
736f66747761726520697320612076616c7561626c65206173736574206f
66204d6f6e6f747970652e20556e6c65737320796f75206861766520656e
746572656420696e746f2061207370656369666963206c6963656e736520
61677265656d656e74206772616e74696e6720796f75206164646974696f
6e616c207269676874732c20796f757220757365206f6620746869732073
6f667477617265206973206c696d6974656420746f20796f757220776f72
6b73746174696f6e20666f7220796f7572206f776e207075626c69736869
6e67207573652e20596f75206d6179206e6f7420636f7079206f72206469
7374726962757465207468697320736f6674776172652e0d0a0d0a496620
796f75206861766520616e79207175657374696f6e20636f6e6365726e69
6e6720796f75722072696768747320796f752073686f756c642072657669
657720746865206c6963656e73652061677265656d656e7420796f752072
6563656976656420776974682074686520736f667477617265206f722063
6f6e74616374204d6f6e6f7479706520666f72206120636f7079206f6620
746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e6f
747970652063616e20626520636f6e7461637465642061743a0d0a0d0a55
5341202d202838343729203731382d303430300909554b202d2030313134
34203031373337203736353935390d0a687474703a2f2f7777772e6d6f6e
6f747970652e636f6d4d6f6e6f7479706520547970652044726177696e67
204f6666696365202d205374616e6c6579204d6f7269736f6e2c20566963
746f72204c617264656e742031393332546869732072656d61726b61626c
6520747970656661636520666972737420617070656172656420696e2031
39333220696e205468652054696d6573206f66204c6f6e646f6e206e6577
7370617065722c20666f7220776869636820697420776173206465736967
6e65642e20204974206861732073756273657175656e746c79206265636f
6d65206f6e65206f662074686520776f726c6473206d6f73742073756363
65737366756c2074797065206372656174696f6e732e2020546865206f72
6967696e616c2064726177696e67732077657265206d61646520756e6465
72205374616e6c6579204d6f7269736f6e277320646972656374696f6e20
627920566963746f72204c617264656e74206174205468652054696d6573
2e20204974207468656e2077656e74207468726f75676820616e20657874
656e73697665206974657261746976652070726f6365737320696e766f6c
76696e67206675727468657220776f726b20696e204d6f6e6f7479706527
7320547970652044726177696e67204f66666963652e2020426173656420
6f6e206578706572696d656e7473204d6f7269736f6e2068616420636f6e
647563746564207573696e6720506572706574756120616e6420506c616e
74696e2c20697420686173206d616e79206f6c64207374796c6520636861
726163746572697374696373206275742077617320616461707465642074
6f206769766520657863656c6c656e74206c65676962696c69747920636f
75706c6564207769746820676f6f642065636f6e6f6d792e202057696465
6c79207573656420696e20626f6f6b7320616e64206d6167617a696e6573
2c20666f72207265706f7274732c206f666669636520646f63756d656e74
7320616e6420616c736f20666f7220646973706c617920616e6420616476
6572746973696e672e687474703a2f2f7777772e6d6f6e6f747970652e63
6f6d2f68746d6c2f6d746e616d652f6d735f74696d65736e6577726f6d61
6e2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f
68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c687474
703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f74797065
2f6c6963656e73652e68746d6c004e006f0072006d0061006c006e007900
6f00620079010d0065006a006e00e9006e006f0072006d0061006c005300
740061006e0064006100720064039a03b103bd03bf03bd03b903ba03ac00
4e006f0072006d00610061006c0069004e006f0072006d00e1006c006e00
65004e006f0072006d0061006c0065005300740061006e00640061006100
720064041e0431044b0447043d044b0439004e0061007600610064006e00
6f0074006801b001a10300006e00670041007200720075006e0074006100
490061006e005000200053007500730061006e004c002000470057006100
6400650020004d0069006b00650044007500200047007200650067004800
200045006c0069004b002000500050006100740068006500200026002000
52006f0062004e006f002e000000ba0054ffc003e1b345453240b803e1b3
2b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fff
c003dfb2161b32b9ffc003deb2424232b9ffc003deb2363832b9ffc003de
b32a2d32df410a03de00ef03de000203de03df0028001fffc003dfb3282e
32f0410d03df0001037e000f0101001f00a003dd00b003dd0002004003da
b32426329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c7
03b70012001f03b603b50064001fffc003b5b30e1132004173038d000100
c0038d00d0038d00e0038d00f0038d0004006f03a7007f03a7008f03a700
af03a70004000f03a7001f03a7002f03a7004f03a7000403ab03ab00ef03
a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03
aa000103a8036a0022001f038c03940015001f038b03930015001f03a403
93001a001f03a20394001e001f03a10393001e001f039f0394001e001f03
9b0394001a001f039a0393001e001f039903940016001f03980394001600
1f03970393001b001f03960394001b001f03950393001b001f0376037500
1a001f03740375001a001f03a00373b21e1f10411e039300200393003003
93000300200394003003940040039400030000039400010383036c001e00
1f03b1036c0032001f036d036c0032001fffc0037db2212332b9ffc0037d
b3171932a0410a037d00b0037d00c0037d00d0037d0004ffc0037cb22123
32b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c000400
300373004003730002000003730010037300200373000300e0037300f003
73000200b0037300c0037300d003730003008403730090037300a0037300
030377036a0029001f0389036ab2281f40b80367b33940323fbb03660001
00400366b3191d328fbb0366000100400366b3090a3240b80366b3090e32
40b80366b3090f323fbb0365000100400365b3090c3240b80365b31a1d32
40b80365b3090e326b410e0363007b036300020014036300240363003403
630044036300040363b2242f1fba034e006d0800400e1f7f027f037f047f
050430440112bf033200500800001f0012032d003c080040291f5f3c0137
6009700980090310092009300940095009056f037f038f03031f032f033f
034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd0
0b05b006c006d006e006f0060520063006400650066006700680069006a0
06099006900702600b700b800b03100b200b300b400b500b051f0701a041
850362000100000362001003620070036200900362000400f0035f000100
20035e0020035f0030035f0040035e00040000035e0000035f0010035f00
d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0030f00
050000030f0010030f0050030f0060030f0070030f00d0030f0006000003
0f0010030f0020030f0030030f00e0030f00f0030f0006030f0027000003
0e0030030e000200e0030e00f0030e0002030e004a00e0030d00f0030d00
02030d002700d002fc0001001002fc002002fc005002fc000300d002fc00
e002fc0002000002fc001002fc002002fc003002fc005002fc006002fc00
0600e002fc00f002fc0002002002fc003002fc004002fc000302fc406127
c02901b02901a02901902901403c3f413240223f41321212125f235f255f
285fa5046f236f256f286fa5044f234f254f284fa5043f233f253f283fa5
042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c
6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32
370f413b02af0001005f02af009f02af00df02af0003001f02af002f02af
003f02af006f02af000402af02af001f02ad002f02ad003f02ad004f02ad
005f02ad000500df02ad0001000f02ad001f02ad003f02ad005f02ad009f
02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad00030040
02acb23a334f414a02ac005f02ac009f02ac0003002f02ac003f02ac0002
000f02ac003f02ac00af02ac000300b002ac00e002ac0002004f02ac005f
02ac00a002ac0003001f02ac002f02ac003f02ac0003000f035a0001000f
035a001f035a003f035a005f035a0070035a000500cf035700df03570002
000f0357001f03570070035700af03570004035a035a0357035702ad02ad
02ac02ac032c400d31151f001616000000121108104110020c004a000d01
a8004a000d0198004a000d0189004a000d013f004a000d0124400e4a0df6
4a0dbe4a0d864a0d274a0dbe02280041000d01940041000d0121400b410d
b4410d4f410d29410d411002170021000d02150021000d02060021000d01
eb0021000d014e0021000d012c4014210df9210df3210df1210d9d210d71
210d3d210d4110021c001f000d0214001f000d020b001f000d0196001f00
0d014a001f000d0126400b1f0dc61f0d571f0d371f0d410d019e0141000d
00420141000d001e0141000d001b0141000d01f2b40f440f0009bb01f200
44000d0201b23c291fb80200b23c291fb801ffb23c411fb801feb23c471f
b801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224e41f41
1501f401490401001f01f301490401001f01f1014900ab001f01f0014900
67001f01a6003c0125001f01a4b23c811f411501a3010f019a001f01a200
220801001f01a100500401001f019f0149019a001f019d01490067001f01
9cb22c621fb8019bb22c791fbc019a002c0101001f0197b22ce41fb80193
b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f4111016700
240201001f0163002502ab001f014c010f019a001f01480149006c001f01
47b22c891fb80145b22c9e1fb80144b22c791fb80143b223311fb80127b2
3c811fbc012300500101001f011fb223e41f4115011d0023019a001f011c
00230801001f011b00250801001f010e010f0401001f010d00220401001f
0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1fe3bc01
490156001f00e20149b2ab1fd1b901490401b21fcf2cb80125b61fce23bb
1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb124e41fb0b90149
0201b61faf2c671fad23b80801b21fa523b80201400b1f9f3c2d1f9b235a
1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e1f4c3c
ab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b80149b3
ab1f3124b80401b21f3025b802abb61f2a24e41f2623b80156b21f5537ba
023500070175402c0774076207560751073b0733072d0720071d071c0714
08120810080e080c080a080808060804080208000814b8ffe0402b000001
001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b534201b0124b004b5442b0372b4b
b807ff52b0382b4bb008505b58b101018e59b0382bb00288b801005458b8
01ffb101018e851bb0124358b90001012f858d1bb90001017c858d595901
4bb0c063004b6220b0f65323b8010a515ab0052342180016763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b90271026f4544
b90270026f45445958b9017a0271455258b90271017a4459594bb0475320
5c58b9002202704544b9003c027045445958b901b30022455258b9002201
b34459594bb04c53205c58b9014900224544b1222245445958b901c20149
455258b9014901c24459594bb06753205c58b9002402714544b900500271
45445958b9021e0024455258b90024021e4459594bb8020153205c58b901
0f00224544b1222245445958b90c00010f455258b9010f0c004459594bb0
1c53205c58b125254544b12c2545445958b13725455258b125374459594b
b0ab53205c58b125254544b1232545445958b901590025455258b9002501
594459594bb8010153205c58b125254544b1282545445958b90208002545
5258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463456523456023456560234560
b08b766818b080622020b164dc4565234520b003266062636820b0032661
65b0dc236544b064234420b161634565234520b003266062636820b00326
6165b063236544b0612344b10063455458b163406544b261406145236144
59b3a67f434b456523456023456560234560b089766818b080622020b143
7f4565234520b003266062636820b003266165b07f236544b043234420b1
a64b4565234520b003266062636820b003266165b04b236544b0a62344b1
004b455458b14b406544b2a640a645236144594b5242014b5058b1080042
59435c58b108004259b3020b0a124358601b2159421610703eb0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b0112342002b001845694445694445694445
6944737373747373737475752b7373747475184569447373742b4bb02153
4bb046515a58b03cb03c45b040604459012b2b2b2b757575757575757543
584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22
025f226f227f228f229f22af2206757559435c58b6403c9f22ef22037559
2b2b01747474744544737374747575454473454473744544737475737373
737300757575737575752b2b757575752b752b435841220063032d000100
03032d0013032d0023032d0033032d0053032d000500c3032d00d3032d00
e3032d00f3032d00040083032d0093032d00a3032d00b3032d0004032d03
2d4518694474747575592b4358b900180332b330353238b80332b3616632
38b80332b3535a3238b80332b3454e3238b80332b33c413218b80332b23f
330a410f0332000100ba033200ca033200da033200ea033200fa03320005
033203324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74
002b2b2b732b74012b002b2b017373737474732b2b00732b2b002b2b2b01
7374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500737300
4569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b
2b2b2b0000>
[15785 11565 15133 15893 15661 16181 16337 16077 15205 16177 15877 16065 15621
15813 16129 13457 16337 16293 16819 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> TimesNewRomanPSMT AddT42Char 
1 1014 7 <0003006cff64039905be0025002c0035018fb11c37b80195405913693627
1a2f3788178c2f8930053a344b345f34662c79177619752c763079358905
961dad06ad07af14af15c133c635f905fa35130a19014008272605040421
352d19180420161532252d04352619050401131615180c270ebf01910015
0219000f000e019f00270163b40f0f0c0501bc01ac0004016300210199b4
22221f0d01bb018d00000015018db3af140114b80190401632e2a01c011c
1a003701203740376037e03704370e20b8032740090d0021602170210321
b80212b22ae209b801ea400c100020005f006f0004001936ba0195010100
182b4e10f45d4df4edf45d3cfd3c4e105d71f65d4dedf45ded10ed003f3c
10e4eded3f3c10fded10ede4111239123939111739123939011112391217
39111739b10602435458b90019fff0b309123426b8fff0400d0912340510
0912343510091234002b2b2b2b5931304379402a2e3128291d1e0a0b3031
2f3102062e1e326201280b2a6200311d2d62001e1f2e2d290a2762012827
0b0c00103c103c2b103c103c2b012b2b2a8181818100715d015d2b133316
161711262726353436373533151617161711232626271116161514060715
2335262627011106061514161336373636353426276c2c0b9695e14b35b7
aa4052381da3270d8b8bfc8fd1ba405ea2620162646158ad4b2838414f9d
014e89920e02488b6b4c6d7bb8135c5c050e073efed59f930efe04b0a77c
8ad2108080042328031a01d10c674e497ffc900d1823714042766c00>TimesNewRomanPSMT AddT42Char 
1 3902 16 <000100530180025802170003003f40200205801d64367f050101000200b0
030300021001500160019001a001d0010601b80134b5008004545a182b10
f6fd5d3c103c002fed3c103c3130015d2b13211521530205fdfb02179700
>TimesNewRomanPSMT AddT42Char 
1 3992 17 <00010091ffe4016f00c2000b002b401c0040060b034009403a3509403f35
5f09019f09af090209850c6a7a182b10f671722b2bed003fed3130253216
15140623222635343601002f40412e2e4141c2412e2e41412e2f4000>TimesNewRomanPSMT AddT42Char 
1 4080 18 <00010003ffe4023e058e0003005240090005cb1f6736000101b80327400d
02031402020303000002010b00b8011f40142003300360037003a003e003
0603bb01ad02cb04b8016fb1df182b10f6edf45ded003f3c3f3c87052e2b
7d10c431302b01012301023efe155001eb058efa5605aa00>TimesNewRomanPSMT AddT42Char 
1 4194 19 <0002004affe803b705680010002400bab2610820b80106b2050515b80106
b20d0d1ab8010f4012091a002640260240266026a026e026042611b8010f
400e5f006f007f008f00a00005001925ba011e010100182b4e10f45d4ded
4e105d71f64ded003fed3fed31304379404c012423242224020602010301
020607251c1b1d1b1e1b030613260f250b2618191719020621041162001f
061a6201140e116200160c1a620124012062011b08206201121015620019
0a1562002b2b2b2b012b2b2b2b2a2b2b2b2a2b2a2a811334123736333217
16111402062322272637101716333236373611342726272623220706024a
8c745a609c7c9b88d362c2816dc445397136741e2e302439293a44354834
029ee8014f52419fc5feafecfeb695e5c1f7fee8b1956172ac0139e89b73
30213d53fe9c>TimesNewRomanPSMT AddT42Char 
1 4500 20 <000100f000000306056800160097401440186018a018e018040018401802
76008600020e411301690141000901a00022000301690141000801a00023
000001f8000f016900160141000001f2400e010f0f020902010509080c02
0300ba01f70003014940120e0e0f401135300f7f0f900fa00f040f1917ba
022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c111239011139
00f5edfc01f52b2b3130005d01715d13253311141616171521353e023511
34272626232207f0014a21133c5cfe026038160a07251a254204c7a1fb87
72381e022525021d317a02dc942a201e1f00>TimesNewRomanPSMT AddT42Char 
1 4728 21 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>TimesNewRomanPSMT AddT42Char 
1 5670 23 <00020020000003b90568000a000d00d74028160d010f00450d400f03400f
012a0c011507010206010309050601040c0b0d00040c0d04060c0d0db801
1c401207081407070808030407060c08001f0d010dbb019c0006000b019f
400d050106090806060805040c0c04bb0149000300080166400b09090f03
019f03af030203b801f74018013f0001001a000f01600fa00fe00f030f06
40070107190eba018e010100182b4e10f4713c105d71f65d3c4df45d713c
10e610fd3c003f3f392f103c103c10ed10fd723c1139113901111239872e
2b047d10c4011112390f0f0f313000725d015d7172011523112311213501
331123110103b9b6a5fdc202756ea5fe2401f48efe9a0166800382fc8c02
a1fd5f00>TimesNewRomanPSMT AddT42Char 
1 6340 25 <00020058ffe803b105680018002800fc402a7509760a770e8209d925e925
060603017d037a047a168517043c0828060503231928190603205f080108
b80143b620260126260f01b8018db318000520b80106b30f0d0100ba0140
0023010f40120b1a002a402a02402a602aa02ae02a042a19ba013e001b01
0f4012001310132013301340139013a01307131929ba011e010100182b4e
10fc5d4dfde44e105d71f64dedf43c003fed3f3ced12392f5ded72121739
0111121739b10602435458b40b061b0602005d5931304379402c1c250912
1d1c1e1c020611250d2625092362011f101b6200210e236201240a266201
1c12206200220c206200002b2b2b012b2b2b2b2b2a8181005d01715d0115
0e0307363332161514070623222726113412243633010615141617163332
36353426232206039684a7a36b2490918bcc677ccc8b61be92010ff86bfd
cc12474633495789887d26570568250d4fa2c78963e0b0aa8caa5cb3011d
b60148fe58fd44875360e1422fa498abfa20>TimesNewRomanPSMT AddT42Char 
1 6718 26 <0001004cffe403a5054c000b00c1b90004ffe0b3131b3e05b8ffe0402b13
1b3e19080105032a094200400d600da00dca01c902d801d802e00d0b1a00
010b01000d400d0302050404b80193401a03021403030204030d05404735
05e2010640473506e201000400b80199b6a00b010b190c05ba02e8000302
e7400c0004100440045004a0040504bc02e6000c011e010100182b10f65d
ede44e10f45d4df4003f3ced2b10ed2b3f3c87052e2b870e7dc4b1060243
54584009740574068405840604005d5931300171725d0072012b2b132115
012301212207060727ce02d7fe3c700195fe8b713054331d054c26fabe04
c51b2e600b00>TimesNewRomanPSMT AddT42Char 
1 6964 27 <0003007cffe8038a0568001900260033017a40ba59010109331f332a276f
337a22800b800c801a801b822580268a33a918a51aa725b30cb41ab726bb
27c50ac50bd70d1607000a01060d021a0927160d171a250d250e4b018c01
830d850ea9000e3b003a014b004b0149285f015b275c336a006a01690267
266a2768337b017c27762c7c338f048f0580078008821182128f148f1698
049608941196129b16a626ad27ad33b804b608e90bea0ce90ee927e93229
070d09273a0039013832054408000c1a2704000c1a2704101720b80106b2
06052db80106b2130d1d4109010f00090140000901400030010f00100166
4010003540350240356035a035e035043523bc010f0003013e002a010f40
0a30174017901703171934ba01ee01e900182b4e10f45d4dedf4ed105d71
f6ede4f4ed003fed3fed111217390117393130437940322b2f1e22111604
08152521052362001f071d62012c142a62002e1230620122042062011e08
2062012b162d62002f112d6200002b2b2b2b012b2b2b2b2b818181810171
5d00715d0072012626353436333216151406071617161514062322272635
343625363635342623220615141617130606151416333236353427260189
a15dcca9a4c86cabb0394cdab1c16c567901317840766666803531365350
8d6d6c82264702ab84a05684bfb2724c9e6b884e66718fcb7961735ab1d6
6c7d4f6977764f34682ffee746a560819b7a5748396a>TimesNewRomanPSMT AddT42Char 
1 7496 28 <00020051ffe403a8056800170027010c40337b27d905d722d92704680479
057d087a09770c780d791377208b0883130a09088f29023b080527182127
1805031e2504000705ba016300180140b42750070107b8014340092f256f
25022525001eb80106b20e0501b8018cb41717000d18ba013e001a010fb7
0012101220120312b8016540120029402980290340296029a029e0290429
01ba01400021010fb7400abf0a020a1928ba011e01e800182b4e10f45d4d
ede4105d71f65dfde4003f3c10ed3fed12392f5ded7210f4ed1112391112
1739011112393931304379402a1b2408110c2610251c2623261f0d216200
1d0f1a62012408216200200b1e62011b111e62012209256200002b2b2b01
2b2b2b2b2b2b2b818101715d005d17353636123706232226353437363332
1716151402070623013635342626232206151417163332366c82e0d1299d
7f8fcc667bc6a77792dec6a1be02331242794d598659415f2e7e1c250275
0124af65ddb7b28ba98aabfbe2fe79816a02b9824e61e178a09ed377562c
>TimesNewRomanPSMT AddT42Char 
1 12294 40 <0001002a000004b4054c00330136403f4035671c771c9b30a918ac30bb30
e035085619700670077f087f09800680078f088f0909241f1b1d2122251f
1b2b212308401010025508210e0e1f091b0807b8ffc04021101002550721
02021f061b071c101b0201230e0f0f1d3300a52b2e002d102d022db802d3
40212c2c2b021514a51d1be81c1c1d0809ac080806ac3f077f0702000710
074f070307b8ffe640501010025507762eac2c2b1f2d2f2d022d6c1aac20
1b401bdf1b031b5350357035a035033500100613130255100c0f0f025510
0c0d0d0255102225240c10100255240c0f0f0255241a0d0d0255249e34e0
b9018700182b10f62b2b2b3cfd2b2b2b3c105df65dedf45de4fdf62b5d5d
ed3c10ed003f3c10ec10fd3c3f3c10fe5d3c10fd3c12392f3cfd3c011112
3910edec0010f52b0110edec0010f52b2b2b3130005d015d011121323736
373311232627262623211114161633333236373637330321353332373636
3511342726232335211323262627262301ac012a7427340625250e0e1252
55fed6102838e67368303e412875fbeb30302b20171a24543004150f2715
333228650502fde8232e74fe28631c2328fe415a2717202f3e7dfeac2517
1040630371811e2825fed76b50150f00>TimesNewRomanPSMT AddT42Char 
1 14268 44 <0001003300000278054c001f00c1406f21401010025521400d0d02552140
2835192161116436081f1b022122181f1b122122191f1b012123091f1b11
21231211020201081819021313025519080f0f025519040d0d0255192209
70088008e00803ff0801300850086008035f08c008d0080308040f0f0255
081a0d0d025508b8fff8b41313025508b8fffe401d101002550861207021
8021e0210330215021602103c021d0210261dc182b4e5d717210f42b2b2b
2b5d7171723c4dfd2b2b2b3c003f3c3f3c2b2b2b2b31302b2b2b2b251521
353332373635113427262726232335211523220706151114171617163302
78fdbb305426180d0a1f2c30300245315326190d0a202b3025252531207a
036c6721191218252531207afc94672119121800>TimesNewRomanPSMT AddT42Char 
4 9944 139 <00030045ffe105d0056b000f001f0041012f4025761276177f2f7f327a35
0547325928552c59386928662d6938751570307031852f0b4f0830b80343
400c315f316f317f31033139333eb8035640142022212133412034256800
391039203930390439b803544010104600032e460f331f332f333f330433
b80354401018460809309831362036229800210121b8012d401b042bb10f
361f362f363f360436e60c1c46a004b004c004f0040404b80323400d1446
500c600c020c8042545a182b10f65dedfd5ded10f45ded10f45dede4f4ed
003fedf45ded3fedf45dedf43c12392f3c10e41112395d2fe43130437940
3a011f12250e2602251e2616260a2506261a25110f1474001f011c740117
0914740019071c7401130d1074011d03107401150b1874001b051874002b
2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b81005d015d013204121514020423
222402353412241722040215141204333224123534022417132326262322
060706061514163332371706232200353400333216171633323637030ab3
0154bfbcfeaeb8b8feafbcbf0154b2a3fecaaeab0134a8a80135abaefeca
bb1427249d6e5280291e28b695c375258bf4c8fef90118da2e3d4e190c10
160b056bb7feabb9b8feaebbbb0152b8b90155b73da8fec9a9a8feccacac
0134a8a90137a8c0fee8777544392b8e4fd4c9a213cb0103b9c0010f0c1a
08111c00>TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/space 3 def
/dollar 7 def
/hyphen 16 def
/period 17 def
/slash 18 def
/zero 19 def
/one 20 def
/two 21 def
/four 23 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
/E 40 def
/I 44 def
/copyright 139 def
end
TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 36 /dollar put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 69 /E put
dup 73 /I put
dup 169 /copyright put
pop
end
%ADOEndSubsetFont
/PHVJGI+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/PHVJGI+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 8{/.notdef}rp /hyphen /period /slash 
/zero /one /two /.notdef /four /.notdef /six /seven 
/eight /nine 11{/.notdef}rp /E 3{/.notdef}rp /I 95{/.notdef}rp /copyright 
86{/.notdef}rp]
PHVJGI+TimesNewRomanPSMT nf
PHVJGI+TimesNewRomanPSMT*1 [9 0 0 -9 0 0 ]msf
11.7708 717.682 mo
(978-1-4244-9489-7/11/$26.00 \2512011 IEEE )
[4.5009 4.5009 4.5009 2.99783 4.5009 2.99783 4.5009 4.5009 4.5009 4.5009 2.99783 4.5009 
4.5009 4.5009 4.50091 2.99783 4.5009 2.5029 4.50091 4.50089 2.50291 4.5009 4.5009 4.5009 
2.2509 4.5009 4.4397 2.27971 6.78234 4.5009 4.5009 4.5009 4.5009 2.27969 2.99783 5.49983 
5.49982 5.49983 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/PHVJGI+TimesNewRomanPSMT*1 uf
/PHVJGI+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: font AdobeSongStd-Light-Adobe-GB1-1
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
